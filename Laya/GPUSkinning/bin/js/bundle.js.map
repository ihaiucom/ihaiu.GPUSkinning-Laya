{"version":3,"file":"bundle.js","sources":["../../src/GameConfig.ts","../../src/GPUSkinning/Material/SceneMaterial.ts","../../src/_test/TestSene.ts","../../src/_test/TestMaterials/TestBaseMaterial.ts","../../src/_test/TestMaterials/TestUnlitMaterial.ts","../../src/_test/TestMesh.ts","../../src/_test/TestMain.ts"],"sourcesContent":["/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\r\n\r\n/*\r\n* 游戏初始化配置;\r\n*/\r\nexport default class GameConfig{\r\n    static width:number=1334;\r\n    static height:number=750;\r\n    static scaleMode:string= Laya.Stage.SCALE_SHOWALL;\r\n    static screenMode:string=\"none\";\r\n    static alignV:string=\"top\";\r\n    static alignH:string=\"left\";\r\n    static startScene:any=\"test/TestScene.scene\";\r\n    static sceneRoot:string=\"\";\r\n    static debug:boolean=false;\r\n    static stat:boolean=true;\r\n    static physicsDebug:boolean=false;\r\n    static exportSceneToJson:boolean=true;\r\n    constructor(){}\r\n    static init(){\r\n        // var reg: Function = Laya.ClassUtils.regClass;\r\n        // reg(\"script/GameUI.ts\",GameUI);\r\n    }\r\n}\r\nGameConfig.init();","\r\nimport Shader3D = Laya.Shader3D;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport ShaderData = Laya.ShaderData;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\n\r\n\r\nexport default class SceneMaterial\r\n{\r\n    static scene: Laya.Scene3D;\r\n    static _shaderValues:ShaderData;\r\n    static Init(scene: Laya.Scene3D)\r\n    {\r\n        this.scene = scene;\r\n        this._shaderValues = (<any>scene)._shaderValues;\r\n\t\tthis.SHADERDEFINE_SCENELIGHTINGTEXTURE = Shader3D.getDefineByName(\"SCENELIGHTING\");\r\n        this.sceneLightingSize = new Vector4(-10, 20, -10, 20);\r\n    }\r\n    \r\n\tstatic SCENELIGHTINGTEXTURE: number = Shader3D.propertyNameToID(\"u_SceneLightingTexture\");\r\n\tstatic SCENELIGHTINGSIZE: number = Shader3D.propertyNameToID(\"u_SceneLightingSize\");\r\n\r\n\tstatic SHADERDEFINE_SCENELIGHTINGTEXTURE: ShaderDefine;\r\n    \r\n\t/**\r\n\t * 场景光照贴图\r\n\t */\r\n    static get sceneLightingTexture(): BaseTexture \r\n    {\r\n\t\treturn this._shaderValues.getTexture(this.SCENELIGHTINGTEXTURE);\r\n\t}\r\n\r\n    static set sceneLightingTexture(value: BaseTexture) \r\n    {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(this.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(this.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\tthis._shaderValues.setTexture(this.SCENELIGHTINGTEXTURE, value);\r\n    }\r\n\r\n    static SetSceneLightingTexture(value: BaseTexture)\r\n    {\r\n        this.sceneLightingTexture = value;\r\n    }\r\n\r\n    \r\n    \r\n\t/**\r\n\t * 场景光照贴图映射场景大小 (xMin, xLength, zMin, zLength)\r\n\t */\r\n    static get sceneLightingSize(): Vector4 \r\n    {\r\n\t\treturn this._shaderValues.getVector(this.SCENELIGHTINGSIZE);\r\n\t}\r\n\r\n    static set sceneLightingSize(value: Vector4) \r\n    {\r\n\t\tthis._shaderValues.setVector(this.SCENELIGHTINGSIZE, value);\r\n    }\r\n\r\n    static SetSceneLightingSize(value: Vector4)\r\n    {\r\n        this.sceneLightingSize = value;\r\n    }\r\n\r\n    \r\n    static LoadSceneLightingTexture(path: string)\r\n    {\r\n        Laya.loader.create(path, Laya.Handler.create(this, (texture:Laya.Texture2D)=>\r\n        {\r\n            this.sceneLightingTexture = texture;\r\n        }), null, Laya.Loader.TEXTURE2D);\r\n    }\r\n}\r\n","import Vector3 = Laya.Vector3;\r\nimport SceneMaterial from \"../GPUSkinning/Material/SceneMaterial\";\r\nexport class TestScene extends Laya.Scene3D\r\n{\r\n    static create(): TestScene\r\n    {\r\n        let node = new TestScene();\r\n        node.name = \"WarScene\";\r\n\r\n        let scene = node;\r\n        scene.init()\r\n        return scene;\r\n    }\r\n\r\n    /** 场景根节点 */\r\n    sceneRoot:Laya.Sprite3D;\r\n\r\n    /** 地图节点 */\r\n    mapNode: Laya.Sprite3D;\r\n\r\n    /** 摄像机 */\r\n    camera:Laya.Camera;\r\n    cameraNode:Laya.Sprite3D;\r\n\r\n    /** 屏幕空间层 */\r\n    screen3DLayer:Laya.Sprite3D;\r\n\r\n    /** 灯光 */\r\n    directionLight:Laya.DirectionLight;\r\n\r\n    \r\n    init()\r\n    {\r\n        window['warScene'] = this;\r\n\r\n        this.initCamera();\r\n    }\r\n\r\n    \r\n    initCamera()\r\n    {\r\n        var cameraRootNode: Laya.Sprite3D = new Laya.Sprite3D(\"CameraRoot\");\r\n        var cameraRotationXNode: Laya.Sprite3D = new Laya.Sprite3D(\"CameraRotationX\");\r\n        var camera:Laya.Camera = new Laya.Camera(0, 0.1, 1000);\r\n        var screenLayer: Laya.Sprite3D = new Laya.Sprite3D(\"ScreenLayer\");\r\n\r\n        cameraRootNode.addChild(cameraRotationXNode);\r\n        cameraRotationXNode.addChild(camera);\r\n        camera.addChild(screenLayer);\r\n\r\n        cameraRotationXNode.transform.localRotationEulerX = -20;\r\n        camera.transform.localPosition = new Vector3(0, 0, 10);\r\n\r\n        camera.clearColor = new Laya.Vector4(0.2, 0.5, 0.8, 1);\r\n        camera.clearColor = new Laya.Vector4(0.3, 0.3, 0.3, 1);\r\n        camera.orthographic = true;\r\n        // camera.orthographicVerticalSize = 5.2;\r\n        camera.orthographicVerticalSize = 2.6;\r\n        camera.farPlane = 2000;\r\n        \r\n\r\n        \r\n        this.camera = camera;\r\n        this.cameraNode = cameraRootNode;\r\n        this.screen3DLayer = screenLayer;\r\n\r\n        \r\n        //创建平行光\r\n        let directionLight: Laya.DirectionLight =<Laya.DirectionLight> this.addChild(new Laya.DirectionLight());\r\n\t\tdirectionLight.color = new Laya.Vector3(1, 1.0, 1.0);\r\n\t\tthis.lightRotaitonSrc= directionLight.transform.localRotationEuler = new Laya.Vector3(-45, 80, 0);\r\n        this.directionLight = directionLight;\r\n        directionLight.transform.rotationEuler = new Laya.Vector3(-20, 20, 0); \r\n        \r\n\r\n        this.addChild(cameraRootNode);\r\n        this.addChild(directionLight);\r\n\r\n        // this.lightRotaitonStart();\r\n\r\n        SceneMaterial.Init(this);\r\n        // SceneMaterial.LoadSceneLightingTexture(\"res3d/GPUSKinning-30/scene_lighting.png\"); \r\n\r\n        \r\n    }\r\n\r\n    lightRotaitonSrc:Vector3;\r\n    lightRotaiton:Vector3;\r\n    lightRotaitonStart()\r\n    {\r\n        this.lightRotaiton = this.directionLight.transform.localRotationEuler;\r\n        Laya.timer.frameLoop(1, this, this.onLightRotaitonLoop)\r\n    }\r\n\r\n    \r\n    lightRotaitonStop()\r\n    {\r\n        this.directionLight.transform.localRotationEuler = this.lightRotaitonSrc;\r\n        Laya.timer.clear(this, this.onLightRotaitonLoop)\r\n    }\r\n    \r\n    onLightRotaitonLoop()\r\n    {\r\n        this.lightRotaiton.x += 1;\r\n        this.lightRotaiton.y += 2;\r\n        this.lightRotaiton.z += 2;\r\n\r\n        this.directionLight.transform.localRotationEuler = this.lightRotaiton;\r\n    }\r\n    \r\n}\r\n\r\n","import Shader3D = Laya.Shader3D;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\n\r\n\r\nexport class TestBaseMaterial extends Laya.Material\r\n{\r\n    static SHADER_PATH_ROOT = \"res/shaders/test/\";\r\n    \r\n    // 获取--Shader路径--vs\r\n    static getShaderVS(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".vs\";\r\n    }\r\n\r\n    // 获取--Shader路径--ps\r\n    static getShaderPS(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".fs\";\r\n    }\r\n\r\n    \r\n    // 获取--Shader路径--glsl\r\n    static getShaderGLSL(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".glsl\";\r\n    }\r\n\r\n    \r\n    // 加载Shader\r\n    static async loadShaderGlslAsync(filename: string): Promise<string>\r\n    {\r\n        let code = await this.loadAsync(this.getShaderGLSL(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n    \r\n    // 加载Shader\r\n    static async loadShaderVSAsync(filename: string): Promise<string>\r\n    {\r\n        let code = await this.loadAsync(this.getShaderVS(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n\r\n    // 加载Shader\r\n    static async loadShaderPSAsync(filename: string): Promise<string>\r\n    {\r\n        let code =  await this.loadAsync(this.getShaderPS(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n\r\n    \r\n    // 加载资源, 异步\r\n    static async loadAsync(path: string, type: string): Promise<any>\r\n    {\r\n        return new Promise<any>((resolve)=>\r\n        {\r\n            Laya.loader.load(path, \r\n                Laya.Handler.create(null, (res: any) =>\r\n                {\r\n                    resolve(res);\r\n                }), \r\n                null, type);\r\n         });\r\n    }\r\n    \r\n    __mname:string;\r\n\r\n\r\n}","import { TestBaseMaterial } from \"./TestBaseMaterial\";\r\n\r\nimport Shader3D = Laya.Shader3D;\r\nimport SubShader = Laya.SubShader;\r\nimport SkinnedMeshSprite3D = Laya.SkinnedMeshSprite3D;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\nimport RenderState = Laya.RenderState;\r\nimport Scene3DShaderDeclaration = Laya.Scene3DShaderDeclaration;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport Material = Laya.Material;\r\n\r\nexport class TestUnlitMaterial extends TestBaseMaterial\r\n{\r\n    /** Shader名称 */\r\n    public static shaderName = \"unlit\";\r\n\r\n    private static _isInstalled: boolean = false;\r\n    public static async install()\r\n    {\r\n\t\tif(this._isInstalled)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isInstalled = true;\r\n        TestUnlitMaterial.__initDefine__();\r\n        await TestUnlitMaterial.initShader();\r\n\r\n        TestUnlitMaterial.defaultMaterial = new TestUnlitMaterial();\r\n        TestUnlitMaterial.defaultMaterial.lock = true;\r\n    }\r\n\r\n    \r\n    private static async initShader()\r\n    {\r\n        var vs: string = await this.loadShaderVSAsync(this.shaderName);\r\n        var ps: string = await this.loadShaderPSAsync(this.shaderName);\r\n        \r\n        \r\n        var attributeMap: object;\r\n        var uniformMap: object;\r\n        var stateMap: object;\r\n        var shader:Shader3D;\r\n        var subShader:SubShader;\r\n\r\n        attributeMap = \r\n        {\r\n\t\t\t'a_Position': VertexMesh.MESH_POSITION0,\r\n\t\t\t'a_Color': VertexMesh.MESH_COLOR0,\r\n\t\t\t'a_MvpMatrix': VertexMesh.MESH_MVPMATRIX_ROW0\r\n\t\t};\r\n\r\n        uniformMap = \r\n        {\r\n\t\t\t\"u_AlbedoColor\": Shader3D.PERIOD_MATERIAL,\r\n            \r\n            'u_MvpMatrix': Shader3D.PERIOD_SPRITE,\r\n            \r\n\t\t\t'u_FogStart': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogRange': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogColor': Shader3D.PERIOD_SCENE\r\n\t\t};\r\n\r\n        stateMap = \r\n        {\r\n\t\t\t's_Cull': Shader3D.RENDER_STATE_CULL,\r\n\t\t\t's_Blend': Shader3D.RENDER_STATE_BLEND,\r\n\t\t\t's_BlendSrc': Shader3D.RENDER_STATE_BLEND_SRC,\r\n\t\t\t's_BlendDst': Shader3D.RENDER_STATE_BLEND_DST,\r\n\t\t\t's_DepthTest': Shader3D.RENDER_STATE_DEPTH_TEST,\r\n\t\t\t's_DepthWrite': Shader3D.RENDER_STATE_DEPTH_WRITE\r\n\t\t};\r\n\r\n        \r\n        shader = Shader3D.add(this.shaderName, null, null, true);\r\n        subShader =  new SubShader(attributeMap, uniformMap);\r\n        shader.addSubShader(subShader);\r\n        \r\n\r\n        var mainPass =  subShader.addShaderPass(vs, ps, stateMap);\r\n        // mainPass.renderState.cull = Laya.RenderState.CULL_BACK;\r\n        \r\n        \r\n    }\r\n\r\n    \r\n\t/** 默认材质，禁止修改*/\r\n\tstatic defaultMaterial: TestUnlitMaterial;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __initDefine__(): void {\r\n\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n        this.setShaderName(TestUnlitMaterial.shaderName);\r\n        \r\n        this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n\t\t\r\n        this.alphaTest = false;\r\n        \r\n\t\tthis._shaderValues.setBool(Shader3D.propertyNameToID(\"s_DepthWrite\"), false);\r\n\t\tthis._shaderValues.setInt(Shader3D.propertyNameToID(\"s_DepthTest\"),  RenderState.DEPTHTEST_LESS);\r\n\t\tthis._shaderValues.setInt(Shader3D.propertyNameToID(\"s_Cull\"),  RenderState.CULL_BACK);\r\n\t\tthis._shaderValues.setInt(Shader3D.propertyNameToID(\"s_Blend\"),  RenderState.BLEND_ENABLE_ALL);\r\n\t\tthis._shaderValues.setInt(Shader3D.propertyNameToID(\"s_BlendSrc\"),  RenderState.BLENDPARAM_SRC_ALPHA);\r\n\t\tthis._shaderValues.setInt(Shader3D.propertyNameToID(\"s_BlendDst\"),  RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n\t\t\r\n\t\tthis._shaderValues.setVector(TestUnlitMaterial.ALBEDOCOLOR, this._albedoColor);\r\n\t}\r\n\r\n\t\r\n\tstatic ALBEDOCOLOR: number = Shader3D.propertyNameToID(\"u_AlbedoColor\");\r\n\tprivate _albedoColor: Vector4 = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\t/**\r\n\t * 反照率颜色。\r\n\t */\r\n\tget albedoColor(): Vector4 {\r\n\t\treturn this._albedoColor;\r\n\t}\r\n\r\n\tset albedoColor(value: Vector4) {\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(TestUnlitMaterial.ALBEDOCOLOR));\r\n\t\tVector4.scale(value, 1, finalAlbedo);\r\n\t\tthis._albedoColor = value;\r\n\t\tthis._shaderValues.setVector(TestUnlitMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t}\r\n\r\n}","import { TestScene } from \"./TestSene\";\r\n\r\nimport IndexFormat = Laya.IndexFormat;\r\nimport IndexBuffer3D = Laya.IndexBuffer3D;\r\nimport LayaGL = Laya.LayaGL;\r\nimport VertexBuffer3D = Laya.VertexBuffer3D;\r\nimport VertexDeclaration = Laya.VertexDeclaration;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport Mesh = Laya.Mesh;\r\nimport SubMesh = Laya.SubMesh;\r\nimport MeshSprite3D = Laya.MeshSprite3D;\r\nimport Material = Laya.Material;\r\nimport Texture2D = Laya.Texture2D;\r\nimport { TestRotation } from \"./TestRotation\";\r\nimport { TestUnlitMaterial } from \"./TestMaterials/TestUnlitMaterial\";\r\n\r\n\r\nexport default class TestMesh\r\n{\r\n    scene: TestScene;\r\n    constructor()\r\n    {\r\n        this.scene = TestScene.create();\r\n        Laya.stage.addChild(this.scene);\r\n        this.InitAsync();\r\n    }\r\n\r\n    async InitAsync()\r\n    {\r\n        await TestUnlitMaterial.install();\r\n        console.log(\"TestUnlitMaterial.install\");\r\n        \r\n        var vertexDeclaration: VertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,COLOR\");\r\n        \r\n        var vertices = new Float32Array([\r\n            0.5, 0, 0,   1, 0, 0, 0.5,\r\n            1, 1, 1,    0, 1, 0, 0.5, \r\n            1, 0, 0,    0, 0, 1, 0.5, \r\n\r\n            -0.5, 0, 0,    0.5, 0, 0, 0.5, \r\n            -1, -1, -1,    0.0, 0.5, 0, 0.5, \r\n            -1, 0, 0,      0.0, 0.0, 0.5, 0.5, \r\n\r\n        ]);\r\n\r\n        var indices = new Uint16Array([\r\n            0, 1, 2,\r\n            3, 4, 5\r\n        ]);\r\n        \r\n\r\n        var gl: WebGLRenderingContext = LayaGL.instance;\r\n\r\n        // 顶点数据buff\r\n        var vertexBuffer = new VertexBuffer3D(vertices.length * 4, gl.STATIC_DRAW, true);\r\n        vertexBuffer.vertexDeclaration = vertexDeclaration;\r\n        vertexBuffer.setData(<ArrayBuffer>vertices.buffer);\r\n        \r\n        // 索引buff\r\n        var indexBuffer: IndexBuffer3D = new IndexBuffer3D(<number>IndexFormat.UInt16, indices.length, gl.STATIC_DRAW, true);\r\n        indexBuffer.setData(indices);\r\n\r\n        \r\n\r\n        var mesh = new Mesh();\r\n\t\tvar subMeshes: SubMesh[] = [];\r\n\r\n        // 设置mesh\r\n\t\tmesh._vertexBuffer = vertexBuffer;\r\n        mesh._vertexCount = vertexBuffer._byteLength / vertexDeclaration.vertexStride;\r\n        mesh._indexBuffer = indexBuffer;\r\n        mesh._setBuffer(vertexBuffer, indexBuffer);\r\n      \r\n        // 创建SubMesh\r\n        this.CreateSubMesh(mesh, subMeshes, vertexBuffer, indexBuffer, 0, 3);\r\n        this.CreateSubMesh(mesh, subMeshes, vertexBuffer, indexBuffer, 3, 3);\r\n\r\n\r\n        \r\n        \r\n\t\tmesh._setSubMeshes(subMeshes);\r\n\t\tmesh.calculateBounds();\r\n\r\n        var sprite = new MeshSprite3D(mesh);\r\n        // sprite.addComponent(TestRotation);\r\n        window['sprite'] = sprite;\r\n        var material1 = new TestUnlitMaterial();\r\n        var material2 = new TestUnlitMaterial();\r\n        material2.albedoColor = new Laya.Vector4(1.0, 0.0, 0.0, 1.0);\r\n        sprite.meshRenderer.materials = [material1, material2];\r\n\r\n        this.scene.addChild(sprite);\r\n\r\n       \r\n    }\r\n\r\n    private CreateSubMesh(mesh: Mesh, subMeshes: SubMesh[], vertexBuffer: VertexBuffer3D, indexBuffer: IndexBuffer3D,\r\n        indexStart: number, indexCount: number\r\n    )\r\n    {\r\n        var subMesh = new SubMesh(mesh);\r\n\r\n\t\tsubMesh._vertexBuffer = vertexBuffer;\r\n\t\tsubMesh._indexBuffer = indexBuffer;\r\n        subMesh._setIndexRange(indexStart, indexCount);\r\n\r\n        \r\n\t\tvar subIndexBufferStart: number[] = subMesh._subIndexBufferStart;\r\n\t\tvar subIndexBufferCount: number[] = subMesh._subIndexBufferCount;\r\n        var boneIndicesList: Uint16Array[] = subMesh._boneIndicesList;\r\n        \r\n        \r\n\t\tsubIndexBufferStart.length = 1;\r\n\t\tsubIndexBufferCount.length = 1;\r\n        boneIndicesList.length = 1;\r\n        \r\n        \r\n        subIndexBufferStart[0] = indexStart;\r\n        subIndexBufferCount[0] = indexCount;\r\n        \r\n\t\tsubMeshes.push(subMesh);\r\n    }\r\n\r\n\r\n}","import TestShader from \"./TestShader\";\r\nimport GameConfig from \"../GameConfig\";\r\nimport GPUSkining from \"../GPUSkinning/GPUSkining\";\r\nimport TestMesh from \"./TestMesh\";\r\n\r\n class TestMain \r\n{\r\n    constructor() \r\n    {\r\n\t\tthis.InitLaya();\r\n\r\n\r\n\t\tif(Laya.Browser.onWeiXin)\r\n\t\t{\r\n\t\t\tLaya.URL.basePath = \"http://10.10.10.188:8900/bin/\";\r\n\t\t}\r\n\t\t\r\n\t\t// 启动游戏\r\n\t\t// new TestShader();\r\n\r\n\t\tnew TestMesh();\r\n\t\t\r\n\t\t// this.TestFun();\r\n\r\n\t}\r\n\r\n\tTestFun()\r\n\t{\r\n\t\tfor(let i = 0; i < 10; i ++)\r\n\t\t{\r\n\t\t\tlet ii = i;\r\n\t\t\tlet handler = Laya.Handler.create(null, (r)=>{\r\n\t\t\t\tconsole.log(ii + \", \" + r);\r\n\t\t\t})\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\thandler.runWith(i);\r\n\t\t\t}, 100);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\r\n\tInitLaya()\r\n\t{\r\n\t\t//根据IDE设置初始化引擎\t\t\r\n\t\tif (window[\"Laya3D\"]) Laya3D.init(GameConfig.width, GameConfig.height);\r\n\t\telse Laya.init(GameConfig.width, GameConfig.height, Laya[\"WebGL\"]);\r\n\t\tLaya[\"Physics\"] && Laya[\"Physics\"].enable();\r\n\t\tLaya[\"DebugPanel\"] && Laya[\"DebugPanel\"].enable();\r\n\t\tLaya.stage.scaleMode = GameConfig.scaleMode;\r\n\t\tLaya.stage.screenMode = GameConfig.screenMode;\r\n\t\tLaya.stage.alignV = GameConfig.alignV;\r\n\t\tLaya.stage.alignH = GameConfig.alignH;\r\n\t\t//兼容微信不支持加载scene后缀场景\r\n\t\tLaya.URL.exportSceneToJson = GameConfig.exportSceneToJson;\r\n\r\n\t\tLaya.Shader3D.debugMode = true;\r\n\r\n\t\t//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）\r\n\t\t// if (GameConfig.debug || Laya.Utils.getQueryString(\"debug\") == \"true\") Laya.enableDebugPanel();\r\n\t\tif (GameConfig.physicsDebug && Laya[\"PhysicsDebugDraw\"]) Laya[\"PhysicsDebugDraw\"].enable();\r\n\t\tif (GameConfig.stat) Laya.Stat.show();\r\n\t\tLaya.alertGlobalError = true;\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n//激活启动类\r\nnew TestMain();"],"names":["Shader3D","Vector4","VertexMesh"],"mappings":";;;UAKqB,UAAU;QAa3B,iBAAe;QACf,OAAO,IAAI;SAGV;;IAhBM,gBAAK,GAAQ,IAAI,CAAC;IAClB,iBAAM,GAAQ,GAAG,CAAC;IAClB,oBAAS,GAAS,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;IAC3C,qBAAU,GAAQ,MAAM,CAAC;IACzB,iBAAM,GAAQ,KAAK,CAAC;IACpB,iBAAM,GAAQ,MAAM,CAAC;IACrB,qBAAU,GAAK,sBAAsB,CAAC;IACtC,oBAAS,GAAQ,EAAE,CAAC;IACpB,gBAAK,GAAS,KAAK,CAAC;IACpB,eAAI,GAAS,IAAI,CAAC;IAClB,uBAAY,GAAS,KAAK,CAAC;IAC3B,4BAAiB,GAAS,IAAI,CAAC;IAO1C,UAAU,CAAC,IAAI,EAAE,CAAC;;ICvBlB,IAAO,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAIhC,IAAO,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAG9B,UAAqB,aAAa;QAI9B,OAAO,IAAI,CAAC,KAAmB;YAE3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,aAAa,GAAS,KAAM,CAAC,aAAa,CAAC;YACtD,IAAI,CAAC,iCAAiC,GAAG,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;YAC7E,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;SAC1D;QAUD,WAAW,oBAAoB;YAEjC,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;SAChE;QAEE,WAAW,oBAAoB,CAAC,KAAkB;YAEpD,IAAI,KAAK;gBACR,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;;gBAErE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;YACzE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;SAC7D;QAED,OAAO,uBAAuB,CAAC,KAAkB;YAE7C,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;SACrC;QAOD,WAAW,iBAAiB;YAE9B,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC5D;QAEE,WAAW,iBAAiB,CAAC,KAAc;YAE7C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;SACzD;QAED,OAAO,oBAAoB,CAAC,KAAc;YAEtC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAClC;QAGD,OAAO,wBAAwB,CAAC,IAAY;YAExC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,OAAsB;gBAEtE,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;aACvC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACpC;;IAtDG,kCAAoB,GAAW,QAAQ,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;IACnF,+BAAiB,GAAW,QAAQ,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;;ICrBrF,IAAO,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC9B,UACa,SAAU,SAAQ,IAAI,CAAC,OAAO;QAEvC,OAAO,MAAM;YAET,IAAI,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;YAEvB,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,CAAC,IAAI,EAAE,CAAA;YACZ,OAAO,KAAK,CAAC;SAChB;QAmBD,IAAI;YAEA,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YAE1B,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QAGD,UAAU;YAEN,IAAI,cAAc,GAAkB,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACpE,IAAI,mBAAmB,GAAkB,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YAC9E,IAAI,MAAM,GAAe,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YACvD,IAAI,WAAW,GAAkB,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAElE,cAAc,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;YAC7C,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACrC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAE7B,mBAAmB,CAAC,SAAS,CAAC,mBAAmB,GAAG,CAAC,EAAE,CAAC;YACxD,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAEvD,MAAM,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;YAE3B,MAAM,CAAC,wBAAwB,GAAG,GAAG,CAAC;YACtC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;YAIvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;YAIjC,IAAI,cAAc,GAA6C,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;YAC9G,cAAc,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC,gBAAgB,GAAE,cAAc,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAC5F,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,cAAc,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAGtE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAI9B,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAI5B;QAID,kBAAkB;YAEd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC;YACtE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAA;SAC1D;QAGD,iBAAiB;YAEb,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACzE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAA;SACnD;QAED,mBAAmB;YAEf,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC;YAE1B,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC;SACzE;KAEJ;;UCxGY,gBAAiB,SAAQ,IAAI,CAAC,QAAQ;QAK/C,OAAO,WAAW,CAAC,QAAgB;YAE/B,OAAO,IAAI,CAAC,gBAAgB,GAAG,QAAQ,GAAI,KAAK,CAAC;SACpD;QAGD,OAAO,WAAW,CAAC,QAAgB;YAE/B,OAAO,IAAI,CAAC,gBAAgB,GAAG,QAAQ,GAAI,KAAK,CAAC;SACpD;QAID,OAAO,aAAa,CAAC,QAAgB;YAEjC,OAAO,IAAI,CAAC,gBAAgB,GAAG,QAAQ,GAAI,OAAO,CAAC;SACtD;QAID,aAAa,mBAAmB,CAAC,QAAgB;YAE7C,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAChF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAClC;QAGD,aAAa,iBAAiB,CAAC,QAAgB;YAE3C,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9E,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAClC;QAGD,aAAa,iBAAiB,CAAC,QAAgB;YAE3C,IAAI,IAAI,GAAI,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/E,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAClC;QAID,aAAa,SAAS,CAAC,IAAY,EAAE,IAAY;YAE7C,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO;gBAE5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EACjB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,GAAQ;oBAE/B,OAAO,CAAC,GAAG,CAAC,CAAC;iBAChB,CAAC,EACF,IAAI,EAAE,IAAI,CAAC,CAAC;aAClB,CAAC,CAAC;SACP;;IAxDM,iCAAgB,GAAG,mBAAmB,CAAC;;ICNlD,IAAOA,UAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAChC,IAAO,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAElC,IAAO,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAEpC,IAAOC,SAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC9B,IAAO,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IAGtC,IAAO,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAEhC,UAAa,iBAAkB,SAAQ,gBAAgB;QAoFtD;YACC,KAAK,EAAE,CAAC;YAmBD,iBAAY,GAAY,IAAIA,SAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAlBzD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAEjD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,uBAAuB,CAAC;YAEpD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAE7B,IAAI,CAAC,aAAa,CAAC,OAAO,CAACD,UAAQ,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC;YAC7E,IAAI,CAAC,aAAa,CAAC,MAAM,CAACA,UAAQ,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAG,WAAW,CAAC,cAAc,CAAC,CAAC;YACjG,IAAI,CAAC,aAAa,CAAC,MAAM,CAACA,UAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAG,WAAW,CAAC,SAAS,CAAC,CAAC;YACvF,IAAI,CAAC,aAAa,CAAC,MAAM,CAACA,UAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC;YAC/F,IAAI,CAAC,aAAa,CAAC,MAAM,CAACA,UAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAG,WAAW,CAAC,oBAAoB,CAAC,CAAC;YACtG,IAAI,CAAC,aAAa,CAAC,MAAM,CAACA,UAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAG,WAAW,CAAC,8BAA8B,CAAC,CAAC;YAEhH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAC/E;QA9FS,aAAa,OAAO;YAE7B,IAAG,IAAI,CAAC,YAAY,EACpB;gBACC,OAAO;aACP;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACnB,iBAAiB,CAAC,cAAc,EAAE,CAAC;YACnC,MAAM,iBAAiB,CAAC,UAAU,EAAE,CAAC;YAErC,iBAAiB,CAAC,eAAe,GAAG,IAAI,iBAAiB,EAAE,CAAC;YAC5D,iBAAiB,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;SACjD;QAGO,aAAa,UAAU;YAE3B,IAAI,EAAE,GAAW,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/D,IAAI,EAAE,GAAW,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAG/D,IAAI,YAAoB,CAAC;YACzB,IAAI,UAAkB,CAAC;YACvB,IAAI,QAAgB,CAAC;YACrB,IAAI,MAAe,CAAC;YACpB,IAAI,SAAmB,CAAC;YAExB,YAAY;gBACZ;oBACL,YAAY,EAAE,UAAU,CAAC,cAAc;oBACvC,SAAS,EAAE,UAAU,CAAC,WAAW;oBACjC,aAAa,EAAE,UAAU,CAAC,mBAAmB;iBAC7C,CAAC;YAEI,UAAU;gBACV;oBACL,eAAe,EAAEA,UAAQ,CAAC,eAAe;oBAEhC,aAAa,EAAEA,UAAQ,CAAC,aAAa;oBAE9C,YAAY,EAAEA,UAAQ,CAAC,YAAY;oBACnC,YAAY,EAAEA,UAAQ,CAAC,YAAY;oBACnC,YAAY,EAAEA,UAAQ,CAAC,YAAY;iBACnC,CAAC;YAEI,QAAQ;gBACR;oBACL,QAAQ,EAAEA,UAAQ,CAAC,iBAAiB;oBACpC,SAAS,EAAEA,UAAQ,CAAC,kBAAkB;oBACtC,YAAY,EAAEA,UAAQ,CAAC,sBAAsB;oBAC7C,YAAY,EAAEA,UAAQ,CAAC,sBAAsB;oBAC7C,aAAa,EAAEA,UAAQ,CAAC,uBAAuB;oBAC/C,cAAc,EAAEA,UAAQ,CAAC,wBAAwB;iBACjD,CAAC;YAGI,MAAM,GAAGA,UAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACzD,SAAS,GAAI,IAAI,SAAS,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;YACrD,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAG/B,IAAI,QAAQ,GAAI,SAAS,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;SAI7D;QASJ,OAAO,cAAc;SAEpB;QA0BD,IAAI,WAAW;YACd,OAAO,IAAI,CAAC,YAAY,CAAC;SACzB;QAED,IAAI,WAAW,CAAC,KAAc;YAC7B,IAAI,WAAW,GAAsB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,CAAE,CAAC;YAClGC,SAAO,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;YACrC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;SACzE;;IAlHgB,4BAAU,GAAG,OAAO,CAAC;IAEpB,8BAAY,GAAY,KAAK,CAAC;IAkGzC,6BAAW,GAAWD,UAAQ,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;;IClHzE,IAAO,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IACtC,IAAO,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IAC1C,IAAO,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC5B,IAAO,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;IAE5C,IAAOE,YAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACpC,IAAO,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACxB,IAAO,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC9B,IAAO,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AAIxC,UAGqB,QAAQ;QAGzB;YAEI,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;QAED,MAAM,SAAS;YAEX,MAAM,iBAAiB,CAAC,OAAO,EAAE,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;YAEzC,IAAI,iBAAiB,GAAsBA,YAAU,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;YAE7F,IAAI,QAAQ,GAAG,IAAI,YAAY,CAAC;gBAC5B,GAAG,EAAE,CAAC,EAAE,CAAC,EAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG;gBACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG;gBACxB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG;gBAExB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAK,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG;gBAC7B,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAK,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG;gBAC/B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAO,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;aAEpC,CAAC,CAAC;YAEH,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC;gBAC1B,CAAC,EAAE,CAAC,EAAE,CAAC;gBACP,CAAC,EAAE,CAAC,EAAE,CAAC;aACV,CAAC,CAAC;YAGH,IAAI,EAAE,GAA0B,MAAM,CAAC,QAAQ,CAAC;YAGhD,IAAI,YAAY,GAAG,IAAI,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACjF,YAAY,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YACnD,YAAY,CAAC,OAAO,CAAc,QAAQ,CAAC,MAAM,CAAC,CAAC;YAGnD,IAAI,WAAW,GAAkB,IAAI,aAAa,CAAS,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACrH,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAI7B,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5B,IAAI,SAAS,GAAc,EAAE,CAAC;YAG9B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAC5B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC;YAC9E,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;YAG3C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAK3E,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;YAEjB,IAAI,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;YAEpC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;YAC1B,IAAI,SAAS,GAAG,IAAI,iBAAiB,EAAE,CAAC;YACxC,IAAI,SAAS,GAAG,IAAI,iBAAiB,EAAE,CAAC;YACxC,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC7D,MAAM,CAAC,YAAY,CAAC,SAAS,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YAEvD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAG/B;QAEO,aAAa,CAAC,IAAU,EAAE,SAAoB,EAAE,YAA4B,EAAE,WAA0B,EAC5G,UAAkB,EAAE,UAAkB;YAGtC,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;YAEtC,OAAO,CAAC,aAAa,GAAG,YAAY,CAAC;YACrC,OAAO,CAAC,YAAY,GAAG,WAAW,CAAC;YAC7B,OAAO,CAAC,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAGrD,IAAI,mBAAmB,GAAa,OAAO,CAAC,oBAAoB,CAAC;YACjE,IAAI,mBAAmB,GAAa,OAAO,CAAC,oBAAoB,CAAC;YAC3D,IAAI,eAAe,GAAkB,OAAO,CAAC,gBAAgB,CAAC;YAGpE,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;YAC/B,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;YACzB,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;YAG3B,mBAAmB,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;YACpC,mBAAmB,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;YAE1C,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrB;KAGJ;;ICvHA,MAAM,QAAQ;QAEX;YAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;YAGhB,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EACxB;gBACC,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,+BAA+B,CAAC;aACpD;YAKD,IAAI,QAAQ,EAAE,CAAC;SAIf;QAED,OAAO;YAEN,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAC3B;gBACC,IAAI,EAAE,GAAG,CAAC,CAAC;gBACX,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;oBACzC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;iBAC3B,CAAC,CAAA;gBAEF,UAAU,CAAC;oBACV,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACnB,EAAE,GAAG,CAAC,CAAC;aAER;SACD;QAID,QAAQ;YAGP,IAAI,MAAM,CAAC,QAAQ,CAAC;gBAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;;gBAClE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC;YAClD,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;YAC5C,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;YAC9C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YACtC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAEtC,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,UAAU,CAAC,iBAAiB,CAAC;YAE1D,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;YAI/B,IAAI,UAAU,CAAC,YAAY,IAAI,IAAI,CAAC,kBAAkB,CAAC;gBAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC;YAC3F,IAAI,UAAU,CAAC,IAAI;gBAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACtC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC7B;KAGD;IAID,IAAI,QAAQ,EAAE,CAAC;;;;"}