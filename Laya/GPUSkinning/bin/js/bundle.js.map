{"version":3,"file":"bundle.js","sources":["../../src/GPUSkinning/Mesh/GPUSkiningVertexMesh.ts","../../src/GPUSkinning/Mesh/GPUSkiningLoadModelV05.ts","../../src/GPUSkinning/Mesh/GPUSkiningMeshReader.ts","../../src/GPUSkinning/Mesh/GPUSkiningMesh.ts","../../src/GPUSkinning/Datas/ByteReadUtil.ts","../../src/GPUSkinning/Datas/GPUSkinningBone.ts","../../src/GPUSkinning/Datas/GPUSkinningWrapMode.ts","../../src/GPUSkinning/Datas/GPUSkinningAnimEvent.ts","../../src/GPUSkinning/Datas/GPUSkinningFrame.ts","../../src/GPUSkinning/Datas/GPUSkinningClip.ts","../../src/GPUSkinning/Datas/GPUSkinningQuality.ts","../../src/GPUSkinning/Datas/GPUSkinningAnimation.ts","../../src/GPUSkinning/GPUSKinningCullingMode.ts","../../src/GPUSkinning/GPUSkinningBetterList.ts","../../src/GPUSkinning/GPUSkinningExecuteOncePerFrame.ts","../../src/GPUSkinning/GPUSkinningMaterial.ts","../../src/GPUSkinning/MaterialState.ts","../../src/GPUSkinning/GPUSkinningPlayerResources.ts","../../src/GPUSkinning/GPUSkinningPlayerMonoManager.ts","../../src/GPUSkinning/GPUSkinningPlayerJoint.ts","../../src/GPUSkinning/GPUSkinningPlayer.ts","../../src/GPUSkinning/GPUSkinningPlayerMono.ts","../../src/GPUSkinning/Material/GPUSkinningBaseMaterial.ts","../../src/LayaExtends/LayaUtil.ts","../../src/LayaExtends/LayaExtends_Node.ts","../../src/GPUSkinning/Material/GPUSkinningCartoon2TextureMaterial.ts","../../src/GPUSkinning/Material/SceneMaterial.ts","../../src/GPUSkinning/Material/GPUSkinningToonV2.ts","../../src/GPUSkinning/Material/GPUSkinningToonWeaponV2.ts","../../src/GPUSkinning/GPUSkining.ts","../../src/GPUSkinning/GPUSKiningLib.ts"],"sourcesContent":["import VertexMesh = Laya.VertexMesh;\r\nimport VertexDeclaration = Laya.VertexDeclaration;\r\nimport VertexElement = Laya.VertexElement;\r\nimport VertexElementFormat = Laya.VertexElementFormat;\r\n\r\n\r\nexport default class GPUSkiningVertexMesh extends VertexMesh\r\n{\r\n    \r\n\tstatic MESH_TEXTURECOORDINATE2: number = 6;\r\n\tprivate static _declarationMap: any = {};\r\n\r\n    /**\r\n\t * 获取顶点声明。\r\n\t * @param vertexFlag 顶点声明标记字符,格式为:\"POSITION,NORMAL,COLOR,UV,UV1,UV2,BLENDWEIGHT,BLENDINDICES,TANGENT\"。\r\n\t * @return 顶点声明。\r\n\t */\r\n\tstatic getVertexDeclaration(vertexFlag: string, compatible: boolean = true): VertexDeclaration {\r\n\t\tvar verDec: VertexDeclaration = this._declarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\r\n\t\tif (!verDec) {\r\n\t\t\tvar subFlags: any[] = vertexFlag.split(\",\");\r\n\t\t\tvar offset: number = 0;\r\n\t\t\tvar elements: any[] = [];\r\n\t\t\tfor (var i: number = 0, n: number = subFlags.length; i < n; i++) {\r\n\t\t\t\tvar element: VertexElement;\r\n\t\t\t\tswitch (subFlags[i]) {\r\n\t\t\t\t\tcase \"POSITION\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, this.MESH_POSITION0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, this.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"COLOR\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_COLOR0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, this.MESH_TEXTURECOORDINATE0);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV1\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_TEXTURECOORDINATE1);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n                    case \"UV2\":\r\n                        element = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_TEXTURECOORDINATE2);\r\n\t\t\t\t\t\toffset += 16;\r\n                        break;\r\n\t\t\t\t\tcase \"BLENDWEIGHT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_BLENDWEIGHT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDINDICES\":\r\n\t\t\t\t\t\tif (compatible) {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_BLENDINDICES0);//兼容\r\n\t\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Byte4, this.MESH_BLENDINDICES0);\r\n\t\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"TANGENT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_TANGENT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tconsole.log(\"TANGENT\", element)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow \"VertexMesh: unknown vertex flag.\";\r\n\t\t\t\t}\r\n\t\t\t\telements.push(element);\r\n\t\t\t}\r\n\t\t\tverDec = new VertexDeclaration(offset, elements);\r\n\t\t\tthis._declarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\r\n\t\t}\r\n\t\treturn verDec;\r\n\t}\r\n}","// import { IndexBuffer3D } from \"../graphics/IndexBuffer3D\"\r\n// import { VertexMesh } from \"../graphics/Vertex/VertexMesh\"\r\n// import { VertexBuffer3D } from \"../graphics/VertexBuffer3D\"\r\n// import { VertexDeclaration } from \"../graphics/VertexDeclaration\"\r\n// import { HalfFloatUtils } from \"../math/HalfFloatUtils\"\r\n// import { Matrix4x4 } from \"../math/Matrix4x4\"\r\n// import { Mesh } from \"../resource/models/Mesh\"\r\n// import { SubMesh } from \"../resource/models/SubMesh\"\r\n// import { Byte } from \"../../utils/Byte\"\r\n// import { LayaGL } from \"../../layagl/LayaGL\";\r\n// import { IndexFormat } from \"../graphics/IndexFormat\"\r\n\r\nimport IndexBuffer3D = Laya.IndexBuffer3D;\r\nimport VertexBuffer3D = Laya.VertexBuffer3D;\r\nimport VertexDeclaration = Laya.VertexDeclaration;\r\nimport HalfFloatUtils = Laya.HalfFloatUtils;\r\nimport Matrix4x4 = Laya.Matrix4x4;\r\nimport Mesh = Laya.Mesh;\r\nimport SubMesh = Laya.SubMesh;\r\nimport Byte = Laya.Byte;\r\nimport IndexFormat = Laya.IndexFormat;\r\nimport LayaGL = Laya.LayaGL;\r\nimport GPUSkiningVertexMesh from \"./GPUSkiningVertexMesh\";\r\n\r\n\r\n/**\r\n * @internal\r\n * <code>LoadModelV05</code> 类用于模型加载。\r\n */\r\nexport class GPUSkiningLoadModelV05 {\r\n\r\n\t/**@internal */\r\n\tprivate static _BLOCK: any = { count: 0 };\r\n\t/**@internal */\r\n\tprivate static _DATA: any = { offset: 0, size: 0 };\r\n\r\n\t/**@internal */\r\n\tprivate static _strings: any[] = [];\r\n\t/**@internal */\r\n\tprivate static _readData: Byte;\r\n\t/**@internal */\r\n\tprivate static _version: string;\r\n\t/**@internal */\r\n\tprivate static _mesh: Mesh;\r\n\t/**@internal */\r\n\tprivate static _subMeshes: SubMesh[];\r\n\t/**@internal */\r\n\t static _bindPoseIndices: number[] = [];\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic parse(readData: Byte, version: string, mesh: Mesh, subMeshes: SubMesh[]): void {\r\n\t\tGPUSkiningLoadModelV05._mesh = mesh;\r\n\t\tGPUSkiningLoadModelV05._subMeshes = subMeshes;\r\n\t\tGPUSkiningLoadModelV05._version = version;\r\n\t\tGPUSkiningLoadModelV05._readData = readData;\r\n\r\n\r\n\t\tGPUSkiningLoadModelV05.READ_DATA();\r\n\t\tGPUSkiningLoadModelV05.READ_BLOCK();\r\n\t\tGPUSkiningLoadModelV05.READ_STRINGS();\r\n\t\tfor (var i: number = 0, n: number = GPUSkiningLoadModelV05._BLOCK.count; i < n; i++) {\r\n\t\t\tGPUSkiningLoadModelV05._readData.pos = GPUSkiningLoadModelV05._BLOCK.blockStarts[i];\r\n\t\t\tvar index: number = GPUSkiningLoadModelV05._readData.getUint16();\r\n\t\t\tvar blockName: string = GPUSkiningLoadModelV05._strings[index];\r\n\t\t\tvar fn: Function = GPUSkiningLoadModelV05[\"READ_\" + blockName];\r\n\t\t\tif (fn == null)\r\n\t\t\t\tthrow new Error(\"model file err,no this function:\" + index + \" \" + blockName);\r\n\t\t\telse\r\n\t\t\t\tfn.call(null);\r\n\t\t}\r\n\t\tGPUSkiningLoadModelV05._mesh._bindPoseIndices = new Uint16Array(GPUSkiningLoadModelV05._bindPoseIndices);\r\n\t\tGPUSkiningLoadModelV05._bindPoseIndices.length = 0;\r\n\t\tGPUSkiningLoadModelV05._strings.length = 0;\r\n\t\tGPUSkiningLoadModelV05._readData = null;\r\n\t\tGPUSkiningLoadModelV05._version = null;\r\n\t\tGPUSkiningLoadModelV05._mesh = null;\r\n\t\tGPUSkiningLoadModelV05._subMeshes = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static _readString(): string {\r\n\t\treturn GPUSkiningLoadModelV05._strings[GPUSkiningLoadModelV05._readData.getUint16()];\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_DATA(): void {\r\n\t\tGPUSkiningLoadModelV05._DATA.offset = GPUSkiningLoadModelV05._readData.getUint32();\r\n\t\tGPUSkiningLoadModelV05._DATA.size = GPUSkiningLoadModelV05._readData.getUint32();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_BLOCK(): void {\r\n\t\tvar count: number = GPUSkiningLoadModelV05._BLOCK.count = GPUSkiningLoadModelV05._readData.getUint16();\r\n\t\tvar blockStarts: any[] = GPUSkiningLoadModelV05._BLOCK.blockStarts = [];\r\n\t\tvar blockLengths: any[] = GPUSkiningLoadModelV05._BLOCK.blockLengths = [];\r\n\t\tfor (var i: number = 0; i < count; i++) {\r\n\t\t\tblockStarts.push(GPUSkiningLoadModelV05._readData.getUint32());\r\n\t\t\tblockLengths.push(GPUSkiningLoadModelV05._readData.getUint32());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_STRINGS(): void {\r\n\t\tvar offset: number = GPUSkiningLoadModelV05._readData.getUint32();\r\n\t\tvar count: number = GPUSkiningLoadModelV05._readData.getUint16();\r\n\t\tvar prePos: number = GPUSkiningLoadModelV05._readData.pos;\r\n\t\tGPUSkiningLoadModelV05._readData.pos = offset + GPUSkiningLoadModelV05._DATA.offset;\r\n\r\n\t\tfor (var i: number = 0; i < count; i++)\r\n\t\t{\r\n\r\n\t\t\tGPUSkiningLoadModelV05._strings[i] = GPUSkiningLoadModelV05._readData.readUTFString();\r\n\t\t\tconsole.log(i, GPUSkiningLoadModelV05._strings[i]);\r\n\t\t}\r\n\r\n\t\tGPUSkiningLoadModelV05._readData.pos = prePos;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_MESH(): boolean {\r\n\t\tvar gl: WebGLRenderingContext = LayaGL.instance;\r\n\t\tvar i: number, n: number;\r\n\t\tvar memorySize: number = 0;\r\n\t\tvar name: string = GPUSkiningLoadModelV05._readString();\r\n\t\tvar reader: Byte = GPUSkiningLoadModelV05._readData;\r\n\t\tvar arrayBuffer: ArrayBuffer = reader.__getBuffer();\r\n\t\tvar vertexBufferCount: number = reader.getInt16();\r\n\t\tvar offset: number = GPUSkiningLoadModelV05._DATA.offset;\r\n\t\tconsole.log(\"READ_MESH\", name, vertexBufferCount, offset);\r\n\t\tfor (i = 0; i < vertexBufferCount; i++) {//TODO:始终为1\r\n\t\t\tvar vbStart: number = offset + reader.getUint32();\r\n\t\t\tvar vertexCount: number = reader.getUint32();\r\n\t\t\tvar vertexFlag: string = GPUSkiningLoadModelV05._readString();\r\n\t\t\tvar vertexDeclaration: VertexDeclaration = GPUSkiningVertexMesh.getVertexDeclaration(vertexFlag, false);\r\n\r\n\t\t\tvar vertexStride: number = vertexDeclaration.vertexStride;\r\n\t\t\tvar vertexData: ArrayBuffer;\r\n\t\t\tvar floatData: Float32Array;\r\n\t\t\tvar uint8Data: Uint8Array;\r\n\r\n\t\t\tvar subVertexFlags: any[] = vertexFlag.split(\",\");\r\n\t\t\tvar subVertexCount: number = subVertexFlags.length;\r\n\t\t\tvar mesh: Mesh = GPUSkiningLoadModelV05._mesh;\r\n\r\n\t\t\tswitch (GPUSkiningLoadModelV05._version) {\r\n\t\t\t\tcase \"LAYAMODEL:05\":\r\n\t\t\t\tcase \"LAYAMODEL:GPUSkining_05\": \r\n\t\t\t\tcase \"LAYAMODEL:GPUSkining_06\": \r\n\t\t\t\t\tvertexData = arrayBuffer.slice(vbStart, vbStart + vertexCount * vertexStride);\r\n\t\t\t\t\tfloatData = new Float32Array(vertexData);\r\n\t\t\t\t\tuint8Data = new Uint8Array(vertexData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"LAYAMODEL:COMPRESSION_05\":\r\n\t\t\t\t\tvertexData = new ArrayBuffer(vertexStride * vertexCount);\r\n\t\t\t\t\tfloatData = new Float32Array(vertexData);\r\n\t\t\t\t\tuint8Data = new Uint8Array(vertexData);\r\n\t\t\t\t\tvar lastPosition: number = reader.pos;\r\n\t\t\t\t\treader.pos = vbStart;\r\n\r\n\t\t\t\t\tfor (var j: number = 0; j < vertexCount; j++) {\r\n\t\t\t\t\t\tvar subOffset: number;\r\n\t\t\t\t\t\tvar verOffset: number = j * vertexStride;\r\n\t\t\t\t\t\tfor (var k: number = 0; k < subVertexCount; k++) {\r\n\t\t\t\t\t\t\tswitch (subVertexFlags[k]) {\r\n\t\t\t\t\t\t\t\tcase \"POSITION\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tverOffset += 12;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"NORMAL\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tverOffset += 12;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"COLOR\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 3] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tverOffset += 16;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"UV\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tverOffset += 8;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"UV1\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tverOffset += 8;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"BLENDWEIGHT\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 3] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tverOffset += 16;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"BLENDINDICES\":\r\n\t\t\t\t\t\t\t\t\tuint8Data[verOffset] = reader.getUint8();\r\n\t\t\t\t\t\t\t\t\tuint8Data[verOffset + 1] = reader.getUint8();\r\n\t\t\t\t\t\t\t\t\tuint8Data[verOffset + 2] = reader.getUint8();\r\n\t\t\t\t\t\t\t\t\tuint8Data[verOffset + 3] = reader.getUint8();\r\n\t\t\t\t\t\t\t\t\tverOffset += 4;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"TANGENT\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 3] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tverOffset += 16;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treader.pos = lastPosition;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexBuffer: VertexBuffer3D = new VertexBuffer3D(vertexData.byteLength, gl.STATIC_DRAW, true);\r\n\t\t\tvertexBuffer.vertexDeclaration = vertexDeclaration;\r\n\t\t\tvertexBuffer.setData(vertexData);\r\n\t\t\tvar vertexCount: number = vertexBuffer._byteLength / vertexDeclaration.vertexStride;\r\n\t\t\t//TDDO:是否加标记\r\n\t\t\tif (vertexCount > 65535)\r\n\t\t\t\tmesh._indexFormat = IndexFormat.UInt32;\r\n\t\t\telse\r\n\t\t\t\tmesh._indexFormat = IndexFormat.UInt16;\r\n\t\t\tmesh._vertexBuffer = vertexBuffer;\r\n\t\t\tmesh._vertexCount += vertexCount;\r\n\t\t\tmemorySize += floatData.length * 4;\r\n\t\t}\r\n\r\n\t\tvar ibStart: number = offset + reader.getUint32();\r\n\t\tvar ibLength: number = reader.getUint32();\r\n\r\n\t\tvar ibDatas: Uint16Array | Uint32Array;\r\n\t\tif (mesh.indexFormat == <any>IndexFormat.UInt32)\r\n\t\t\tibDatas = new Uint32Array(arrayBuffer.slice(ibStart, ibStart + ibLength));\r\n\t\telse\r\n\t\t\tibDatas = new Uint16Array(arrayBuffer.slice(ibStart, ibStart + ibLength));\r\n\r\n\t\tvar indexBuffer: IndexBuffer3D = new IndexBuffer3D(mesh.indexFormat, ibDatas.length, gl.STATIC_DRAW, true);\r\n\t\tindexBuffer.setData(ibDatas);\r\n\t\tmesh._indexBuffer = indexBuffer;\r\n\r\n\t\tmesh._setBuffer(mesh._vertexBuffer, indexBuffer);\r\n\r\n\t\tmemorySize += indexBuffer.indexCount * 2;\r\n\t\tmesh._setCPUMemory(memorySize);\r\n\t\tmesh._setGPUMemory(memorySize);\r\n\r\n\t\tvar boneNames: string[] = mesh._boneNames = [];\r\n\t\tvar boneCount: number = reader.getUint16();\r\n\t\tboneNames.length = boneCount;\r\n\t\tfor (i = 0; i < boneCount; i++)\r\n\t\t\tboneNames[i] = GPUSkiningLoadModelV05._strings[reader.getUint16()];//[兼容性]\r\n\r\n\t\tvar bindPoseDataStart: number = reader.getUint32();\r\n\t\tvar bindPoseDataLength: number = reader.getUint32();\r\n\t\tvar bindPoseDatas: Float32Array = new Float32Array(arrayBuffer.slice(offset + bindPoseDataStart, offset + bindPoseDataStart + bindPoseDataLength));\r\n\t\tvar bindPoseFloatCount: number = bindPoseDatas.length;\r\n\t\tvar bindPoseCount: number = bindPoseFloatCount / 16;\r\n\t\tvar bindPoseBuffer: ArrayBuffer = mesh._inverseBindPosesBuffer = new ArrayBuffer(bindPoseFloatCount * 4);//TODO:[NATIVE]临时\r\n\t\tmesh._inverseBindPoses = [];\r\n\t\tfor (i = 0; i < bindPoseFloatCount; i += 16) {\r\n\t\t\tvar inverseGlobalBindPose: Matrix4x4 = new Matrix4x4(bindPoseDatas[i + 0], bindPoseDatas[i + 1], bindPoseDatas[i + 2], bindPoseDatas[i + 3], bindPoseDatas[i + 4], bindPoseDatas[i + 5], bindPoseDatas[i + 6], bindPoseDatas[i + 7], bindPoseDatas[i + 8], bindPoseDatas[i + 9], bindPoseDatas[i + 10], bindPoseDatas[i + 11], bindPoseDatas[i + 12], bindPoseDatas[i + 13], bindPoseDatas[i + 14], bindPoseDatas[i + 15], new Float32Array(bindPoseBuffer, i * 4, 16));\r\n\t\t\tmesh._inverseBindPoses[i / 16] = inverseGlobalBindPose;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_SUBMESH(): boolean {\r\n\t\tvar reader: Byte = GPUSkiningLoadModelV05._readData;\r\n\t\tvar arrayBuffer: ArrayBuffer = reader.__getBuffer();\r\n\t\tvar subMesh: SubMesh = new SubMesh(GPUSkiningLoadModelV05._mesh);\r\n\r\n\t\treader.getInt16();//TODO:vbIndex\r\n\t\tvar ibStart: number = reader.getUint32();\r\n\t\tvar ibCount: number = reader.getUint32();\r\n\t\tvar indexBuffer: IndexBuffer3D = GPUSkiningLoadModelV05._mesh._indexBuffer;\r\n\t\tsubMesh._indexBuffer = indexBuffer;\r\n\t\tsubMesh._setIndexRange(ibStart, ibCount);\r\n\t\tvar vertexBuffer: VertexBuffer3D = GPUSkiningLoadModelV05._mesh._vertexBuffer;\r\n\t\tsubMesh._vertexBuffer = vertexBuffer;\r\n\r\n\t\tvar offset: number = GPUSkiningLoadModelV05._DATA.offset;\r\n\t\tvar subIndexBufferStart: number[] = subMesh._subIndexBufferStart;\r\n\t\tvar subIndexBufferCount: number[] = subMesh._subIndexBufferCount;\r\n\t\tvar boneIndicesList: Uint16Array[] = subMesh._boneIndicesList;\r\n\t\tvar drawCount: number = reader.getUint16();\r\n\t\tsubIndexBufferStart.length = drawCount;\r\n\t\tsubIndexBufferCount.length = drawCount;\r\n\t\tboneIndicesList.length = drawCount;\r\n\r\n\t\tvar pathMarks: any[][] = GPUSkiningLoadModelV05._mesh._skinDataPathMarks;\r\n\t\tvar bindPoseIndices: number[] = GPUSkiningLoadModelV05._bindPoseIndices;\r\n\t\tvar subMeshIndex: number = GPUSkiningLoadModelV05._subMeshes.length;\r\n\t\tfor (var i: number = 0; i < drawCount; i++) {\r\n\t\t\tsubIndexBufferStart[i] = reader.getUint32();\r\n\t\t\tsubIndexBufferCount[i] = reader.getUint32();\r\n\t\t\tvar boneDicofs: number = reader.getUint32();\r\n\t\t\tvar boneDicCount: number = reader.getUint32();\r\n\t\t\tvar boneIndices: Uint16Array = boneIndicesList[i] = new Uint16Array(arrayBuffer.slice(offset + boneDicofs, offset + boneDicofs + boneDicCount));\r\n\t\t\tfor (var j: number = 0, m: number = boneIndices.length; j < m; j++) {\r\n\t\t\t\tvar index: number = boneIndices[j];\r\n\t\t\t\tvar combineIndex: number = bindPoseIndices.indexOf(index);\r\n\t\t\t\tif (combineIndex === -1) {\r\n\t\t\t\t\tboneIndices[j] = bindPoseIndices.length;\r\n\t\t\t\t\tbindPoseIndices.push(index);\r\n\t\t\t\t\tpathMarks.push([subMeshIndex, i, j]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tboneIndices[j] = combineIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tGPUSkiningLoadModelV05._subMeshes.push(subMesh);\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import Mesh = Laya.Mesh;\r\nimport SubMesh = Laya.SubMesh;\r\nimport Byte = Laya.Byte;\r\nimport { GPUSkiningLoadModelV05 } from \"./GPUSkiningLoadModelV05\";\r\n\r\nexport class GPUSkiningMeshReader \r\n{\r\n\r\n     static read(data:ArrayBuffer, mesh:Mesh, subMeshes:SubMesh[]):void \r\n     {\r\n        var readData:Byte = new Byte(data);\r\n        readData.pos = 0;\r\n        var version:string = readData.readUTFString();\r\n\r\n        \r\n        var boundsMin:Laya.Vector3;\r\n        var boundsMax:Laya.Vector3;\r\n\t\tif(version == \"LAYAMODEL:GPUSkining_06\")\r\n\t\t{\r\n\t\t\tboundsMin = new Laya.Vector3();\r\n\t\t\tboundsMax = new Laya.Vector3();\r\n\r\n\t\t\tboundsMin.x = readData.readFloat32();\r\n\t\t\tboundsMin.y = readData.readFloat32();\r\n\t\t\tboundsMin.z = readData.readFloat32();\r\n\r\n\t\t\t\r\n\t\t\tboundsMax.x = readData.readFloat32();\r\n\t\t\tboundsMax.y = readData.readFloat32();\r\n\t\t\tboundsMax.z = readData.readFloat32();\r\n        }\r\n\r\n        \r\n        switch (version) \r\n        {\r\n            case \"LAYAMODEL:GPUSkining_05\": \r\n            case \"LAYAMODEL:GPUSkining_06\": \r\n                GPUSkiningLoadModelV05.parse(readData, version, mesh, subMeshes);\r\n                break;\r\n            default: \r\n                throw new Error(\"MeshReader: unknown mesh version.\");\r\n        }\r\n\r\n        if(version == \"LAYAMODEL:GPUSkining_06\")\r\n\t\t{\r\n            mesh._needUpdateBounds = false;\r\n            mesh.bounds.setMin(boundsMin);\r\n            mesh.bounds.setMin(boundsMax);\r\n        }\r\n        mesh._setSubMeshes(subMeshes);\r\n    }\r\n}","import { GPUSkiningMeshReader } from \"./GPUSkiningMeshReader\";\r\n\r\nexport default class GPUSkiningMesh extends Laya.Mesh\r\n{\r\n    static _parse(data: any, propertyParams: any = null, constructParams: any[] = null): GPUSkiningMesh \r\n    {\r\n\t\tvar mesh: GPUSkiningMesh = new GPUSkiningMesh();\r\n\t\tGPUSkiningMeshReader.read(<ArrayBuffer>data, mesh, mesh._subMeshes);\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\tstatic LoadAsync(path: string): Promise<GPUSkiningMesh>\r\n\t{\r\n\t\treturn new  Promise<GPUSkiningMesh>((resolve)=>\r\n\t\t{\r\n            this.Load(path, (data: GPUSkiningMesh)=>\r\n            {\r\n                resolve(data);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tstatic Load(path: string, callback:(  (anim: GPUSkiningMesh) => any))\r\n\t{\r\n\t\tLaya.loader.load(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t{\r\n\t\t\tif(data instanceof ArrayBuffer)\r\n\t\t\t{\r\n\t\t\t\tvar mesh = GPUSkiningMesh._parse(data);\r\n\t\t\t\tmesh._url = Laya.URL.formatURL(path);\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\tLaya.Loader.clearRes(path);\r\n\t\t\t\tLaya.Loader.cacheRes(path, mesh);\r\n\t\t\t\tcallback(mesh);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tcallback(data);\r\n\t\t\t}\r\n\r\n\t\t}), null, Laya.Loader.BUFFER);\r\n\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * 销毁资源,销毁后资源不能恢复。\r\n\t */\r\n\tdestroy(): void {\r\n\t\t// console.log(\"destroy GPUSkiningMesh\", this._url);\r\n\t\tsuper.destroy();\r\n\t}\r\n}","\r\nimport Byte = Laya.Byte;\r\nimport Bounds = Laya.Bounds;\r\nimport Vector3 = Laya.Vector3;\r\nimport Quaternion = Laya.Quaternion;\r\n\r\nimport Matrix4x4 = Laya.Matrix4x4;\r\nexport default class ByteReadUtil\r\n{\r\n    \r\n    \r\n    static ReadQuaternion(b:Byte):Quaternion\r\n    {\r\n        var v = new Quaternion();\r\n        v.x = b.readFloat32();\r\n        v.y = b.readFloat32();\r\n        v.z = b.readFloat32();\r\n        v.w = b.readFloat32();\r\n        return v;\r\n    }\r\n    \r\n    static ReadVector3(b:Byte):Vector3\r\n    {\r\n        var v = new Vector3();\r\n        v.x = b.readFloat32() * -1;\r\n        v.y = b.readFloat32();\r\n        v.z = b.readFloat32();\r\n        return v;\r\n    }\r\n\r\n    static ReadBounds(b:Byte):Bounds\r\n    {\r\n        var min = this.ReadVector3(b);\r\n        var max = this.ReadVector3(b);\r\n        var v = new Bounds(min, max);\r\n        return v;\r\n    }\r\n\r\n    \r\n    \r\n    static mm = new Matrix4x4(\r\n\t\t-1.0, 0.0, 0.0, 0.0,\r\n\t\t0.0, 1.0, 0.0, 0.0,\r\n\t\t0.0, 0.0, 1.0, 0.0,\r\n\t\t0.0, 0.0, 0.0, 1.0\r\n    );\r\n    \r\n    static ReadMatrix4x4(b:Byte):Matrix4x4\r\n    {\r\n        var m00 = b.readFloat32();\r\n        var m01 = b.readFloat32();\r\n        var m02 = b.readFloat32();\r\n        var m03 = b.readFloat32();\r\n\r\n        \r\n        var m10 = b.readFloat32();\r\n        var m11 = b.readFloat32();\r\n        var m12 = b.readFloat32();\r\n        var m13 = b.readFloat32();\r\n\r\n        \r\n        var m20 = b.readFloat32();\r\n        var m21 = b.readFloat32();\r\n        var m22 = b.readFloat32();\r\n        var m23 = b.readFloat32();\r\n        \r\n        var m30 = b.readFloat32();\r\n        var m31 = b.readFloat32();\r\n        var m32 = b.readFloat32();\r\n        var m33 = b.readFloat32();\r\n        // var v = new Matrix4x4\r\n        // (\r\n        //     -m00, m01, m02, m03,\r\n        //     -m10, m11, m12, m13,\r\n        //     -m20, m21, m22, m23,\r\n        //     -m30, m31, m32, m33,\r\n        // );\r\n\r\n        \r\n        var v2 = new Matrix4x4\r\n        (\r\n            m00, m01, m02, m03,\r\n            m10, m11, m12, m13,\r\n            m20, m21, m22, m23,\r\n            m30, m31, m32, m33,\r\n        );\r\n\r\n        var v = new Matrix4x4();\r\n\r\n        Matrix4x4.multiply(this.mm, v2, v);\r\n\r\n        return v;\r\n    }\r\n}","import Matrix4x4 = Laya.Matrix4x4;\r\nimport ByteReadUtil from \"./ByteReadUtil\";\r\n/** 烘焙动画--骨骼节点信息 */\r\nexport default class GPUSkinningBone\r\n{\r\n    /** 编号 */\r\n    guid: string;\r\n\r\n    /** 名称 */\r\n    name: string;\r\n\r\n    /** 是否导出 */\r\n    isExposed: boolean;\r\n\r\n    /** 矩阵 */\r\n    bindpose: Matrix4x4;\r\n\r\n    /** 索引 */\r\n    boneIndex: int = -1;\r\n\r\n    /** 父节点索引 */\r\n    parentBoneIndex: int = -1;\r\n\r\n    /** 子节点索引 */\r\n    childrenBonesIndices: int[];\r\n\r\n    /** 是否生成了逆矩阵 */\r\n    private _bindposeInvInit = false;\r\n\r\n    private _bindposeInv: Matrix4x4;\r\n    /** 逆矩阵 */\r\n    public get BindposeInv(): Matrix4x4\r\n    {\r\n        if(!this._bindposeInv)\r\n        {\r\n            this._bindposeInv = new Matrix4x4();\r\n            this.bindpose.invert(this._bindposeInv);\r\n            this._bindposeInvInit = true;\r\n        }\r\n        return this._bindposeInv;\r\n    }\r\n    \r\n    FromBytes(data: ArrayBuffer): void\r\n    {\r\n        var b:Laya.Byte = new Laya.Byte(data);\r\n        this.name = b.readUTFString();\r\n        this.guid = b.readUTFString();\r\n        this.isExposed = b.readByte() != 0;\r\n        this.boneIndex = b.readInt32();\r\n        this.parentBoneIndex = b.readInt32();\r\n        this.bindpose = ByteReadUtil.ReadMatrix4x4(b);\r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer):GPUSkinningBone\r\n    {\r\n        var obj = new GPUSkinningBone();\r\n        obj.FromBytes(data);\r\n        return obj;\r\n    }\r\n\r\n\r\n}","export enum GPUSkinningWrapMode\r\n{\r\n    /** 播放一次 */\r\n    Once,\r\n    /** 循环播放 */\r\n    Loop\r\n}","\r\n/** 烘焙动画--动画剪辑事件 */\r\nexport default class GPUSkinningAnimEvent  \r\n{\r\n    /** 帧索引 */\r\n    frameIndex:int = 0;\r\n\r\n    /** 事件ID */\r\n    eventId:int = 0;\r\n\r\n    /** 比较 */\r\n    CompareTo(other: GPUSkinningAnimEvent): int\r\n    {\r\n        return this.frameIndex > other.frameIndex ? -1 : 1;\r\n    }\r\n\r\n    \r\n    FromBytes(data: ArrayBuffer): void\r\n    {\r\n        var b:Laya.Byte = new Laya.Byte(data);\r\n        this.frameIndex = b.readInt32();\r\n        this.eventId = b.readInt32();\r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer):GPUSkinningAnimEvent\r\n    {\r\n        var obj = new GPUSkinningAnimEvent();\r\n        obj.FromBytes(data);\r\n        return obj;\r\n    }\r\n}","import Matrix4x4 = Laya.Matrix4x4;\r\nimport Quaternion = Laya.Quaternion;\r\nimport ByteReadUtil from \"./ByteReadUtil\";\r\n\r\n/** 烘焙动画--动画剪辑帧数据信息 */\r\nexport default class GPUSkinningFrame\r\n{\r\n    /** 矩阵 */\r\n    matrices: Matrix4x4[];\r\n\r\n    /** 相对根节点偏移--方向  */\r\n    rootMotionDeltaPositionQ: Quaternion;\r\n    \r\n    /** 相对根节点偏移--距离  */\r\n    rootMotionDeltaPositionL: float;\r\n\r\n    /** 相对根节点偏移 */\r\n    rootMotionDeltaRotation: Quaternion;\r\n\r\n    /** 是否根节点初始化逆矩阵 */\r\n    private rootMotionInvInit: boolean = false;\r\n    private rootMotionInv: Matrix4x4;\r\n    /** 根节点逆矩阵 */\r\n    public RootMotionInv(rootBoneIndex: int ):Matrix4x4\r\n    {\r\n        if (!this.rootMotionInvInit)\r\n        {\r\n            let m =  this.matrices[rootBoneIndex];\r\n            this.rootMotionInv = new Matrix4x4();\r\n            m.invert(this.rootMotionInv);\r\n            this.rootMotionInvInit = true;\r\n        }\r\n        return this.rootMotionInv;\r\n    }\r\n\r\n    \r\n    FromBytes(data: ArrayBuffer, rootMotionEnabled:boolean): void\r\n    {\r\n        var b:Laya.Byte = new Laya.Byte(data);\r\n        if(rootMotionEnabled)\r\n        {\r\n            this.rootMotionDeltaPositionL = b.readFloat32();\r\n            this.rootMotionDeltaPositionQ = ByteReadUtil.ReadQuaternion(b);\r\n            this.rootMotionDeltaRotation = ByteReadUtil.ReadQuaternion(b);\r\n        }\r\n\r\n        var matricesCount = b.readUint32();\r\n        this.matrices = [];\r\n        for(var i = 0; i < matricesCount; i ++)\r\n        {\r\n            var m = ByteReadUtil.ReadMatrix4x4(b);\r\n            this.matrices.push(m);\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer, rootMotionEnabled:boolean):GPUSkinningFrame\r\n    {\r\n        var obj = new GPUSkinningFrame();\r\n        obj.FromBytes(data, rootMotionEnabled);\r\n        return obj;\r\n    }\r\n\r\n\r\n\r\n}","import { GPUSkinningWrapMode } from \"./GPUSkinningWrapMode\";\r\nimport GPUSkinningAnimEvent from \"./GPUSkinningAnimEvent\";\r\nimport GPUSkinningFrame from \"./GPUSkinningFrame\";\r\n\r\nimport Byte = Laya.Byte;\r\nimport ByteReadUtil from \"./ByteReadUtil\";\r\n/** 烘焙动画--动画剪辑数据信息 */\r\nexport default class GPUSkinningClip\r\n{\r\n    /** 名称 */\r\n    name: string;\r\n\r\n    /** 时间长度 （单位:秒） */\r\n    length = 0.0;\r\n\r\n    /** 播放帧率 （默认30） */\r\n    fps = 0;\r\n\r\n    /** 播放模式，单次或者循环 */\r\n    wrapMode = GPUSkinningWrapMode.Once;\r\n\r\n    /** 帧数据列表 */\r\n    frames: GPUSkinningFrame[];\r\n\r\n    /** 所在贴图像素起始位置 */\r\n    pixelSegmentation:int = 0;\r\n\r\n    /** 是否动画驱动位移 */\r\n    rootMotionEnabled: boolean = false;\r\n\r\n    /** 多个单位播放动作帧是否差异化 */\r\n    individualDifferenceEnabled: boolean = false;\r\n\r\n    /** 事件列表 */\r\n    events: GPUSkinningAnimEvent[];\r\n\r\n    /** 帧数 */\r\n    frameCount = 0;\r\n    /** 最后一帧 */\r\n    frameLastIndex = 0;\r\n\r\n\r\n    \r\n    FromBytes(data: ArrayBuffer): void\r\n    {\r\n        var b:Byte = new Byte(data);\r\n        b.pos = 0;\r\n        this.name = b.readUTFString();\r\n        this.name = this.name.toLowerCase();\r\n        this.length = b.readFloat32();\r\n        this.fps = b.readUint32();\r\n        this.wrapMode = b.readInt32();\r\n        this.wrapMode = GPUSkinningWrapMode.Once;\r\n        switch(this.name)\r\n        {\r\n            case \"idle\":\r\n            case \"run\":\r\n            case \"walk\":\r\n            case \"standby\":\r\n            case \"skin_10b\":\r\n                this.wrapMode = GPUSkinningWrapMode.Loop;\r\n                break;\r\n        }\r\n        this.pixelSegmentation = b.readUint32();\r\n        this.rootMotionEnabled = b.readByte() != 0;\r\n        this.individualDifferenceEnabled = b.readByte() != 0;\r\n\r\n        // 帧列表 数量\r\n        var frameCount = b.readUint32();\r\n        // 事件列表 数量\r\n        var eventCount = b.readUint32();\r\n        \r\n        // 帧列表 头信息\r\n        var framePosLengthList:int[][] = [];\r\n        for(var i = 0; i < frameCount; i ++)\r\n        {\r\n            var info = [];\r\n            info[0] = b.readUint32(); // posBegin\r\n            info[1] = b.readUint32(); // length\r\n            framePosLengthList.push(info);\r\n        }\r\n\r\n        \r\n        // 事件列表 头信息\r\n        var eventPosLengthList:int[][] = [];\r\n        for(var i = 0; i < eventCount; i ++)\r\n        {\r\n            var info = [];\r\n            info[0] = b.readUint32(); // posBegin\r\n            info[1] = b.readUint32(); // length\r\n            eventPosLengthList.push(info);\r\n        }\r\n\r\n        \r\n        // 帧列表 数据块\r\n        var frameList: GPUSkinningFrame[] = [];\r\n        this.frames = frameList;\r\n        for(var i = 0; i < frameCount; i ++)\r\n        {\r\n            var itemInfo:int[] = framePosLengthList[i];\r\n            var pos = itemInfo[0];\r\n            var len = itemInfo[1];\r\n\r\n            b.pos = pos;\r\n            var itemBuffer = b.readArrayBuffer(len);\r\n            var item:any = GPUSkinningFrame.CreateFromBytes(itemBuffer, this.rootMotionEnabled);\r\n            frameList.push(item);\r\n        }\r\n\r\n\r\n        \r\n        // 事件列表 数据块\r\n        var eventList: GPUSkinningAnimEvent[] = [];\r\n        this.events = eventList;\r\n        for(var i = 0; i < eventCount; i ++)\r\n        {\r\n            var itemInfo:int[] = eventPosLengthList[i];\r\n            var pos = itemInfo[0];\r\n            var len = itemInfo[1];\r\n\r\n            b.pos = pos;\r\n            var itemBuffer = b.readArrayBuffer(len);\r\n            var item:any = GPUSkinningAnimEvent.CreateFromBytes(itemBuffer);\r\n            eventList.push(item);\r\n        }\r\n\r\n        this.frameCount = Math.floor(this.length * this.fps);\r\n        this.frameLastIndex = this.frameCount  - 1;\r\n\r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer):GPUSkinningClip\r\n    {\r\n        var obj = new GPUSkinningClip();\r\n        obj.FromBytes(data);\r\n        return obj;\r\n    }\r\n}","export enum GPUSkinningQuality\r\n{\r\n    Bone1,\r\n    Bone2,\r\n    Bone4 \r\n}","import GPUSkinningBone from \"./GPUSkinningBone\";\r\nimport GPUSkinningClip from \"./GPUSkinningClip\";\r\nimport { GPUSkinningQuality } from \"./GPUSkinningQuality\";\r\n\r\nimport Byte = Laya.Byte;\r\nimport ByteReadUtil from \"./ByteReadUtil\";\r\n\r\n/** 烘焙动画--全部数据信息 */\r\nexport default class GPUSkinningAnimation extends Laya.Resource\r\n{\r\n    version:string;\r\n    /** 编号 */\r\n    guid: string;\r\n\r\n    /** 名称 */\r\n    name: string;\r\n\r\n    bonesCount = 67;\r\n\r\n    /** 骨骼列表 */\r\n    bones: GPUSkinningBone[];\r\n\r\n    /** 根骨骼 */\r\n    rootBoneIndex: int = 0;\r\n\r\n    /** 动作列表 */\r\n    clips: GPUSkinningClip[];\r\n\r\n    /** 盒子大小 */\r\n    bounds: Laya.Bounds;\r\n\r\n    /** 动作贴图宽 */\r\n    textureWidth: number = 0;\r\n\r\n    /** 动作贴图高 */\r\n    textureHeight: number = 0;\r\n\r\n    /** lod模式 距离列表 */\r\n    lodDistances: float[];\r\n\r\n    /** lod模式 Mesh列表 */\r\n    lodMeshes: Laya.Mesh[];\r\n    \r\n    /** 裁剪用 CullingBounds */\r\n    sphereRadius: float = 1.0;\r\n\r\n    /** 骨骼品质 */\r\n    skinQuality:GPUSkinningQuality = GPUSkinningQuality.Bone4;\r\n\r\n    \r\n    /** 动作字典 */\r\n    clipMap = new Map<string, GPUSkinningClip>();\r\n\r\n    FromBytes(arrayBuffer: ArrayBuffer): void\r\n    {\r\n        \r\n        // var b:Byte = new Byte(arrayBuffer);\r\n        // b.pos = 0;\r\n        // var vision = b.readUTFString();\r\n        // var len = b.readUint32();\r\n        // var arrayBuffer = arrayBuffer.slice(b.pos, pos + len);\r\n\r\n        var b:Byte = new Byte(arrayBuffer);\r\n        b.pos = 0;\r\n\r\n        this.guid = b.readUTFString();\r\n        this.name = b.readUTFString();\r\n        this.rootBoneIndex = b.readInt16();\r\n        this.textureWidth = b.readUint32();\r\n        this.textureHeight = b.readUint32();\r\n        this.sphereRadius = b.readFloat32();\r\n        this.skinQuality = <GPUSkinningQuality> b.readInt32();\r\n        this.bonesCount = b.readUint32();\r\n        this.bounds = ByteReadUtil.ReadBounds(b);\r\n\r\n        \r\n        // 剪辑列表 数量\r\n        var clipCount = b.readUint32();\r\n        // 骨骼列表 数量\r\n        var boneCount = b.readUint32();\r\n\r\n\r\n        // 剪辑列表 头信息\r\n        var clipPosLengthList:int[][] = [];\r\n        for(var i = 0; i < clipCount; i ++)\r\n        {\r\n            var info = [];\r\n            info[0] = b.readUint32(); // posBegin\r\n            info[1] = b.readUint32(); // length\r\n            clipPosLengthList.push(info);\r\n        }\r\n\r\n\r\n        // 骨骼列表 头信息\r\n        var bonePosLengthList:int[][] = [];\r\n        for(var i = 0; i < boneCount; i ++)\r\n        {\r\n            var info = [];\r\n            info[0] = b.readUint32(); // posBegin\r\n            info[1] = b.readUint32(); // length\r\n            bonePosLengthList.push(info);\r\n        }\r\n\r\n        \r\n        // 剪辑列表 数据块\r\n        var clipList: GPUSkinningClip[] = [];\r\n        this.clips = clipList;\r\n        var clipItem: GPUSkinningClip;\r\n        for(var i = 0; i < clipCount; i ++)\r\n        {\r\n            var itemInfo:int[] = clipPosLengthList[i];\r\n            var pos = itemInfo[0];\r\n            var len = itemInfo[1];\r\n\r\n            b.pos = pos;\r\n\r\n            var itemBuffer = b.readArrayBuffer(len);\r\n            var item:any = clipItem = GPUSkinningClip.CreateFromBytes(itemBuffer);\r\n            clipList.push(item);\r\n            this.clipMap.set(clipItem.name, clipItem);\r\n        }\r\n\r\n        \r\n        // 骨骼列表 数据块\r\n        var boneList: GPUSkinningBone[] = [];\r\n        this.bones = boneList;\r\n        for(var i = 0; i < boneCount; i ++)\r\n        {\r\n            var itemInfo:int[] = bonePosLengthList[i];\r\n            var pos = itemInfo[0];\r\n            var len = itemInfo[1];\r\n\r\n            b.pos = pos;\r\n            b.pos = pos;\r\n            var itemBuffer = b.readArrayBuffer(len);\r\n            var item:any = GPUSkinningBone.CreateFromBytes(itemBuffer);\r\n            boneList.push(item);\r\n        }\r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer):GPUSkinningAnimation\r\n    {\r\n        \r\n        var b:Byte = new Byte(data);\r\n        b.pos = 0;\r\n        var version = b.readUTFString();\r\n        var len = b.readUint32();\r\n        var arrayBuffer = b.readArrayBuffer(len);\r\n\r\n        var obj = new GPUSkinningAnimation();\r\n        obj.version = version;\r\n        obj.FromBytes(arrayBuffer);\r\n        return obj;\r\n    }\r\n\r\n\r\n    static async LoadAsync(path: string):Promise<GPUSkinningAnimation>\r\n    {\r\n        return new Promise<GPUSkinningAnimation>((resolve)=>\r\n        {\r\n            this.Load(path, (anim: GPUSkinningAnimation)=>\r\n            {\r\n                resolve(anim);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    \r\n    static Load(path: string, callback:(  (anim: GPUSkinningAnimation) => any)  ):void\r\n    {\r\n        Laya.loader.load(path, Laya.Handler.create(this, (data: ArrayBuffer | GPUSkinningAnimation)=>\r\n        {\r\n\r\n            if(data == null)\r\n            {\r\n                console.error(\"加载资源失败\" , path);\r\n                callback(null);\r\n                return;\r\n            }\r\n            \r\n            var anim: GPUSkinningAnimation;\r\n            if(data instanceof ArrayBuffer)\r\n            {\r\n                anim = GPUSkinningAnimation.CreateFromBytes(data);\r\n                anim._url = Laya.URL.formatURL(path);\r\n                Laya.Loader.clearRes(path);\r\n                Laya.Loader.cacheRes(path, anim);\r\n            }\r\n            else\r\n            {\r\n                anim = data;\r\n            }\r\n\r\n            if(callback)\r\n            {\r\n                callback(anim);\r\n            }\r\n        }), null, Laya.Loader.BUFFER)\r\n    }\r\n\r\n    protected _disposeResource(): void \r\n    {\r\n\t\tsuper._disposeResource();\r\n    }\r\n    \r\n    \r\n\t/**\r\n\t * 销毁资源,销毁后资源不能恢复。\r\n\t */\r\n\tdestroy(): void {\r\n\t\t// console.log(\"destroy GPUSkinningAnimation\", this._url);\r\n\t\tsuper.destroy();\r\n\t}\r\n    \r\n\r\n}","/** 裁剪模式 */\r\nexport enum GPUSKinningCullingMode\r\n{\r\n    /** 总是播放 */\r\n    AlwaysAnimate, \r\n    /**  */\r\n    CullUpdateTransforms, \r\n    /** 裁剪剔除 不播放 */\r\n    CullCompletely\r\n}","export default class GPUSkinningBetterList<T>\r\n{\r\n    public buffer: T[];\r\n    public size:int = 0;\r\n    public bufferIncrement:int = 0;\r\n\r\n    public Get(i:int):T\r\n    {\r\n        return this.buffer[i];\r\n    }\r\n\r\n    public Set(i:int, value:T)\r\n    {\r\n        this.buffer[i] = value;\r\n    }\r\n\r\n    constructor(bufferIncrement: int)\r\n    {\r\n        this.bufferIncrement = Math.max(1, bufferIncrement);\r\n    }\r\n\r\n    private AllocateMore()\r\n    {\r\n        let newList:T[] = (this.buffer != null) \r\n            ? new Array<T>(this.buffer.length + this.bufferIncrement) \r\n            : new Array<T>(this.bufferIncrement);\r\n\r\n        if(this.buffer != null && this.size > 0)\r\n        {\r\n            arrayCopyValue(this.buffer, newList, false);\r\n        }\r\n\r\n        this.buffer = newList;\r\n    }\r\n\r\n    public Clear()\r\n    {\r\n        this.size = 0;\r\n    }\r\n\r\n    public Release()\r\n    {\r\n        this.size = 0;\r\n        this.buffer = null;\r\n    }\r\n\r\n    public Add(item: T)\r\n    {\r\n        if(this.buffer == null || this.size == this.buffer.length)\r\n        {\r\n            this.AllocateMore();\r\n        }\r\n\r\n        this.buffer[this.size ++] = item;\r\n    }\r\n\r\n    public AddRange(items: T[])\r\n    {\r\n        if(items == null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let length = items.length;\r\n        if(length == 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(this.buffer == null)\r\n        {\r\n            this.buffer = new Array<T>(Math.max(this.bufferIncrement, length));\r\n            arrayCopyValue(items, this.buffer, false);\r\n            this.size = length;\r\n        }\r\n        else\r\n        {\r\n            if(this.size + length > this.buffer.length)\r\n            {\r\n                let newList: T[] = new Array<T>(Math.max(this.buffer.length + this.bufferIncrement, this.size + length));\r\n                arrayCopyValue(this.buffer, newList, false);\r\n                this.buffer = newList;\r\n                for(var i = 0; i < length; i ++)\r\n                {\r\n                    this.buffer[this.size + i] = items[i];\r\n                }\r\n            }\r\n            else\r\n            {\r\n                for(var i = 0; i < length; i ++)\r\n                {\r\n                    this.buffer[this.size + i] = items[i];\r\n                }\r\n            }\r\n            this.size += length;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public RemoveAt(index: int)\r\n    {\r\n        if(this.buffer != null && index > -1 && index < this.size)\r\n        {\r\n            this.size --;\r\n            this.buffer[index] = null;\r\n            for(let b = index; b < this.size; ++b)\r\n            {\r\n                this.buffer[b] = this.buffer[b + 1];\r\n            }\r\n\r\n            this.buffer[this.size] = null;\r\n        }\r\n    }\r\n\r\n    /** 删除并返回最右一个值 */\r\n    public Pop():T\r\n    {\r\n        if(this.buffer == null || this.size == 0)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        --this.size;\r\n        let t = this.buffer[this.size];\r\n        this.buffer[this.size] = null;\r\n        return t;\r\n    }\r\n\r\n    /** 返回最后一个值 */\r\n    public Peek():T\r\n    {\r\n        if(this.buffer == null || this.size == 0)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        return this.buffer[this.size - 1];\r\n\r\n    }\r\n\r\n}","/** 一帧只执行一次标记 */\r\nexport default class GPUSkinningExecuteOncePerFrame\r\n{\r\n    private frameCount: int = -1;\r\n\r\n    /** 获取当前帧是否能执行 */\r\n    public CanBeExecute()\r\n    {\r\n        return this.frameCount != Laya.timer.currFrame;\r\n    }\r\n\r\n    /** 标记当前帧已经执行过了 */\r\n    public MarkAsExecuted()\r\n    {\r\n        this.frameCount = Laya.timer.currFrame;\r\n    }\r\n}","import GPUSkinningExecuteOncePerFrame from \"./GPUSkinningExecuteOncePerFrame\";\r\n\r\n/** GPU骨骼动画--材质球 */\r\nexport default class GPUSkinningMaterial\r\n{\r\n    /** 材质 */\r\n    material: Laya.Material;\r\n\r\n    /** 一帧只执行一次标记 */\r\n    executeOncePerFrame: GPUSkinningExecuteOncePerFrame = new GPUSkinningExecuteOncePerFrame();\r\n\r\n    /** 销毁 */\r\n    Destroy()\r\n    {\r\n        if(this.material)\r\n        {\r\n            this.material.destroy();\r\n            this.material = null;\r\n        }\r\n    }\r\n\r\n}","/** 材质状态 */\r\nexport enum MaterialState\r\n{\r\n    RootOn_BlendOff = 0, \r\n    RootOn_BlendOn_CrossFadeRootOn,\r\n    RootOn_BlendOn_CrossFadeRootOff,\r\n    RootOff_BlendOff,\r\n    RootOff_BlendOn_CrossFadeRootOn,\r\n    RootOff_BlendOn_CrossFadeRootOff, \r\n    Count = 6\r\n}","\r\nimport GPUSkinningAnimation from \"./Datas/GPUSkinningAnimation\";\r\nimport GPUSkinningPlayerMono from \"./GPUSkinningPlayerMono\";\r\nimport GPUSkinningBetterList from \"./GPUSkinningBetterList\";\r\nimport GPUSkinningMaterial from \"./GPUSkinningMaterial\";\r\nimport GPUSkinningExecuteOncePerFrame from \"./GPUSkinningExecuteOncePerFrame\";\r\nimport GPUSkinningPlayer from \"./GPUSkinningPlayer\";\r\n\r\nimport Material = Laya.Material;\r\nimport Mesh = Laya.Mesh;\r\nimport Texture2D = Laya.Texture2D;\r\nimport BoundSphere = Laya.BoundSphere;\r\nimport Vector4 = Laya.Vector4;\r\nimport Vector3 = Laya.Vector3;\r\nimport Matrix4x4 = Laya.Matrix4x4;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Shader3D = Laya.Shader3D;\r\n\r\nimport GPUSkinningClip from \"./Datas/GPUSkinningClip\";\r\nimport GPUSkinningFrame from \"./Datas/GPUSkinningFrame\";\r\nimport { MaterialState } from \"./MaterialState\";\r\nimport { GPUSkinningQuality } from \"./Datas/GPUSkinningQuality\";\r\nimport { GPUSkinningBaseMaterial } from \"./Material/GPUSkinningBaseMaterial\";\r\n\r\n\r\n/** GPU骨骼动画--资源 */\r\nexport default class GPUSkinningPlayerResources\r\n{\r\n\r\n    /** 烘焙动画--全部数据信息 */\r\n    public anim: GPUSkinningAnimation  = null;\r\n\r\n    /** 网格 */\r\n    public mesh: Mesh  = null;\r\n\r\n    /** 烘焙动画--贴图数据 */\r\n    public texture: Texture2D;\r\n\r\n    /** 动画播放控制器列表 */\r\n    public players: GPUSkinningPlayerMono[] = [];\r\n\r\n    /** 裁剪组 */\r\n    private cullingGroup:any = null;\r\n\r\n    /** 裁剪列表 <球形包围盒> */\r\n    private cullingBounds: GPUSkinningBetterList<BoundSphere> = new GPUSkinningBetterList<BoundSphere>(100);\r\n\r\n    /** 材质球列表 */\r\n    private mtrls: GPUSkinningMaterial[]  = null;\r\n\r\n    /** 一帧只执行一次标记 */\r\n    private executeOncePerFrame:GPUSkinningExecuteOncePerFrame  = new GPUSkinningExecuteOncePerFrame();\r\n\r\n\r\n\r\n\r\n    private time: float = 0;\r\n    public get Time():float\r\n    {\r\n        return this.time;\r\n    }\r\n\r\n    public set Time(value: float)\r\n    {\r\n        this.time = value;\r\n    }\r\n\r\n    private static keywords: string[]  = [\r\n        \"ROOTON_BLENDOFF\", \"ROOTON_BLENDON_CROSSFADEROOTON\", \"ROOTON_BLENDON_CROSSFADEROOTOFF\",\r\n        \"ROOTOFF_BLENDOFF\", \"ROOTOFF_BLENDON_CROSSFADEROOTON\", \"ROOTOFF_BLENDON_CROSSFADEROOTOFF\" \r\n    ];\r\n\r\n    \r\n    private static keywordDefines: Laya.ShaderDefine[]  = [];\r\n    private static ShaderDefine_SKIN_1: Laya.ShaderDefine;\r\n    private static ShaderDefine_SKIN_2: Laya.ShaderDefine;\r\n    private static ShaderDefine_SKIN_4: Laya.ShaderDefine;\r\n    \r\n\r\n    private static  shaderPropID_GPUSkinning_TextureMatrix : int= -1;\r\n\r\n    private static  shaderPropID_GPUSkinning_TextureSize_NumPixelsPerFrame : int= 0;\r\n\r\n    public static  shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation : int= 0;\r\n\r\n    public static  shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation_Last : int= 0;\r\n\r\n    private static  shaderPropID_GPUSkinning_RootMotion : int= 0;\r\n\r\n    public static  shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade : int= 0;\r\n\r\n    private static  shaderPropID_GPUSkinning_RootMotion_CrossFade : int= 0;\r\n\r\n    private static _isInited: boolean = false;\r\n    static Init()\r\n    {\r\n        if(this._isInited)\r\n            return;\r\n\r\n        this._isInited = true;\r\n\r\n        for(let key of this.keywords)\r\n        {\r\n            this.keywordDefines.push(Shader3D.getDefineByName(key));\r\n        }\r\n\r\n        this.ShaderDefine_SKIN_1 = Shader3D.getDefineByName(\"SKIN_1\");\r\n        this.ShaderDefine_SKIN_2 = Shader3D.getDefineByName(\"SKIN_2\");\r\n        this.ShaderDefine_SKIN_4 = Shader3D.getDefineByName(\"SKIN_4\");\r\n\r\n        this.shaderPropID_GPUSkinning_TextureMatrix = Shader3D.propertyNameToID(\"u_GPUSkinning_TextureMatrix\");\r\n\r\n        this.shaderPropID_GPUSkinning_TextureSize_NumPixelsPerFrame = Shader3D.propertyNameToID(\"u_GPUSkinning_TextureSize_NumPixelsPerFrame\");\r\n        this.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation = Shader3D.propertyNameToID(\"u_GPUSkinning_FrameIndex_PixelSegmentation\");\r\n        this.shaderPropID_GPUSkinning_RootMotion = Shader3D.propertyNameToID(\"u_GPUSkinning_RootMotion\");\r\n        this.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade = Shader3D.propertyNameToID(\"u_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade\");\r\n        this.shaderPropID_GPUSkinning_RootMotion_CrossFade = Shader3D.propertyNameToID(\"u_GPUSkinning_RootMotion_CrossFade\");\r\n\r\n\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        GPUSkinningPlayerResources.Init();\r\n    }\r\n\r\n    /** 销毁 */\r\n    public Destroy()\r\n    {\r\n        return;\r\n        \r\n        if(this.anim != null)\r\n        {\r\n            this.anim.destroy();\r\n            this.anim = null;\r\n        }\r\n\r\n        if(this.mesh != null)\r\n        {\r\n            this.mesh.destroy();\r\n            this.mesh = null;\r\n        }\r\n\r\n\r\n        if(this.mtrls != null)\r\n        {\r\n            for(let i = 0; i < this.mtrls.length; i ++)\r\n            {\r\n                this.mtrls[i].Destroy();\r\n                this.mtrls[i] = null;\r\n            }\r\n            this.mtrls = null;\r\n        }\r\n\r\n        if(this.texture != null)\r\n        {\r\n            this.texture.destroy();\r\n            this.texture = null;\r\n        }\r\n\r\n        if(this.players != null)\r\n        {\r\n            this.players.length = 0;\r\n            this.players = null;\r\n        }\r\n\r\n    }\r\n\r\n    /** 添加包围盒 */\r\n    public AddCullingBounds()\r\n    {\r\n        this.cullingBounds.Add(new BoundSphere(new Vector3(0, 0, 0), 0));\r\n    }\r\n\r\n    /** 移除包围盒 */\r\n    public RemoveCullingBounds(index: int )\r\n    {\r\n        this.cullingBounds.RemoveAt(index);\r\n\r\n    }\r\n\r\n    /** 动画播放控制器LOD改变 */\r\n    public LODSettingChanged(player: GPUSkinningPlayer )\r\n    {\r\n        if(player.LODEnabled)\r\n        {\r\n            let players = this.players;\r\n            let numPlayers = players.length;\r\n            for(let i = 0; i < numPlayers; i ++)\r\n            {\r\n                if(players[i].Player == player)\r\n                {\r\n                    let distanceIndex = 0;\r\n                    this.SetLODMeshByDistanceIndex(distanceIndex, players[i].Player);\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\n        else\r\n        {\r\n            player.SetLODMesh(null);\r\n        }\r\n    }\r\n\r\n\r\n    /** 根据距离设置LOD */\r\n    private SetLODMeshByDistanceIndex(index: int , player: GPUSkinningPlayer )\r\n    {\r\n        let lodMesh: Mesh  = null;\r\n        if (index == 0)\r\n        {\r\n            lodMesh = this.mesh;\r\n        }\r\n        else\r\n        {\r\n            let lodMeshes: Mesh[]  = this.anim.lodMeshes;\r\n            lodMesh = lodMeshes == null || lodMeshes.length == 0 ? this.mesh : lodMeshes[Math.min(index - 1, lodMeshes.length - 1)];\r\n            if (lodMesh == null) lodMesh = this.mesh;\r\n        }\r\n        player.SetLODMesh(lodMesh);\r\n    }\r\n\r\n\r\n    /** 更新裁剪 包围盒 */\r\n    private UpdateCullingBounds()\r\n    {\r\n        let numPlayers = this.players.length;\r\n        for (let i = 0; i < numPlayers; ++i)\r\n        {\r\n            let player: GPUSkinningPlayerMono  = this.players[i];\r\n            if(!player.isEnable)\r\n            {\r\n                // console.log(player.anim.name, player.isEnable);\r\n                continue;\r\n            }\r\n            \r\n            if(!player.Player || !player.Player.Position)\r\n            {\r\n                console.error(\"player.Player =null\");\r\n                return;\r\n            }\r\n            let bounds: BoundSphere  = this.cullingBounds.Get(i);\r\n            bounds.center = player.Player.Position;\r\n            bounds.radius = this.anim.sphereRadius;\r\n            this.cullingBounds[i] = bounds;\r\n        }\r\n    }\r\n\r\n    /** 帧更新 */\r\n    public Update(deltaTime: float , mtrl: GPUSkinningMaterial )\r\n    {\r\n        if (this.executeOncePerFrame.CanBeExecute())\r\n        {\r\n            this.executeOncePerFrame.MarkAsExecuted();\r\n            this.time += deltaTime;\r\n            // this.UpdateCullingBounds();\r\n        }\r\n\r\n        if (mtrl.executeOncePerFrame.CanBeExecute())\r\n        {\r\n            let anim = this.anim;\r\n            mtrl.executeOncePerFrame.MarkAsExecuted();\r\n            mtrl.material._shaderValues.setTexture(GPUSkinningPlayerResources.shaderPropID_GPUSkinning_TextureMatrix, this.texture);\r\n            // console.log(\"textureWidth=\", anim.textureWidth, \"textureHeight=\", anim.textureWidth, \"anim.bonesCount * 3=\",anim.bonesCount* 3);\r\n        \r\n            mtrl.material._shaderValues.setVector(GPUSkinningPlayerResources.shaderPropID_GPUSkinning_TextureSize_NumPixelsPerFrame, \r\n                new Vector4(anim.textureWidth, anim.textureHeight, anim.bonesCount * 3 /*treat 3 pixels as a float3x4*/, 0));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /** 更新数据 */\r\n    public UpdatePlayingData( mpb: Laya.ShaderData , spriteShaderData: Laya.ShaderData, \r\n        playingClip: GPUSkinningClip , frameIndex: int ,  \r\n        nextFrameIndex: int ,  nextFrameFade,\r\n        frame: GPUSkinningFrame , rootMotionEnabled: boolean ,\r\n        lastPlayedClip: GPUSkinningClip , frameIndex_crossFade: int , crossFadeTime: float , crossFadeProgress: float )\r\n    {\r\n        // console.log(\"frameIndex=\", frameIndex, \"nextFrameIndex=\", nextFrameIndex, \"nextFrameFade\", nextFrameFade );\r\n        // console.log(spriteShaderData[\"__id\"], playingClip.name,\"frameIndex=\", frameIndex, \"pixelSegmentation\", playingClip.pixelSegmentation);\r\n        spriteShaderData.setVector( GPUSkinningPlayerResources.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation, new Vector4(frameIndex, playingClip.pixelSegmentation, nextFrameIndex, nextFrameFade));\r\n\r\n        if (rootMotionEnabled)\r\n        {\r\n            let rootMotionInv: Matrix4x4  = frame.RootMotionInv(this.anim.rootBoneIndex);\r\n            mpb.setMatrix4x4(GPUSkinningPlayerResources.shaderPropID_GPUSkinning_RootMotion, rootMotionInv);\r\n        }\r\n\r\n        if (this.IsCrossFadeBlending(lastPlayedClip, crossFadeTime, crossFadeProgress))\r\n        {\r\n            if (lastPlayedClip.rootMotionEnabled)\r\n            {\r\n                mpb.setMatrix4x4(GPUSkinningPlayerResources.shaderPropID_GPUSkinning_RootMotion_CrossFade, \r\n                    lastPlayedClip.frames[frameIndex_crossFade].RootMotionInv(this.anim.rootBoneIndex));\r\n            }\r\n            console.log(spriteShaderData[\"__id\"], \"frameIndex_crossFade\",frameIndex_crossFade, \"CrossFadeBlendFactor\", this.CrossFadeBlendFactor(crossFadeProgress, crossFadeTime) ,  playingClip.name,\"frameIndex=\", frameIndex, \"pixelSegmentation\", playingClip.pixelSegmentation);\r\n      \r\n            spriteShaderData.setVector(GPUSkinningPlayerResources.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade,\r\n                new Vector4(frameIndex_crossFade, lastPlayedClip.pixelSegmentation, this.CrossFadeBlendFactor(crossFadeProgress, crossFadeTime)));\r\n        }\r\n    }\r\n\r\n\r\n    /** 动画混合百分比 */\r\n    public CrossFadeBlendFactor(crossFadeProgress: float , crossFadeTime: float ):float\r\n    {\r\n        return Mathf.Clamp01(crossFadeProgress / crossFadeTime);\r\n    }\r\n\r\n    /** 是否是动画混合阶段 */\r\n    public IsCrossFadeBlending(lastPlayedClip: GPUSkinningClip , crossFadeTime: float , crossFadeProgress: float ): boolean\r\n    {\r\n        return lastPlayedClip != null && crossFadeTime > 0 && crossFadeProgress <= crossFadeTime;\r\n    }\r\n\r\n\r\n    /** 获取材质，根据状态 */\r\n    public GetMaterial(state: MaterialState ):GPUSkinningMaterial\r\n    {\r\n        return this.mtrls[state];\r\n    }\r\n\r\n    public InitMaterial(originalMaterial: GPUSkinningBaseMaterial, skinningQuality: GPUSkinningQuality)\r\n    {\r\n        if(this.mtrls != null)\r\n        {\r\n            return;\r\n        }\r\n        // console.log(\"CloneMaterial skinningQuality=\", skinningQuality);\r\n\r\n        let SKILL_N:ShaderDefine;\r\n        switch(skinningQuality)\r\n        {\r\n            case GPUSkinningQuality.Bone1:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_1;\r\n                break;\r\n            case GPUSkinningQuality.Bone2:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_2;\r\n                break;\r\n            case GPUSkinningQuality.Bone4:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_4;\r\n                break;\r\n        }\r\n\r\n        let mtrls = this.mtrls = [];\r\n\r\n        for (let i = 0; i < MaterialState.Count; ++i)\r\n        {\r\n            let materialItem = new GPUSkinningMaterial();\r\n            let material =  materialItem.material = <GPUSkinningBaseMaterial> originalMaterial.clone();\r\n            material.lock = true;\r\n            material.__mname = originalMaterial.__mname + \" \"+ GPUSkinningPlayerResources.keywords[i];\r\n\r\n            mtrls[i] = materialItem;\r\n            \r\n            material.name = GPUSkinningPlayerResources.keywords[i];\r\n           \r\n            material._shaderValues.addDefine(SKILL_N);\r\n\r\n\r\n            // TODO 还未实现\r\n            // material.enableInstancing = true; // enable instancing in Unity 5.6\r\n            this.EnableKeywords(i, materialItem);\r\n\r\n        }\r\n    }\r\n\r\n    CloneMaterial(originalMaterial:GPUSkinningBaseMaterial, skinningQuality: GPUSkinningQuality)\r\n    {\r\n        if(originalMaterial == null)\r\n        {\r\n            console.error(\"GPUSkinningPlayerResources.CloneMaterial originalMaterial=null\");\r\n        }\r\n        // console.log(\"CloneMaterial skinningQuality=\", skinningQuality);\r\n        let material =  <GPUSkinningBaseMaterial> originalMaterial.clone();\r\n        material.__mname = originalMaterial.__mname + \" CloneMaterial\";\r\n        \r\n        let SKILL_N:ShaderDefine;\r\n        switch(skinningQuality)\r\n        {\r\n            case GPUSkinningQuality.Bone1:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_1;\r\n                break;\r\n            case GPUSkinningQuality.Bone2:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_2;\r\n                break;\r\n            case GPUSkinningQuality.Bone4:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_4;\r\n                break;\r\n        }\r\n\r\n        \r\n        material._shaderValues.addDefine(SKILL_N);\r\n        material._shaderValues.addDefine(GPUSkinningPlayerResources.keywordDefines[3]);\r\n        return material;\r\n    }\r\n\r\n    private EnableKeywords(ki: int , mtrl: GPUSkinningMaterial )\r\n    {\r\n        for(let i = 0; i < this.mtrls.length; ++i)\r\n        {\r\n            if(i == ki)\r\n            {\r\n                mtrl.material._shaderValues.addDefine(GPUSkinningPlayerResources.keywordDefines[i]);\r\n            }\r\n            else\r\n            {\r\n                mtrl.material._shaderValues.removeDefine(GPUSkinningPlayerResources.keywordDefines[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import GPUSkinningPlayerResources from \"./GPUSkinningPlayerResources\";\r\nimport GPUSkinningAnimation from \"./Datas/GPUSkinningAnimation\";\r\n\r\n\r\nimport Material = Laya.Material;\r\nimport Mesh = Laya.Mesh;\r\nimport Texture2D = Laya.Texture2D;\r\nimport GPUSkinningPlayerMono from \"./GPUSkinningPlayerMono\";\r\n\r\n/** GPU骨骼动画--播放管理器 */\r\nexport default class GPUSkinningPlayerMonoManager\r\n{\r\n    /** GPU骨骼动画--资源 列表 */\r\n    private items:GPUSkinningPlayerResources[] = [];\r\n\r\n    /** 注册 */\r\n    public  Register(anim: GPUSkinningAnimation , mesh: Mesh , originalMtrl:Material , textureRawData: Texture2D , player: GPUSkinningPlayerMono  )\r\n    {\r\n\r\n        if (anim == null || originalMtrl == null || textureRawData == null || player == null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let item: GPUSkinningPlayerResources  = null;\r\n\r\n        let items = this.items;\r\n        let numItems = items.length;\r\n        for(let i = 0; i < numItems; ++i)\r\n        {\r\n            if(items[i].anim.guid == anim.guid)\r\n            {\r\n                item = items[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(item == null)\r\n        {\r\n            item = new GPUSkinningPlayerResources();\r\n            items.push(item);\r\n        }\r\n\r\n        if(item.anim == null)\r\n        {\r\n            item.anim = anim;\r\n        }\r\n\r\n        if(item.mesh == null)\r\n        {\r\n            item.mesh = mesh;\r\n        }\r\n\r\n        item.InitMaterial(<any>originalMtrl, anim.skinQuality);\r\n\r\n        if(item.texture == null)\r\n        {\r\n            item.texture = textureRawData;\r\n        }\r\n\r\n        if (item.players.indexOf(player) == -1)\r\n        {\r\n            item.players.push(player);\r\n            item.AddCullingBounds();\r\n            player.isEnable = true;\r\n        }\r\n\r\n        return item;\r\n    }\r\n\r\n    /** 注销 */\r\n    public Unregister(player: GPUSkinningPlayerMono )\r\n    {\r\n        if(player == null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let items = this.items;\r\n        let numItems = items.length;\r\n        for(let i = 0; i < numItems; ++i)\r\n        {\r\n            let playerIndex = items[i].players.indexOf(player);\r\n            if(playerIndex != -1)\r\n            {\r\n                items[i].players.splice(playerIndex, 1);\r\n                items[i].RemoveCullingBounds(playerIndex);\r\n                player.isEnable = false;\r\n                if(items[i].players.length == 0)\r\n                {\r\n                    items[i].Destroy();\r\n                    items.splice(i, 1)\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    } \r\n}","import GPUSkinningBone from \"./Datas/GPUSkinningBone\";\r\n\r\nexport default class GPUSkinningPlayerJoint extends Laya.Script3D\r\n{\r\n\r\n    bone: GPUSkinningBone;\r\n    index: int = 0;\r\n    BoneIndex:int = 0;\r\n    BoneGUID: string = null;\r\n\r\n    private go: Laya.Sprite3D;\r\n    private transform: Laya.Transform3D;\r\n\r\n\r\n\r\n    public get Transform(): Laya.Transform3D\r\n    {\r\n        return this.transform;\r\n    }\r\n\r\n    public get GameObject(): Laya.Sprite3D\r\n    {\r\n        return this.go;\r\n    }\r\n\r\n\r\n    onAwake()\r\n    {\r\n        this.go = <Laya.Sprite3D> this.owner;\r\n        this.transform = this.go.transform;\r\n    }\r\n\r\n    Init(bone: GPUSkinningBone, index: int, boneIndex: int, boneGUID: string)\r\n    {\r\n        this.bone = bone;\r\n        this.index = index;\r\n        this.BoneIndex = boneIndex;\r\n        this.BoneGUID = boneGUID;\r\n    }\r\n}","import GPUSkinningPlayerResources from \"./GPUSkinningPlayerResources\";\r\nimport GPUSkinningClip from \"./Datas/GPUSkinningClip\";\r\nimport { GPUSKinningCullingMode } from \"./GPUSKinningCullingMode\";\r\nimport GPUSkinningPlayerJoint from \"./GPUSkinningPlayerJoint\";\r\nimport { GPUSkinningWrapMode } from \"./Datas/GPUSkinningWrapMode\";\r\nimport GPUSkinningMaterial from \"./GPUSkinningMaterial\";\r\nimport LayaUtil from \"../LayaExtends/LayaUtil\";\r\nimport GPUSkinningBone from \"./Datas/GPUSkinningBone\";\r\nimport { MaterialState } from \"./MaterialState\";\r\nimport GPUSkinningFrame from \"./Datas/GPUSkinningFrame\";\r\n\r\nimport MeshRenderer = Laya.MeshRenderer;\r\nimport MeshFilter = Laya.MeshFilter;\r\nimport Vector3 = Laya.Vector3;\r\nimport Vector4 = Laya.Vector4;\r\nimport Mesh = Laya.Mesh;\r\nimport Matrix4x4 = Laya.Matrix4x4;\r\nimport Quaternion = Laya.Quaternion;\r\nimport Transform3D = Laya.Transform3D;\r\n\r\n\r\nimport GPUSkinningAnimEvent from \"./Datas/GPUSkinningAnimEvent\";\r\nimport GPUSkining from \"./GPUSkining\";\r\nimport { GPUSkinningBaseMaterial } from \"./Material/GPUSkinningBaseMaterial\";\r\nimport { GPUSkinningToonV2Material } from \"./Material/GPUSkinningToonV2\";\r\nimport GPUSkinningPlayerMono from \"./GPUSkinningPlayerMono\";\r\n\r\n/** GPU骨骼动画--组件播放控制器 */\r\nexport default class GPUSkinningPlayer\r\n{\r\n    __mname:string;\r\n    private go: Laya.MeshSprite3D;\r\n    private transform: Laya.Transform3D;\r\n    private mr: MeshRenderer;\r\n    private mf: MeshFilter;\r\n    private spriteShaderData: Laya.ShaderData;\r\n\r\n    private time: float = 0;\r\n    private timeDiff: float = 0;\r\n    private crossFadeTime: float = -1;\r\n    private crossFadeProgress: float = 0;\r\n    private lastPlayedTime: float = 0;\r\n    private lastPlayedClip:GPUSkinningClip = null;\r\n    private lastPlayingFrameIndex: int = -1;\r\n    private lastPlayingClip: GPUSkinningClip = null;\r\n    private playingClip: GPUSkinningClip = null;\r\n\r\n\r\n    private nextFrameIndex: int = -1;\r\n    private nextLerpProgress: float = 0;\r\n\r\n\r\n    private res: GPUSkinningPlayerResources = null;\r\n    private rootMotionFrameIndex:int = -1;\r\n\r\n    private _speed: float = 1;\r\n    \r\n    public get speed(): float\r\n    {\r\n        return this._speed;\r\n    }\r\n\r\n    public set speed(value: float)\r\n    {\r\n        this._speed = value;\r\n        this.SetWeapSpeed(value);\r\n    }\r\n    /** 动画事件 */\r\n    sAnimEvent:Typed2Signal<GPUSkinningPlayer, int> = new Typed2Signal<GPUSkinningPlayer, int>();\r\n\r\n    /** 根节点是否驱动位移 */\r\n    private rootMotionEnabled: boolean = false;\r\n    public get RootMotionEnabled(): boolean\r\n    {\r\n        return this.rootMotionEnabled;\r\n    }\r\n\r\n    public set RootMotionEnabled(value: boolean)\r\n    {\r\n        this.rootMotionFrameIndex = -1;\r\n        this.rootMotionEnabled = value;\r\n    }\r\n\r\n\r\n    /** 裁剪模式 */\r\n    private cullingMode: GPUSKinningCullingMode = GPUSKinningCullingMode.CullUpdateTransforms;\r\n    public get CullingMode():GPUSKinningCullingMode\r\n    {\r\n        return this.cullingMode;\r\n    }\r\n\r\n    public set CullingMode(value: GPUSKinningCullingMode)\r\n    {\r\n        this.cullingMode = value;\r\n    }\r\n\r\n    /** 是否显示 */\r\n    private visible: boolean = true;\r\n    public get Visible(): boolean\r\n    {\r\n        return this.visible;\r\n    }\r\n\r\n    public set Visible(value: boolean)\r\n    {\r\n        this.visible = value;\r\n    }\r\n\r\n    /** LOD 模式是否开启 */\r\n    private lodEnabled: boolean = false;\r\n    public get LODEnabled()\r\n    {\r\n        return this.lodEnabled;\r\n    }\r\n\r\n    public set LODEnabled(value: boolean)\r\n    {\r\n        this.lodEnabled = value;\r\n        this.res.LODSettingChanged(this);\r\n    }\r\n\r\n    /** 是否播放 */\r\n    private isPlaying: boolean = false;\r\n    public get IsPlaying(): boolean\r\n    {\r\n        return this.isPlaying;\r\n    }\r\n\r\n    /** 当前播放的动画剪辑名称 */\r\n    public get PlayingClipName():string\r\n    {\r\n        return this.playingClip == null ? null : this.playingClip.name;\r\n    }\r\n\r\n    /** 世界坐标 */\r\n    public get Position():Vector3\r\n    {\r\n        return this.transform == null ? new Vector3() : this.transform.position;\r\n    }\r\n\r\n    /** 局部坐标 */\r\n    public get LocalPosition():Vector3\r\n    {\r\n        return this.transform == null ? new Vector3() : this.transform.localPosition;\r\n    }\r\n\r\n    /** 骨骼列表 */\r\n    private jointMap: Map<string, GPUSkinningPlayerJoint> = new Map<string, GPUSkinningPlayerJoint>();\r\n    private joints: GPUSkinningPlayerJoint[]  = null;\r\n    public get Joints(): GPUSkinningPlayerJoint[]\r\n    {\r\n        return this.joints;\r\n    }\r\n\r\n    /** 播放模式，单次或者循环 */\r\n    public get WrapMode(): GPUSkinningWrapMode\r\n    {\r\n        return this.playingClip == null ? GPUSkinningWrapMode.Once : this.playingClip.wrapMode;\r\n    }\r\n\r\n    /** 动画剪辑时间长度 */\r\n    public get ClipTimeLength(): float\r\n    {\r\n        if(!this.playingClip)\r\n        {\r\n            return 0;\r\n        }\r\n        \r\n        return this.playingClip.length;\r\n    }\r\n\r\n    /** 是否是动作结束帧 */\r\n    public get IsTimeAtTheEndOfLoop(): boolean\r\n    {\r\n        if(this.playingClip == null)\r\n        {\r\n            return false;\r\n        }\r\n        else\r\n        {\r\n            return this.GetFrameIndex() == (Math.floor(this.playingClip.length * this.playingClip.fps) - 1);\r\n        }\r\n\r\n    }\r\n\r\n    /** 播放进度百分比 */\r\n    public get NormalizedTime(): float\r\n    {\r\n        if(this.playingClip == null)\r\n        {\r\n            return 0;\r\n        }\r\n        else\r\n        {\r\n            return this.GetFrameIndex() / (Math.floor(this.playingClip.length * this.playingClip.fps) - 1);\r\n        }\r\n    }\r\n\r\n    public set NormalizedTime(value: float)\r\n    {\r\n        if(this.playingClip != null)\r\n        {\r\n            var v = Mathf.Clamp01(value);\r\n            \r\n            if(this.WrapMode == GPUSkinningWrapMode.Once)\r\n            {\r\n                this.time = v * this.playingClip.length;\r\n            }\r\n            else if(this.WrapMode == GPUSkinningWrapMode.Loop)\r\n            {\r\n                // if(this.playingClip.individualDifferenceEnabled)\r\n                // {\r\n                //     this.res.Time = this.playingClip.length + v * this.playingClip.length - this.timeDiff;\r\n                // }\r\n                // else\r\n                // {\r\n                //     this.res.Time = v * this.playingClip.length;\r\n                // }\r\n                \r\n                this.time = v * this.playingClip.length;\r\n            }\r\n            else\r\n            {\r\n                console.error(`GPUSkinningPlayer.NormalizedTime 未知 播放模式 WrapMode=${this.WrapMode}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 获取当前时间 */\r\n    private GetCurrentTime(): float\r\n    {\r\n        let time = 0;\r\n        switch(this.WrapMode)\r\n        {\r\n            case GPUSkinningWrapMode.Once:\r\n                time = this.time;\r\n                break;\r\n            case GPUSkinningWrapMode.Loop:\r\n                time = this.time;\r\n                // time = this.res.Time + (this.playingClip.individualDifferenceEnabled ? this.timeDiff : 0);\r\n                break;\r\n            default:\r\n                console.error(`GPUSkinningPlayer.GetCurrentTime 未知 播放模式 WrapMode=${this.WrapMode}`);\r\n                break;\r\n        }\r\n\r\n        return time;\r\n    }\r\n\r\n\r\n    __frameIndex:int = 0;\r\n    /** 获取当前帧 */\r\n    private GetFrameIndex(): int\r\n    {\r\n        let time = this.GetCurrentTime();\r\n        if(this.playingClip.length == time)\r\n        {\r\n            return this.GetTheLastFrameIndex_WrapMode_Once(this.playingClip);\r\n        }\r\n        else\r\n        {\r\n            return this.GetFrameIndex_WrapMode_Loop(this.playingClip, time);\r\n        }\r\n    }\r\n\r\n    /** 获取下一帧 */\r\n    private GetNextFrameIndex(currentFrameIndex:int): int\r\n    {\r\n        var frameIndex = currentFrameIndex;\r\n        var frameEnd = Math.floor(this.playingClip.length * this.playingClip.fps) - 1;\r\n        if(frameIndex == frameEnd)\r\n        {\r\n            switch(this.WrapMode)\r\n            {\r\n                case GPUSkinningWrapMode.Once:\r\n                    frameIndex = frameEnd;\r\n                    break;\r\n                case GPUSkinningWrapMode.Loop:\r\n                    frameIndex = 0;\r\n                    break;\r\n                default:\r\n                    console.error(`GPUSkinningPlayer.GetNextFrameIndex 未知 播放模式 WrapMode=${this.WrapMode}`);\r\n                    break;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            frameIndex ++;\r\n        }\r\n        return frameIndex;\r\n\r\n    }\r\n\r\n    /** 获取动画过度帧 */\r\n    private GetCrossFadeFrameIndex(): int\r\n    {\r\n        if(this.lastPlayedClip == null)\r\n        {\r\n            return 0;\r\n        }\r\n\r\n        switch(this.lastPlayedClip.wrapMode)\r\n        {\r\n            case GPUSkinningWrapMode.Once:\r\n                if(this.lastPlayedTime >= this.lastPlayedClip.length)\r\n                {\r\n                    return this.GetTheLastFrameIndex_WrapMode_Once(this.lastPlayedClip);\r\n                }\r\n                else\r\n                {\r\n                    return this.GetFrameIndex_WrapMode_Loop(this.lastPlayedClip, this.lastPlayedTime);\r\n                }\r\n                break;\r\n\r\n            case GPUSkinningWrapMode.Loop:\r\n                return this.GetFrameIndex_WrapMode_Loop(this.lastPlayedClip, this.lastPlayedTime);\r\n                break;\r\n\r\n            default:\r\n                console.error(`GPUSkinningPlayer.GetCrossFadeFrameIndex 未知 播放模式 this.lastPlayedClip.wrapMode=${this.lastPlayedClip.wrapMode}`);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /** 获取动画剪辑最后一帧索引 */\r\n    private GetTheLastFrameIndex_WrapMode_Once(clip: GPUSkinningClip ):int\r\n    {\r\n        return clip.frameLastIndex;\r\n        // return Math.floor(clip.length * clip.fps) - 1;\r\n    }\r\n\r\n    /** 获取动画剪辑帧索引 */\r\n    private  GetFrameIndex_WrapMode_Loop(clip: GPUSkinningClip , time: float ):int\r\n    {\r\n        return Math.floor(time * clip.fps) % Math.floor(clip.length * clip.fps);\r\n    }\r\n\r\n    /** 获取当前材质 */\r\n    private GetCurrentMaterial():GPUSkinningMaterial\r\n    {\r\n        if(this.res == null)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        if(this.playingClip == null)\r\n        {\r\n            return this.res.GetMaterial(MaterialState.RootOff_BlendOff);\r\n        }\r\n\r\n        let res = this.res;\r\n        let playingClip = this.playingClip;\r\n        let lastPlayedClip = this.lastPlayedClip;\r\n        let rootMotionEnabled = this.rootMotionEnabled;\r\n        let crossFadeTime = this.crossFadeTime;\r\n        let crossFadeProgress = this.crossFadeProgress;\r\n\r\n        if(playingClip.rootMotionEnabled && rootMotionEnabled)\r\n        {\r\n            if(res.IsCrossFadeBlending(lastPlayedClip, crossFadeTime, crossFadeProgress))\r\n            {\r\n                if(lastPlayedClip.rootMotionEnabled)\r\n                {\r\n                    return res.GetMaterial(MaterialState.RootOn_BlendOn_CrossFadeRootOn);\r\n                }\r\n                return res.GetMaterial(MaterialState.RootOn_BlendOn_CrossFadeRootOff);\r\n            }\r\n            return res.GetMaterial(MaterialState.RootOn_BlendOff);\r\n        }\r\n\r\n        if(res.IsCrossFadeBlending(lastPlayedClip, crossFadeTime, crossFadeProgress))\r\n        {\r\n            if(lastPlayedClip.rootMotionEnabled)\r\n            {\r\n                return res.GetMaterial(MaterialState.RootOff_BlendOn_CrossFadeRootOn);\r\n            }\r\n            return res.GetMaterial(MaterialState.RootOff_BlendOn_CrossFadeRootOff);\r\n        }\r\n        else\r\n        {\r\n            return res.GetMaterial(MaterialState.RootOff_BlendOff);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /** 设置LOD网格 */\r\n    public SetLODMesh(mesh: Mesh )\r\n    {\r\n        if(!this.LODEnabled)\r\n        {\r\n            mesh = this.res.mesh;\r\n        }\r\n\r\n        if(this.mf != null && this.mf.sharedMesh != mesh)\r\n        {\r\n            this.mf.sharedMesh = mesh;\r\n        }\r\n    }\r\n\r\n    private mtrl: GPUSkinningMaterial;\r\n\r\n    get material(): GPUSkinningBaseMaterial\r\n    {\r\n        return <any>this.mtrl.material;\r\n    }\r\n\r\n\r\n\r\n    static _ShaderUID = 0;\r\n    constructor(go: Laya.MeshSprite3D, res: GPUSkinningPlayerResources)\r\n    {\r\n        this.go = go;\r\n        this.transform = go.transform;\r\n        this.res = res;\r\n\r\n        this.mr = go.meshRenderer;\r\n        this.mf = go.meshFilter;\r\n        this.spriteShaderData = go.meshRenderer._shaderValues;\r\n        go.meshRenderer['__id']  = this.spriteShaderData['__id'] = GPUSkinningPlayer._ShaderUID ++;\r\n\r\n        let mtrl: GPUSkinningMaterial = this.GetCurrentMaterial();\r\n        this.mtrl = mtrl;\r\n        var mtrl2 = new GPUSkinningMaterial();\r\n        mtrl2.material =  res.CloneMaterial(<any>mtrl.material, res.anim.skinQuality)\r\n        mtrl = mtrl2;\r\n        this.mtrl = mtrl2;\r\n        this.mr.sharedMaterial = mtrl == null ? null : mtrl.material;\r\n        this.mf.sharedMesh = res.mesh;\r\n        var subMeshCount = this.mf.sharedMesh.subMeshCount;\r\n        if(subMeshCount > 1)\r\n        {\r\n            var matrices = [mtrl.material];\r\n            for(var i = 1; i < subMeshCount; i ++)\r\n            {\r\n                var m:GPUSkinningToonV2Material = mtrl.material.clone();\r\n                // m.albedoColor = new Laya.Vector4(1, 0, 0, 1);\r\n                matrices.push(m);\r\n            }\r\n            this.mr.sharedMaterials =  matrices;\r\n        }\r\n\r\n\r\n\r\n        this.ConstructJoints();\r\n    }\r\n\r\n    \r\n    onDestroy():void\r\n    {\r\n        if( this.mtrl)\r\n        {\r\n            this.mtrl.Destroy();\r\n            this.mtrl = null;\r\n        }\r\n    }\r\n\r\n    /** 构建骨骼节点 */\r\n    private ConstructJoints()\r\n    {\r\n        if(this.joints)\r\n            return;\r\n\r\n\r\n        \r\n        this.jointMap.clear();\r\n        let existingJoints: GPUSkinningPlayerJoint[] = this.go.getComponentsInChildren<GPUSkinningPlayerJoint>(GPUSkinningPlayerJoint);\r\n\r\n        let bones: GPUSkinningBone[] = this.res.anim.bones;\r\n        let numBones = bones == null ? 0 : bones.length;\r\n        for(let i = 0; i < numBones; i ++)\r\n        {\r\n            let bone = bones[i];\r\n            if(!bone.isExposed)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            if(this.joints == null)\r\n            {\r\n                this.joints = [];\r\n            }\r\n\r\n            let joints =  this.joints;\r\n\r\n            // 是否从已经存在的骨骼节点设置了\r\n            let inTheExistingJoints: boolean = false;\r\n\r\n            if(existingJoints != null)\r\n            {\r\n                for(let j = 0; j < existingJoints.length; j ++)\r\n                {\r\n                    let existingJoint = existingJoints[j];\r\n                    if(existingJoint && existingJoint.BoneGUID == bone.guid)\r\n                    {\r\n                        if(existingJoint.index != i)\r\n                        {\r\n                            existingJoint.Init(bone, i, bone.boneIndex, bone.guid);\r\n                        }\r\n\r\n                        existingJoint.GameObject.name = bone.name;\r\n                        joints.push(existingJoint);\r\n                        this.jointMap.set(bone.name, existingJoint);\r\n                        existingJoints[j] = null; \r\n                        inTheExistingJoints = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(!inTheExistingJoints)\r\n            {\r\n                let joinGO = new Laya.Sprite3D(bone.name);\r\n                this.go.addChild(joinGO);\r\n                joinGO.transform.localPosition = new Vector3();\r\n                joinGO.transform.localScale = new Vector3(1, 1, 1);\r\n\r\n                let join:GPUSkinningPlayerJoint = joinGO.addComponent(GPUSkinningPlayerJoint);\r\n                join.onAwake();\r\n                joints.push(join);\r\n                join.Init(bone, i, bone.boneIndex, bone.guid);\r\n                \r\n                this.jointMap.set(bone.name, join);\r\n            }\r\n        }\r\n\r\n        // 清除没用到已经存在的骨骼节点\r\n        this.DeleteInvalidJoints(existingJoints);\r\n\r\n    }\r\n\r\n\r\n    /** 清除没用到已经存在的骨骼节点 */\r\n    private DeleteInvalidJoints(joints: GPUSkinningPlayerJoint[] )\r\n    {\r\n        if(joints)\r\n        {\r\n            for(let i = 0; i < joints.length; i ++)\r\n            {\r\n                let join = joints[i];\r\n                if(!join)\r\n                    continue;\r\n\r\n                let joinGO = <Laya.Sprite3D> join.owner;\r\n                for(let j = joinGO.numChildren -1; j >= 0 ; j --)\r\n                {\r\n                    let child =  <Laya.Sprite3D> joinGO.getChildAt(j);\r\n                    this.go.addChild(child);\r\n                    child.transform.localPosition = new Vector3();\r\n                }\r\n\r\n                joinGO.removeSelf();\r\n                joinGO.destroy();\r\n                if(join.bone)\r\n                {\r\n                    this.jointMap.delete(join.bone.name);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 查找导出的骨骼节点 */\r\n    public FindJoint(boneName: string):GPUSkinningPlayerJoint\r\n    {\r\n        if(this.jointMap.has(boneName))\r\n        {\r\n            return this.jointMap.get(boneName);\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    /** 查找导出的骨骼节点GameObject */\r\n    public FindJointGameObject(boneName: string):Laya.Sprite3D\r\n    {\r\n        var joint = this.FindJoint(boneName);\r\n        if(joint)\r\n        {\r\n            return joint.GameObject;\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public GotoAndStop(clipName:string, nomrmalizeTime : number = 0)\r\n    {\r\n        this.Play(clipName, nomrmalizeTime);\r\n        this.Stop();\r\n    }\r\n\r\n    /** 播放 */\r\n    public Play(clipName:string, nomrmalizeTime : number = 0)\r\n    {\r\n        clipName = clipName.toLowerCase();\r\n        let clips: GPUSkinningClip[] = this.res.anim.clips;\r\n        let numClips = clips == null ? 0 : clips.length;\r\n\r\n        let playingClip = this.playingClip;\r\n        for(let i = 0; i < numClips; ++i)\r\n        {\r\n            if(clips[i].name == clipName)\r\n            {\r\n                let item = clips[i];\r\n                if(playingClip != item\r\n                    || (playingClip != null && playingClip.wrapMode == GPUSkinningWrapMode.Once && this.IsTimeAtTheEndOfLoop)\r\n                    || (playingClip != null && !this.isPlaying)\r\n                )\r\n                {\r\n                    this.SetNewPlayingClip(item, nomrmalizeTime);\r\n                }\r\n                \r\n                this.time = nomrmalizeTime * item.length;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 播放动作融合 */\r\n    public CrossFade(clipName: string, fadeLength: float, nomrmalizeTime: number = 0)\r\n    {\r\n        this.Play(clipName, nomrmalizeTime);\r\n        return;\r\n\r\n        if(this.playingClip == null)\r\n        {\r\n            this.Play(clipName, nomrmalizeTime);\r\n        }\r\n        else\r\n        {\r\n            let playingClip = this.playingClip;\r\n\r\n            let clips: GPUSkinningClip[] = this.res.anim.clips;\r\n            let numClips = clips == null ? 0 : clips.length;\r\n            for(let i = 0; i < numClips; ++i)\r\n            {\r\n                if(clips[i].name == clipName)\r\n                {\r\n                    let item = clips[i];\r\n\r\n                    if(playingClip != item)\r\n                    {\r\n                        this.crossFadeProgress = nomrmalizeTime;\r\n                        this.crossFadeTime = fadeLength;\r\n                        this.SetNewPlayingClip(item, nomrmalizeTime);\r\n                        return;\r\n                    }\r\n\r\n                    if(\r\n                        (playingClip != null && playingClip.wrapMode == GPUSkinningWrapMode.Once && this.IsTimeAtTheEndOfLoop)\r\n                        || (playingClip != null && !this.isPlaying)\r\n                    )\r\n                    {\r\n                        this.SetNewPlayingClip(item, nomrmalizeTime);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    /** 设置新播放的剪辑 */\r\n    private SetNewPlayingClip(clip: GPUSkinningClip, nomrmalizeTime: number = 0)\r\n    {\r\n        this.lastPlayedClip = this.playingClip;\r\n        this.lastPlayedTime = this.GetCurrentTime();\r\n\r\n        this.isPlaying = true;\r\n        this.playingClip = clip;\r\n        this.rootMotionFrameIndex = -1;\r\n        this.time = nomrmalizeTime * clip.length;\r\n        this.timeDiff = Random.range(0, clip.length);\r\n        this.SetWeapClip(clip.name, nomrmalizeTime, this.timeDiff);\r\n    }\r\n\r\n\r\n    /** 暂停 */\r\n    public Stop()\r\n    {\r\n        // this.isPlaying = false;\r\n        this.speed = 0;\r\n    }\r\n\r\n    /** 继续播放 */\r\n    public Resume()\r\n    {\r\n        if(this.playingClip != null)\r\n        {\r\n            // this.isPlaying = true;\r\n            this.speed = 1;\r\n        }\r\n    }\r\n\r\n    isRandomPlayClip: boolean = false;\r\n    randomPlayClipI = 0;\r\n\r\n    /** 刷新入口 每帧调用 */\r\n    public Update(timeDelta: float)\r\n    {\r\n        if(!this.isPlaying || this.playingClip == null)\r\n        {\r\n            return;\r\n        }\r\n        timeDelta *= this.speed;\r\n\r\n        if(this.isRandomPlayClip)\r\n        {\r\n            this.randomPlayClipI ++;\r\n            if(this.randomPlayClipI >= Random.range(100, 500))\r\n            {\r\n                this.randomPlayClipI = 0;\r\n                var i = Random.range(0, this.res.anim.clips.length);\r\n                i = Math.floor(i);\r\n                this.Play(this.res.anim.clips[i].name);\r\n            }\r\n        }\r\n\r\n        let currMtrl = this.mtrl;\r\n        // let currMtrl = this.GetCurrentMaterial();\r\n        // if(currMtrl == null)\r\n        // {\r\n        //     return;\r\n        // }\r\n\r\n        // if(this.mr.sharedMaterial != currMtrl.material)\r\n        // {\r\n        //     this.mr.sharedMaterial = currMtrl.material;\r\n        // }\r\n\r\n        let playingClip = this.playingClip;\r\n\r\n        switch(playingClip.wrapMode)\r\n        {\r\n            case GPUSkinningWrapMode.Loop:\r\n                this.UpdateMaterial(timeDelta, currMtrl);\r\n                this.time += timeDelta;\r\n                break;\r\n\r\n            case GPUSkinningWrapMode.Once:\r\n                if(this.time >= playingClip.length)\r\n                {\r\n                    this.time = playingClip.length;\r\n                    this.UpdateMaterial(timeDelta, currMtrl);\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateMaterial(timeDelta, currMtrl);\r\n                    this.time += timeDelta;\r\n                    if(this.time > playingClip.length || this.__frameIndex == this.GetTheLastFrameIndex_WrapMode_Once(this.playingClip))\r\n                    {\r\n                        this.time = playingClip.length;\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                console.error(`GPUSkinningPlayer.Update 未知 播放模式 playingClip.wrapMode=${playingClip.wrapMode}`);\r\n                break;\r\n\r\n        }\r\n\r\n        this.crossFadeProgress += timeDelta;\r\n        this.lastPlayedTime += timeDelta;\r\n\r\n        \r\n        this.lastPlayingClip = this.playingClip;\r\n        this.lastPlayingFrameIndex = this.__frameIndex;\r\n\r\n        this.nextFrameIndex = this.__frameIndex;\r\n        this.nextLerpProgress += timeDelta;\r\n\r\n    }\r\n\r\n    \r\n    \r\n    onRenderUpdate(context: Laya.RenderContext3D, transform: Laya.Transform3D, render:Laya.MeshRenderer)\r\n    {\r\n        console.log(render['__id'], \"onRenderUpdate\");\r\n        // render._shaderValues.setVector( GPUSkinningPlayerResources.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation, new Vector4(this.__frameIndex, this.playingClip.pixelSegmentation, 0, 0));\r\n\r\n    }\r\n\r\n\r\n\r\n    private UpdateMaterial(deltaTime: float , currMtrl: GPUSkinningMaterial )\r\n    {\r\n        let res = this.res;\r\n        let frameIndex = this.GetFrameIndex();\r\n        this.__frameIndex = frameIndex;\r\n        // if(this.speed == 0)\r\n        // {\r\n        //     this.nextFrameIndex = this.__frameIndex;\r\n        // }\r\n        // else\r\n        {\r\n            this.nextFrameIndex = this.GetNextFrameIndex(frameIndex);\r\n        }\r\n        \r\n        if(this.lastPlayingClip == this.playingClip && this.lastPlayingFrameIndex == frameIndex)\r\n        {\r\n            // res.Update(deltaTime, currMtrl);\r\n            // return;\r\n        }\r\n        else\r\n        {\r\n            this.nextLerpProgress = 0;\r\n        }\r\n\r\n\r\n\r\n        let lastPlayedClip = this.lastPlayingClip;\r\n        let playingClip = this.playingClip;\r\n\r\n        let blend_crossFade:float = 1;\r\n        let frameIndex_crossFade:int = -1;\r\n        let frame_crossFade: GPUSkinningFrame  = null;\r\n        if (res.IsCrossFadeBlending(lastPlayedClip, this.crossFadeTime, this.crossFadeProgress))\r\n        {\r\n            frameIndex_crossFade = this.GetCrossFadeFrameIndex();\r\n            frame_crossFade = lastPlayedClip.frames[frameIndex_crossFade];\r\n            blend_crossFade = res.CrossFadeBlendFactor(this.crossFadeProgress, this.crossFadeTime);\r\n        }\r\n\r\n        let nextFrameFade = res.CrossFadeBlendFactor(this.nextLerpProgress, playingClip.fps * 0.001);\r\n        // if(nextFrameFade != 0)\r\n        // {\r\n        //     nextFrameFade = 0.5;\r\n        // }\r\n\r\n        var mpb = currMtrl.material._shaderValues;\r\n\r\n        let frame: GPUSkinningFrame = playingClip.frames[frameIndex];\r\n        if (this.Visible || \r\n            this.CullingMode == GPUSKinningCullingMode.AlwaysAnimate)\r\n        {\r\n            res.Update(deltaTime, currMtrl);\r\n            res.UpdatePlayingData(\r\n                mpb, this.spriteShaderData, \r\n                playingClip, frameIndex, \r\n                this.nextFrameIndex, nextFrameFade,\r\n                frame,  playingClip.rootMotionEnabled && this.rootMotionEnabled,\r\n                lastPlayedClip, this.GetCrossFadeFrameIndex(), this.crossFadeTime, this.crossFadeProgress\r\n            );\r\n\r\n            // this.mr.SetPropertyBlock(mpb);\r\n            this.UpdateJoints(frame);\r\n        }\r\n\r\n        if (playingClip.rootMotionEnabled && this.rootMotionEnabled && frameIndex != this.rootMotionFrameIndex)\r\n        {\r\n            if (this.CullingMode != GPUSKinningCullingMode.CullCompletely)\r\n            {\r\n                this.rootMotionFrameIndex = frameIndex;\r\n                this.DoRootMotion(frame_crossFade, 1 - blend_crossFade, false);\r\n                this.DoRootMotion(frame, blend_crossFade, true);\r\n            }\r\n        }\r\n        \r\n\r\n        this.UpdateEvents(playingClip, frameIndex, frame_crossFade == null ? null : lastPlayedClip, frameIndex_crossFade);\r\n\r\n    }\r\n\r\n    \r\n    private _tmp_p = new Vector3();\r\n    private _tmp_r = new Quaternion();\r\n    private _tmp_s = new Vector3();\r\n\r\n    /** 刷新骨骼节点位置 */\r\n    private UpdateJoints(frame: GPUSkinningFrame )\r\n    {\r\n        if(window['DONT_UPDATE_JOIN']) return\r\n        if(this.joints == null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let res = this.res;\r\n        let joints = this.joints;\r\n        let playingClip = this.playingClip;\r\n\r\n        let matrices: Matrix4x4[]  = frame.matrices;\r\n        let bones: GPUSkinningBone[]  = res.anim.bones;\r\n        let numJoints:int  = joints.length;\r\n        for(let i = 0; i < numJoints; ++i)\r\n        {\r\n            let joint: GPUSkinningPlayerJoint  = joints[i];\r\n            let jointTransform: Transform3D  = joint.Transform;\r\n            if (jointTransform != null)\r\n            {\r\n                // TODO: Update Joint when Animation Blend\r\n                var jointMatrix: Matrix4x4 = new Matrix4x4();\r\n\r\n                Matrix4x4.multiply(frame.matrices[joint.index], bones[joint.index].BindposeInv, jointMatrix);\r\n                if(playingClip.rootMotionEnabled && this.rootMotionEnabled)\r\n                {\r\n                    let outM: Matrix4x4 = new Matrix4x4();\r\n                    Matrix4x4.multiply( frame.RootMotionInv(res.anim.rootBoneIndex), jointMatrix, outM);\r\n                    jointMatrix = outM;\r\n                }\r\n\r\n                // var p = new Vector3();\r\n                // var r = new Quaternion();\r\n                // var s = new Vector3();\r\n                \r\n                jointMatrix.decomposeTransRotScale(this._tmp_p, this._tmp_r, this._tmp_s);\r\n\r\n                // jointTransform.localMatrix = jointMatrix;\r\n                // jointTransform.localScale = new Vector3(1, 1, 1);\r\n                jointTransform.localPosition = this._tmp_p;\r\n                jointTransform.localRotation = this._tmp_r;\r\n                // jointTransform['_onWorldScaleTransform']();\r\n\r\n\r\n                // var vec3 = new Vector3();\r\n                // jointMatrix.getTranslationVector(vec3);\r\n                // jointTransform.localPosition = vec3;\r\n\r\n                // vec3 = new Vector3();\r\n\r\n                // jointMatrix.getForward(vec3);\r\n\r\n                // var vec3_2 = new Vector3();\r\n                // Quaternion.angleTo(new Vector3(0, 0, 0), vec3, vec3_2);\r\n\r\n                // jointTransform.localRotationEuler = vec3_2;\r\n                // console.log(\"localPosition=\", jointTransform.localPosition, \" localRotationEuler=\", jointTransform.localRotationEuler);\r\n            }\r\n            else\r\n            {\r\n                joints.splice(i, 1);\r\n                --i;\r\n                --numJoints;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /** 设置根节点位置和旋转 */\r\n    private DoRootMotion(frame: GPUSkinningFrame , blend: float , doRotate: boolean )\r\n    {\r\n        // TODO 占时没实现\r\n        // if(frame == null)\r\n        // {\r\n        //     return;\r\n        // }\r\n\r\n        // Quaternion deltaRotation = frame.rootMotionDeltaPositionQ;\r\n        // Vector3 newForward = deltaRotation * transform.forward;\r\n        // Vector3 deltaPosition = newForward * frame.rootMotionDeltaPositionL * blend;\r\n        // transform.Translate(deltaPosition, Space.World);\r\n\r\n        // if (doRotate)\r\n        // {\r\n        //     transform.rotation *= frame.rootMotionDeltaRotation;\r\n        // }\r\n    }\r\n\r\n\r\n    /** 刷新事件 */\r\n    private UpdateEvents(playingClip: GPUSkinningClip , playingFrameIndex:int , corssFadeClip: GPUSkinningClip , crossFadeFrameIndex:int )\r\n    {\r\n        this.UpdateClipEvent(playingClip, playingFrameIndex);\r\n        this.UpdateClipEvent(corssFadeClip, crossFadeFrameIndex);\r\n    }\r\n\r\n\r\n    /** 刷新剪辑事件 */\r\n    private UpdateClipEvent(clip: GPUSkinningClip , frameIndex:int )\r\n    {\r\n        if(clip == null || clip.events == null || clip.events.length == 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let events: GPUSkinningAnimEvent[]  = clip.events;\r\n        let numEvents:int  = events.length;\r\n        for(let i = 0; i < numEvents; ++i)\r\n        {\r\n            if(events[i].frameIndex == frameIndex)\r\n            {\r\n                this.sAnimEvent.dispatch(this, events[i].eventId);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /** 当前武器字典 */\r\n    weaponMap = new Map<string, GPUSkinningPlayerMono>();\r\n\r\n    /** 设置武器 */\r\n    public SetWeapon(boneName: string, skinName: string, animName:string)\r\n    {\r\n        var bone = this.FindJointGameObject(boneName);\r\n        if(bone == null)\r\n        {\r\n            return;\r\n        }\r\n\r\n\r\n        GPUSkining.CreateByName(skinName, animName, Laya.Handler.create(this, (mono: GPUSkinningPlayerMono)=>{\r\n            if(this.weaponMap.has(boneName))\r\n            {\r\n                var preWeapon = this.weaponMap.get(boneName);\r\n                preWeapon.owner.removeSelf();\r\n                preWeapon.owner.destroy();\r\n                this.weaponMap.delete(boneName);\r\n            }\r\n            bone.addChild(mono.owner);\r\n            var sprite = <Laya.Sprite3D> mono.owner;\r\n            sprite.transform.localPosition = new Vector3(0, 0, 0);\r\n            sprite.transform.localRotationEuler = new Vector3(0, 0, 0);\r\n            // sprite.transform.setWorldLossyScale(this.transform.getWorldLossyScale());\r\n            this.weaponMap.set(boneName, mono);\r\n            var clipName = this.PlayingClipName;\r\n            \r\n            if(!mono.Player.res.anim.clipMap.has(clipName))\r\n            {\r\n                clipName = \"standby\";\r\n            }\r\n            mono.Player.Play(clipName, this.NormalizedTime);\r\n        }));\r\n    }\r\n\r\n    /** 设置武器动作 */\r\n    private SetWeapClip(clipName: string, nomrmalizeTime: number, timeDiff: number)\r\n    {\r\n        this.weaponMap.forEach((v, k)=>{\r\n            if(!v.Player.res.anim.clipMap.has(clipName))\r\n            {\r\n                clipName = \"standby\";\r\n            }\r\n            v.Player.Play(clipName, nomrmalizeTime);\r\n            v.Player.timeDiff = timeDiff;\r\n        })\r\n    }\r\n\r\n    /** 设置武器播放速度 */\r\n    private SetWeapSpeed(speed: number)\r\n    {\r\n        this.weaponMap.forEach((v, k)=>{\r\n            v.Player.speed = speed;\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import GPUSkinningAnimation from \"./Datas/GPUSkinningAnimation\";\r\nimport { GPUSKinningCullingMode } from \"./GPUSKinningCullingMode\";\r\nimport GPUSkinningPlayerMonoManager from \"./GPUSkinningPlayerMonoManager\";\r\nimport GPUSkinningPlayer from \"./GPUSkinningPlayer\";\r\nimport Mesh = Laya.Mesh;\r\nimport Material = Laya.Material;\r\nimport Texture2D = Laya.Texture2D;\r\nimport GPUSkinningPlayerResources from \"./GPUSkinningPlayerResources\";\r\nimport GPUSkining from \"./GPUSkining\";\r\n\r\n\r\n/** GPU骨骼动画--组件 */\r\nexport default class GPUSkinningPlayerMono extends Laya.Script3D\r\n{\r\n    isEnable: boolean = false;\r\n    /** 烘焙动画--全部数据信息 */\r\n    anim: GPUSkinningAnimation;\r\n\r\n    /** 网格 */\r\n    mesh: Mesh;\r\n    \r\n    /** 材质 */\r\n    mtrl: Material;\r\n\r\n    /** 烘焙动画--贴图数据 */\r\n    textureRawData: Texture2D;\r\n\r\n    /** 默认播放动画剪辑 */\r\n    defaultPlayingClipIndex:int = 0;\r\n\r\n    /** 根节点是否驱动位移 */\r\n    rootMotionEnabled: boolean = false;\r\n\r\n    /** LOD 模式是否开启 */\r\n    lodEnabled: boolean = true;\r\n\r\n    /** 裁剪模式 */\r\n    cullingMode: GPUSKinningCullingMode = GPUSKinningCullingMode.CullUpdateTransforms;\r\n\r\n    /** 播放管理器 */\r\n    static playerManager: GPUSkinningPlayerMonoManager = new GPUSkinningPlayerMonoManager();\r\n\r\n    /** 播放控制器 */\r\n    private player: GPUSkinningPlayer;\r\n    public get Player(): GPUSkinningPlayer\r\n    {\r\n        return this.player;\r\n    }\r\n\r\n    /** 查找导出的骨骼节点GameObject */\r\n    public FindJointGameObject(boneName: string):Laya.Sprite3D\r\n    {\r\n        if(this.player)\r\n        {\r\n            return this.player.FindJointGameObject(boneName);\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    gameObject: Laya.MeshSprite3D;\r\n\r\n    _cloneTo(dest: GPUSkinningPlayerMono): void \r\n    {\r\n        dest.anim = this.anim;\r\n        dest.mesh = this.mesh;\r\n        dest.mtrl = this.mtrl;\r\n        dest.textureRawData = this.textureRawData;\r\n        dest.Init();\r\n\r\n        \r\n        if(dest.player )\r\n        {\r\n            if(dest.player.__mname)\r\n            {\r\n                console.warn(dest.player.__mname);\r\n            }\r\n            else\r\n            {\r\n                dest.player.__mname = dest.anim.name + \" _cloneTo Set\";\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 创建后只执行一次\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onAwake():void\r\n    {\r\n\r\n        // console.log(\"onAwake\");\r\n    }\r\n\r\n    /**\r\n     * 每次启动后执行\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onEnable():void\r\n    {\r\n        // console.log(\"onEnable\");\r\n        var preHasPlayer = this.player != null;\r\n        this.Init();\r\n\r\n        \r\n        if(!preHasPlayer  && this.player )\r\n        {\r\n            if(this.player.__mname)\r\n            {\r\n                console.warn(this.player.__mname);\r\n            }\r\n            else\r\n            {\r\n                this.player.__mname = this.anim.name + \" onEnable Set\";\r\n            }\r\n        }\r\n\r\n        this.isEnable = true;\r\n    }\r\n\r\n\r\n    onStart():void\r\n    {\r\n        // console.log(\"onStart\");\r\n    }\r\n\r\n    \r\n    onUpdate():void\r\n    {\r\n        if(GPUSkining.IsPauseAll)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        if(this.player != null)\r\n        {\r\n            this.player.Update(Laya.timer.delta / 1000 );\r\n        }\r\n    }\r\n\r\n    /**\r\n\t * 渲染之前执行\r\n\t * 此方法为虚方法，使用时重写覆盖即可\r\n\t */\r\n    onPreRender(): void \r\n    {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 禁用时执行\r\n\t * 此方法为虚方法，使用时重写覆盖即可\r\n\t */\r\n\tonDisable(): void {\r\n\r\n        // console.log(\"onDisable\");\r\n        this.isEnable = false;\r\n\t}\r\n\r\n    \r\n    onDestroy():void\r\n    {\r\n\r\n        // console.log(\"onDestroy\");\r\n        GPUSkinningPlayerMono.playerManager.Unregister(this);\r\n        this.anim = null;\r\n        this.mesh = null;\r\n        this.mtrl = null;\r\n        this.textureRawData = null;\r\n\r\n        if(this.player)\r\n        {\r\n            this.player.onDestroy();\r\n            this.player = null;\r\n        }\r\n        \r\n    }\r\n\r\n    public SetData(anim: GPUSkinningAnimation, mesh: Mesh, mtrl: Material, textureRawData: Texture2D)\r\n    {\r\n        if(this.player != null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.anim = anim;\r\n        this.mesh = mesh;\r\n        this.mtrl = mtrl;\r\n        this.textureRawData = textureRawData;\r\n        this.Init();\r\n\r\n        if(this.player )\r\n        {\r\n            if(this.player.__mname)\r\n            {\r\n                console.warn(this.player.__mname);\r\n            }\r\n            else\r\n            {\r\n                this.player.__mname = anim.name + \" SetData Set\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Init()\r\n    {\r\n        this.gameObject = <Laya.MeshSprite3D> this.owner;\r\n\r\n\r\n        if(this.player != null)\r\n        {\r\n            return;\r\n        }\r\n        // this.initRender(this.gameObject.meshRenderer);\r\n\r\n        \r\n        let anim = this.anim;\r\n        let mesh = this.mesh;\r\n        let mtrl = this.mtrl;\r\n        let textureRawData = this.textureRawData;\r\n\r\n\r\n        if(anim != null && mesh != null && mtrl != null && textureRawData != null)\r\n        {\r\n            let res: GPUSkinningPlayerResources = GPUSkinningPlayerMono.playerManager.Register(anim, mesh, mtrl, textureRawData, this);\r\n\r\n            let player = new GPUSkinningPlayer(this.gameObject, res);\r\n            player.RootMotionEnabled = this.rootMotionEnabled;\r\n            player.LODEnabled = this.lodEnabled;\r\n            player.CullingMode = this.cullingMode;\r\n            this.player = player;\r\n\r\n\r\n            if (anim != null && anim.clips != null && anim.clips.length > 0)\r\n            {\r\n                var defaultClipName = anim.clips[Mathf.clamp(this.defaultPlayingClipIndex, 0, anim.clips.length)].name;\r\n\r\n                \r\n                for(var clip of anim.clips)\r\n                {\r\n                    if(clip.name == \"idle\")\r\n                    {\r\n                        defaultClipName = clip.name;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                player.Play(defaultClipName);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initRender(renderer:Laya.MeshRenderer)\r\n    {\r\n        var r:any = renderer;\r\n        if(!r._renderUpdate__MeshRenderer__Source)\r\n        {\r\n            r._renderUpdate__MeshRenderer__Source = r._renderUpdate;\r\n        }\r\n\r\n        r._renderUpdate = this._renderUpdate;\r\n        r.onRenderUpdate = this.onRenderUpdate.bind(this);\r\n\r\n    }\r\n\r\n    onRenderUpdate(context: Laya.RenderContext3D, transform: Laya.Transform3D, render:Laya.MeshRenderer)\r\n    {\r\n        if(this.player != null)\r\n        {\r\n            this.player.onRenderUpdate(context, transform, render);\r\n        }\r\n    }\r\n\r\n    _renderUpdate(context: Laya.RenderContext3D, transform: Laya.Transform3D): void \r\n    {\r\n        this.onRenderUpdate(context, transform, <any>this);\r\n        this._renderUpdate__MeshRenderer__Source(context, transform);\r\n        \r\n    }\r\n    \r\n    _renderUpdate__MeshRenderer__Source(context: Laya.RenderContext3D, transform: Laya.Transform3D): void \r\n    {\r\n        \r\n    }\r\n\r\n}","import Shader3D = Laya.Shader3D;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\n\r\n\r\nexport class GPUSkinningBaseMaterial extends Laya.Material\r\n{\r\n    static SHADER_PATH_ROOT = \"res/shaders/GPUSkinning/\";\r\n    \r\n    // 获取--Shader路径--vs\r\n    static getShaderVS(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".vs\";\r\n    }\r\n\r\n    // 获取--Shader路径--ps\r\n    static getShaderPS(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".fs\";\r\n    }\r\n\r\n    \r\n    // 获取--Shader路径--glsl\r\n    static getShaderGLSL(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".glsl\";\r\n    }\r\n\r\n    \r\n    // 加载Shader\r\n    static async loadShaderGlslAsync(filename: string): Promise<string>\r\n    {\r\n        let code = await this.loadAsync(this.getShaderGLSL(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n    \r\n    // 加载Shader\r\n    static async loadShaderVSAsync(filename: string): Promise<string>\r\n    {\r\n        let code = await this.loadAsync(this.getShaderVS(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n\r\n    // 加载Shader\r\n    static async loadShaderPSAsync(filename: string): Promise<string>\r\n    {\r\n        let code =  await this.loadAsync(this.getShaderPS(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n\r\n    \r\n    // 加载资源, 异步\r\n    static async loadAsync(path: string, type: string): Promise<any>\r\n    {\r\n        return new Promise<any>((resolve)=>\r\n        {\r\n            Laya.loader.load(path, \r\n                Laya.Handler.create(null, (res: any) =>\r\n                {\r\n                    resolve(res);\r\n                }), \r\n                null, type);\r\n         });\r\n    }\r\n\r\n    /** Rim颜色（受击） */\r\n    static DOTRIMCOLOR: number = Shader3D.propertyNameToID(\"u_DotRimColor\");\r\n    \r\n    static GPUSKINING_MATRIX_TEXTURE: number = Shader3D.propertyNameToID(\"u_GPUSkinning_TextureMatrix\");\r\n    \r\n\tstatic SHADERDEFINE_GPUSKINING_MATRIX_TEXTURE: ShaderDefine;\r\n    static SHADERDEFINE_IS_SPEARATION: ShaderDefine;\r\n    static SHADERDEFINE_IS_SUPERARMOR: ShaderDefine;\r\n    static SHADERDEFINE_IS_INVINCIBLE: ShaderDefine;\r\n    \r\n\r\n    static __initDefine__(): void {\r\n\t\tthis.SHADERDEFINE_GPUSKINING_MATRIX_TEXTURE = Shader3D.getDefineByName(\"GPUSKINING_MATRIX_TEXTURE\");\r\n\t\tthis.SHADERDEFINE_IS_SPEARATION = Shader3D.getDefineByName(\"IS_SPEARATION\");\r\n\t\tthis.SHADERDEFINE_IS_SUPERARMOR = Shader3D.getDefineByName(\"IS_SUPERARMOR\");\r\n\t\tthis.SHADERDEFINE_IS_INVINCIBLE = Shader3D.getDefineByName(\"IS_INVINCIBLE\");\r\n\t}\r\n    \r\n\t/**\r\n\t * 骨骼动画贴图。\r\n\t */\r\n    get GPUSkinning_TextureMatrix(): BaseTexture \r\n    {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningBaseMaterial.GPUSKINING_MATRIX_TEXTURE);\r\n\t}\r\n\r\n    set GPUSkinning_TextureMatrix(value: BaseTexture) \r\n    {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningBaseMaterial.SHADERDEFINE_GPUSKINING_MATRIX_TEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningBaseMaterial.SHADERDEFINE_GPUSKINING_MATRIX_TEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningBaseMaterial.GPUSKINING_MATRIX_TEXTURE, value);\r\n    }\r\n\r\n\tprivate _IsSeparation: boolean = false;\r\n    /**\r\n     * 是否是分身\r\n     */\r\n    get IsSeparation()\r\n    {\r\n        return this._IsSeparation;\r\n    }\r\n\r\n    /**\r\n     * 是否是分身\r\n     */\r\n    set IsSeparation(value: boolean)\r\n    {\r\n        this._IsSeparation = value;\r\n        \r\n\t\tif (value)\r\n            this._shaderValues.addDefine(GPUSkinningBaseMaterial.SHADERDEFINE_IS_SPEARATION);\r\n        else\r\n            this._shaderValues.removeDefine(GPUSkinningBaseMaterial.SHADERDEFINE_IS_SPEARATION);\r\n    }\r\n\r\n    private _IsInvincible: boolean = false;\r\n    /**\r\n     * 是否是无敌\r\n     */\r\n    \r\n    get IsInvincible()\r\n    {\r\n        return this._IsInvincible;\r\n    }\r\n\r\n    set IsInvincible(value: boolean)\r\n    {\r\n        this._IsInvincible = value;\r\n        \r\n\t\tif (value)\r\n            this._shaderValues.addDefine(GPUSkinningBaseMaterial.SHADERDEFINE_IS_INVINCIBLE);\r\n        else\r\n            this._shaderValues.removeDefine(GPUSkinningBaseMaterial.SHADERDEFINE_IS_INVINCIBLE);\r\n    }\r\n\r\n\r\n\r\n\tprivate _IsSuperarmor: boolean = false;\r\n    /**\r\n     * 是否是霸体\r\n     */\r\n    \r\n    get IsSuperarmor()\r\n    {\r\n        return this._IsSuperarmor;\r\n    }\r\n\r\n    set IsSuperarmor(value: boolean)\r\n    {\r\n        this._IsSuperarmor = value;\r\n        \r\n\t\tif (value)\r\n            this._shaderValues.addDefine(GPUSkinningBaseMaterial.SHADERDEFINE_IS_SUPERARMOR);\r\n        else\r\n            this._shaderValues.removeDefine(GPUSkinningBaseMaterial.SHADERDEFINE_IS_SUPERARMOR);\r\n    }\r\n\r\n    /** DotRim颜色强度 */\r\n    protected _DotRimIntensity = 0.0;\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget DotRimIntensity(): number {\r\n\t\treturn this._DotRimIntensity;\r\n\t}\r\n\r\n\tset DotRimIntensity(value: number) {\r\n\t\tif (this._DotRimIntensity !== value) {\r\n\t\t\t// var color: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningBaseMaterial.DOTRIMCOLOR));\r\n\t\t\t// Vector4.scale(this._DotRimColor, value, color);\r\n            this._DotRimIntensity = value;\r\n            this._DotRimColor.w = value;\r\n            this._shaderValues.setVector(GPUSkinningBaseMaterial.DOTRIMCOLOR, this._DotRimColor);\r\n\t\t}\r\n    }\r\n    \r\n    protected _DotRimColor = new Vector4(1.0, 0.0, 0.0, 0.0);\r\n    \r\n\t/**\r\n\t * DotRim颜色\r\n\t */\r\n\tget DotRimColor(): Vector4 {\r\n\t\treturn this._DotRimColor;\r\n\t}\r\n\r\n\tset DotRimColor(value: Vector4) {\r\n\t\t// var color: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningBaseMaterial.DOTRIMCOLOR));\r\n\t\t// Vector4.scale(value, this._DotRimIntensity, color);\r\n\t\tthis._DotRimColor = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningBaseMaterial.DOTRIMCOLOR, this._DotRimColor);\r\n    }\r\n    \r\n    private _HitTime = 0;\r\n    private _HitTimeMax = 0.1;\r\n    OnHit(t: number = 0.1)\r\n    {\r\n        var preT = this._HitTime;\r\n        this._HitTime = t;\r\n        this._HitTimeMax = Math.max(t, 0.01);\r\n        this.DotRimIntensity = Math.max(0, Math.min(this._HitTime / this._HitTimeMax, 1));\r\n        if(preT <= 0 && t > 0)\r\n        {\r\n            Laya.timer.frameLoop(1, this, this.__OnFrameHit);\r\n        }\r\n    }\r\n\r\n    private __OnFrameHit()\r\n    {\r\n        this._HitTime -= Laya.timer.delta;\r\n        this.DotRimIntensity = Math.max(0, Math.min(this._HitTime / this._HitTimeMax, 1));\r\n        if(this._HitTime <= 0)\r\n        {\r\n            this._HitTime = 0;\r\n            Laya.timer.clear(this, this.__OnFrameHit);\r\n        }\r\n    }\r\n    \r\n    __mname:string;\r\n\r\n\r\n}","export default class LayaUtil\r\n{\r\n    static GetComponentsInChildren<T>(go:Laya.Node, componentType: typeof Laya.Component, outComponents?:T[]): T[]\r\n    {\r\n        if(!outComponents)\r\n        {\r\n            outComponents = [];\r\n        }\r\n\r\n        for(let i = 0, len = go.numChildren; i < len; i ++)\r\n        {\r\n            let child = go.getChildAt(i);\r\n            let component = child.getComponent(componentType);\r\n            if(component)\r\n            {\r\n                outComponents.push(component);\r\n            }\r\n\r\n            this.GetComponentsInChildren(child, componentType, outComponents);\r\n        }\r\n\r\n        return outComponents;\r\n    }\r\n}","import LayaUtil from \"./LayaUtil\";\r\n\r\nexport default class LayaExtends_Node\r\n{\r\n    private static isInited = false;\r\n    static Init()\r\n    {\r\n        if(this.isInited)\r\n            return;\r\n\r\n        this.isInited = true;\r\n        new LayaExtends_Node();\r\n    }\r\n\r\n\r\n    constructor()\r\n    {\r\n        Laya.Node.prototype.getComponentsInChildren = this.getComponentsInChildren;\r\n    }\r\n\r\n    \r\n    getComponentsInChildren<T>(componentType: typeof Laya.Component, outComponents?:T[]): T[]\r\n    {\r\n        if(outComponents)\r\n        {\r\n            outComponents.length = 0;\r\n        }\r\n        else\r\n        {\r\n            outComponents = [];\r\n        }\r\n        LayaUtil.GetComponentsInChildren(<any>this, componentType, outComponents);\r\n        return outComponents;\r\n    }\r\n\r\n\r\n}\r\n","\r\nimport Shader3D = Laya.Shader3D;\r\nimport SubShader = Laya.SubShader;\r\nimport SkinnedMeshSprite3D = Laya.SkinnedMeshSprite3D;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\nimport RenderState = Laya.RenderState;\r\nimport Scene3DShaderDeclaration = Laya.Scene3DShaderDeclaration;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport Material = Laya.Material;\r\nimport { GPUSkinningBaseMaterial } from \"./GPUSkinningBaseMaterial\";\r\nimport GPUSkiningVertexMesh from \"../Mesh/GPUSkiningVertexMesh\";\r\n\r\n\r\n\r\nexport class GPUSkinningCartoon2TextureMaterial extends GPUSkinningBaseMaterial\r\n{\r\n    \r\n    /** Shader名称 */\r\n    public static shaderName = \"GPUSkinningCartoon2Texture\";\r\n    public static outlinePass = \"GPUSkinningCartoon2TextureOutline\";\r\n\r\n\tprivate static _isInstalled: boolean = false;\r\n    public static async install()\r\n    {\r\n\t\tif(this._isInstalled)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isInstalled = true;\r\n        GPUSkinningCartoon2TextureMaterial.__initDefine__();\r\n        await GPUSkinningCartoon2TextureMaterial.initShader();\r\n\r\n        GPUSkinningCartoon2TextureMaterial.defaultMaterial = new GPUSkinningCartoon2TextureMaterial();\r\n        GPUSkinningCartoon2TextureMaterial.defaultMaterial.lock = true;\r\n    }\r\n\r\n    private static async initShader()\r\n    {\r\n\t\t\r\n        var outlineVS: string = await this.loadShaderVSAsync(GPUSkinningCartoon2TextureMaterial.outlinePass);\r\n\t\tvar outlinePS: string = await this.loadShaderPSAsync(GPUSkinningCartoon2TextureMaterial.outlinePass);\r\n\t\t\r\n        var vs: string = await GPUSkinningCartoon2TextureMaterial.loadShaderVSAsync(GPUSkinningCartoon2TextureMaterial.shaderName);\r\n        var ps: string = await GPUSkinningCartoon2TextureMaterial.loadShaderPSAsync(GPUSkinningCartoon2TextureMaterial.shaderName);\r\n        \r\n        \r\n        var attributeMap: object;\r\n        var uniformMap: object;\r\n        var stateMap: object;\r\n        var shader:Shader3D;\r\n        var subShader:SubShader;\r\n\r\n        attributeMap = \r\n        {\r\n\t\t\t'a_Position': VertexMesh.MESH_POSITION0,\r\n\t\t\t'a_Color': VertexMesh.MESH_COLOR0,\r\n\t\t\t'a_Normal': VertexMesh.MESH_NORMAL0,\r\n\t\t\t'a_Texcoord0': VertexMesh.MESH_TEXTURECOORDINATE0,\r\n\t\t\t'a_Texcoord1': VertexMesh.MESH_TEXTURECOORDINATE1,\r\n\t\t\t'a_Texcoord2': GPUSkiningVertexMesh.MESH_TEXTURECOORDINATE2,\r\n\t\t\t'a_MvpMatrix': VertexMesh.MESH_MVPMATRIX_ROW0,\r\n\t\t\t'a_WorldMat': VertexMesh.MESH_WORLDMATRIX_ROW0\r\n\t\t};\r\n\r\n        uniformMap = \r\n        {\r\n\t\t\t'u_GPUSkinning_TextureMatrix': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_TextureSize_NumPixelsPerFrame': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t'u_GPUSkinning_RootMotion': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_RootMotion_CrossFade': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation': Shader3D.PERIOD_SPRITE,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade': Shader3D.PERIOD_SPRITE,\r\n\r\n\t\t\t'u_DotRimColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n            // 卡通材质 -- 阴影颜色\r\n\t\t\t'u_CartoonShadowColor': Shader3D.PERIOD_MATERIAL,\r\n            // 卡通材质 -- 颜色范围\r\n            'u_CartoonColorRange': Shader3D.PERIOD_MATERIAL,\r\n            // 卡通材质 -- 颜色强度\r\n            'u_CartoonColorDeep': Shader3D.PERIOD_MATERIAL,\r\n            // 卡通材质 -- 描边粗细\r\n            'u_CartoonOutlineWidth': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t// 卡通材质 -- 阴影贴图\r\n\t\t\t'u_ShadowTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t// 卡通材质 -- 场景光照贴图\r\n\t\t\t'u_SceneLightingTexture': Shader3D.PERIOD_SCENE,\r\n\t\t\t// 卡通材质 -- 场景光照贴图映射世界坐标大小\r\n\t\t\t'u_SceneLightingSize': Shader3D.PERIOD_SCENE,\r\n\t\t\t\r\n\t\t\t'u_AlbedoTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlbedoColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_TilingOffset': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlphaTestValue': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n            \r\n\t\t\t'u_WorldMat': Shader3D.PERIOD_SPRITE,\r\n            'u_MvpMatrix': Shader3D.PERIOD_SPRITE,\r\n            \r\n\t\t\t'u_FogStart': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogRange': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogColor': Shader3D.PERIOD_SCENE,\r\n\r\n\t\t\t\r\n\t\t\t'u_DirationLightCount': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_LightBuffer': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_LightClusterBuffer': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_AmbientColor': Shader3D.PERIOD_SCENE,\r\n\t\t\t\r\n\t\t\t//legacy lighting\r\n\t\t\t'u_DirectionLight.color': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_DirectionLight.direction': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.position': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.range': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.color': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.position': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.direction': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.range': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.spot': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.color': Shader3D.PERIOD_SCENE,\r\n\r\n\t\t\t'u_CameraPos': Shader3D.PERIOD_CAMERA\r\n\t\t};\r\n\r\n        stateMap = \r\n        {\r\n\t\t\t's_Cull': Shader3D.RENDER_STATE_CULL,\r\n\t\t\t's_Blend': Shader3D.RENDER_STATE_BLEND,\r\n\t\t\t's_BlendSrc': Shader3D.RENDER_STATE_BLEND_SRC,\r\n\t\t\t's_BlendDst': Shader3D.RENDER_STATE_BLEND_DST,\r\n\t\t\t's_DepthTest': Shader3D.RENDER_STATE_DEPTH_TEST,\r\n\t\t\t's_DepthWrite': Shader3D.RENDER_STATE_DEPTH_WRITE\r\n\t\t};\r\n\r\n        \r\n        shader = Shader3D.add(GPUSkinningCartoon2TextureMaterial.shaderName, null, null, true);\r\n        subShader =  new SubShader(attributeMap, uniformMap);\r\n\t\tshader.addSubShader(subShader);\r\n\t\t\r\n\t\t\r\n        var outlinePass = subShader.addShaderPass(outlineVS, outlinePS);\r\n\t\toutlinePass.renderState.cull = Laya.RenderState.CULL_FRONT;\r\n\t\t// outlinePass.renderState.depthWrite = false;\r\n\r\n        \r\n\r\n        var mainPass =  subShader.addShaderPass(vs, ps, stateMap);\r\n        // mainPass.renderState.cull = Laya.RenderState.CULL_BACK;\r\n        \r\n        \r\n    }\r\n\r\n\t\r\n\t/**渲染状态_不透明。*/\r\n\tstatic RENDERMODE_OPAQUE: number = 0;\r\n\t/**渲染状态_阿尔法测试。*/\r\n\tstatic RENDERMODE_CUTOUT: number = 1;\r\n\t/**渲染状态__透明混合。*/\r\n\tstatic RENDERMODE_TRANSPARENT: number = 2;\r\n\t/**渲染状态__加色法混合。*/\r\n\tstatic RENDERMODE_ADDTIVE: number = 3;\r\n\r\n\tstatic SHADERDEFINE_ALBEDOTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_SHADOWTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_SCENELIGHTINGTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_TILINGOFFSET: ShaderDefine;\r\n\tstatic SHADERDEFINE_ENABLEVERTEXCOLOR: ShaderDefine;\r\n\r\n\t\r\n    // 卡通材质 -- 阴影颜色\r\n    static CARTOON_SHADOWCOLOR: number = Shader3D.propertyNameToID(\"u_CartoonShadowColor\");\r\n    // 卡通材质 -- 颜色范围\r\n    static CARTOON_CORLORRANGE: number = Shader3D.propertyNameToID(\"u_CartoonColorRange\");\r\n    // 卡通材质 -- 颜色强度\r\n    static CARTOON_CORLORDEEP: number = Shader3D.propertyNameToID(\"u_CartoonColorDeep\");\r\n\t// 卡通材质 -- 描边粗细\r\n    static CARTOON_OUTLINEWIDTH: number = Shader3D.propertyNameToID(\"u_CartoonOutlineWidth\");\r\n\r\n\tstatic SCENELIGHTINGTEXTURE: number = Shader3D.propertyNameToID(\"u_SceneLightingTexture\");\r\n\tstatic SHADOWTEXTURE: number = Shader3D.propertyNameToID(\"u_ShadowTexture\");\r\n\tstatic ALBEDOTEXTURE: number = Shader3D.propertyNameToID(\"u_AlbedoTexture\");\r\n\tstatic ALBEDOCOLOR: number = Shader3D.propertyNameToID(\"u_AlbedoColor\");\r\n\tstatic TILINGOFFSET: number = Shader3D.propertyNameToID(\"u_TilingOffset\");\r\n\tstatic CULL: number = Shader3D.propertyNameToID(\"s_Cull\");\r\n\tstatic BLEND: number = Shader3D.propertyNameToID(\"s_Blend\");\r\n\tstatic BLEND_SRC: number = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n\tstatic BLEND_DST: number = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n\tstatic DEPTH_TEST: number = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n\tstatic DEPTH_WRITE: number = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n\r\n\t/** 默认材质，禁止修改*/\r\n\tstatic defaultMaterial: GPUSkinningCartoon2TextureMaterial;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __initDefine__(): void {\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ALBEDOTEXTURE = Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SHADOWTEXTURE = Shader3D.getDefineByName(\"SHADOWTEXTURE\");\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SCENELIGHTINGTEXTURE = Shader3D.getDefineByName(\"SCENELIGHTING\");\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_TILINGOFFSET = Shader3D.getDefineByName(\"TILINGOFFSET\");\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\r\n\t}\r\n\r\n\tprivate _albedoColor: Vector4 = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * 反照率颜色。\r\n\t */\r\n\tget albedoColor(): Vector4 {\r\n\t\treturn this._albedoColor;\r\n\t}\r\n\r\n\tset albedoColor(value: Vector4) {\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.ALBEDOCOLOR));\r\n\t\tVector4.scale(value, 1, finalAlbedo);\r\n\t\tthis._albedoColor = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 反照率贴图。\r\n\t */\r\n\tget albedoTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningCartoon2TextureMaterial.ALBEDOTEXTURE);\r\n\t}\r\n\r\n\tset albedoTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningCartoon2TextureMaterial.ALBEDOTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * 阴影贴图\r\n\t */\r\n\tget shadowTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningCartoon2TextureMaterial.SHADOWTEXTURE);\r\n\t}\r\n\r\n\tset shadowTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SHADOWTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SHADOWTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningCartoon2TextureMaterial.SHADOWTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * 场景光照\r\n\t */\r\n\tget sceneLightingTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningCartoon2TextureMaterial.SCENELIGHTINGTEXTURE);\r\n\t}\r\n\r\n\tset sceneLightingTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningCartoon2TextureMaterial.SCENELIGHTINGTEXTURE, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移。\r\n\t */\r\n\tget tilingOffset(): Vector4 {\r\n\t\treturn (<Vector4>this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET));\r\n\t}\r\n\r\n\tset tilingOffset(value: Vector4) {\r\n\t\tif (value) {\r\n\t\t\tif (value.x != 1 || value.y != 1 || value.z != 0 || value.w != 0)\r\n\t\t\t\tthis._shaderValues.addDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t\telse\r\n\t\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t} else {\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t}\r\n\t\tthis._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 渲染模式。\r\n\t */\r\n\tset renderMode(value: number) {\r\n\t\tswitch (value) {\r\n\t\t\tcase GPUSkinningCartoon2TextureMaterial.RENDERMODE_OPAQUE:\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningCartoon2TextureMaterial.RENDERMODE_CUTOUT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n\t\t\t\tthis.alphaTest = true;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningCartoon2TextureMaterial.RENDERMODE_TRANSPARENT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.depthWrite = false;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_ENABLE_ALL;\r\n\t\t\t\tthis.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n\t\t\t\tthis.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"GPUSkinningCartoon2TextureMaterial : renderMode value error.\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 是否写入深度。\r\n\t */\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._shaderValues.getBool(GPUSkinningCartoon2TextureMaterial.DEPTH_WRITE);\r\n\t}\r\n\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._shaderValues.setBool(GPUSkinningCartoon2TextureMaterial.DEPTH_WRITE, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 剔除方式。\r\n\t */\r\n\tget cull(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.CULL);\r\n\t}\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.CULL, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合方式。\r\n\t */\r\n\tget blend(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.BLEND);\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.BLEND, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合源。\r\n\t */\r\n\tget blendSrc(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.BLEND_SRC);\r\n\t}\r\n\r\n\tset blendSrc(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.BLEND_SRC, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 混合目标。\r\n\t */\r\n\tget blendDst(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.BLEND_DST);\r\n\t}\r\n\r\n\tset blendDst(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.BLEND_DST, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 深度测试方式。\r\n\t */\r\n\tget depthTest(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.DEPTH_TEST);\r\n\t}\r\n\r\n\tset depthTest(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.DEPTH_TEST, value);\r\n\t}\r\n\r\n\t\r\n\tprivate _enableLighting: boolean;\r\n\t/**\r\n\t * 是否启用光照。\r\n\t */\r\n\tget enableLighting(): boolean {\r\n\t\treturn this._enableLighting;\r\n\t}\r\n\r\n\tset enableLighting(value: boolean) {\r\n\t\tif (this._enableLighting !== value) {\r\n\t\t\tif (value) \r\n\t\t\t{\r\n\t\t\t\tthis._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tthis._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);\r\n\t\t\t}\r\n\t\t\tthis._enableLighting = value;\r\n\t\t}\r\n\t}\r\n\r\n    // 卡通材质 -- 阴影颜色\r\n\tprivate _cartoonShadowColor: Vector4;\r\n\t\r\n    // 卡通材质 -- 阴影颜色\r\n    get CartoonShadowColor() {\r\n        return this._cartoonShadowColor;\r\n    }\r\n    set CartoonShadowColor(value:Vector4) {\r\n        this._cartoonShadowColor = value;\r\n        this._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.CARTOON_SHADOWCOLOR, value);\r\n\t}\r\n\t\r\n\t\r\n    /** 卡通材质 -- 颜色范围 */\r\n    get CartoonColorRange() {\r\n        return this._shaderValues.getNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_CORLORRANGE);\r\n    }\r\n    set CartoonColorRange(value) {\r\n        value = Math.max(0.0, Math.min(2, value));\r\n        this._shaderValues.setNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_CORLORRANGE, value);\r\n\t}\r\n\t\r\n\t\r\n    /** 卡通材质 -- 颜色强度 */\r\n\tget CartoonColorDeep() \r\n\t{\r\n        return this._shaderValues.getNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_CORLORDEEP);\r\n\t}\r\n\t\r\n\tset CartoonColorDeep(value) \r\n\t{\r\n        value = Math.max(-1.0, Math.min(100.0, value));\r\n        this._shaderValues.setNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_CORLORDEEP, value);\r\n\t}\r\n\t\r\n\t\r\n    /** 卡通材质 -- 描边粗细 */\r\n    get CartoonOutlineWidth() {\r\n        return this._shaderValues.getNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_OUTLINEWIDTH);\r\n    }\r\n    set CartoonOutlineWidth(value) {\r\n        this._shaderValues.setNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_OUTLINEWIDTH, value);\r\n    }\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.setShaderName(GPUSkinningCartoon2TextureMaterial.shaderName);\r\n\t\tthis._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.ALBEDOCOLOR, new Vector4(1.0, 1.0, 1.0, 1.0));\r\n\t\tthis._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET, new Vector4(1.0, 1.0, 0.0, 0.0));\r\n\t\t// 卡通材质 -- 阴影颜色\r\n\t\tthis.CartoonShadowColor = new Vector4(0.1764706, 0.1764706, 0.1764706, 1.0);\r\n\t\t// 卡通材质 -- 颜色范围\r\n\t\tthis.CartoonColorRange = 0.08;\r\n\t\t// 卡通材质 -- 颜色强度\r\n\t\tthis.CartoonColorDeep = 88.4;\r\n\t\t// 卡通材质 -- 描边粗细\r\n\t\tthis.CartoonOutlineWidth = 0.004;\r\n\r\n\r\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, 0.5);\r\n\r\n\t\tthis._enableLighting = true;\r\n\t\tthis.renderMode = GPUSkinningCartoon2TextureMaterial.RENDERMODE_OPAQUE;\r\n\r\n\t\t// this._shaderValues.addDefine(Shader3D.getDefineByName(\"SKIN_4\"));\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: GPUSkinningCartoon2TextureMaterial = new GPUSkinningCartoon2TextureMaterial();\r\n\t\tthis.cloneTo(dest);\r\n        this._albedoColor.cloneTo(dest._albedoColor);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\t\r\n\tcloneTo(destObject: any): void {\r\n\t\tsuper.cloneTo(destObject);\r\n\t\tvar destMaterial: GPUSkinningCartoon2TextureMaterial = (<GPUSkinningCartoon2TextureMaterial>destObject);\r\n\t\tdestMaterial._enableLighting = this._enableLighting;\r\n\t\tthis._albedoColor.cloneTo(destMaterial._albedoColor);\r\n\t\tthis._cartoonShadowColor.cloneTo(destMaterial._cartoonShadowColor);\r\n\t\t\r\n\t}\r\n\r\n}","\r\nimport Shader3D = Laya.Shader3D;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport ShaderData = Laya.ShaderData;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\n\r\n\r\nexport default class SceneMaterial\r\n{\r\n    static scene: Laya.Scene3D;\r\n    static _shaderValues:ShaderData;\r\n    static Init(scene: Laya.Scene3D)\r\n    {\r\n        this.scene = scene;\r\n        this._shaderValues = (<any>scene)._shaderValues;\r\n\t\tthis.SHADERDEFINE_SCENELIGHTINGTEXTURE = Shader3D.getDefineByName(\"SCENELIGHTING\");\r\n        this.sceneLightingSize = new Vector4(-10, 20, -10, 20);\r\n    }\r\n    \r\n\tstatic SCENELIGHTINGTEXTURE: number = Shader3D.propertyNameToID(\"u_SceneLightingTexture\");\r\n\tstatic SCENELIGHTINGSIZE: number = Shader3D.propertyNameToID(\"u_SceneLightingSize\");\r\n\r\n\tstatic SHADERDEFINE_SCENELIGHTINGTEXTURE: ShaderDefine;\r\n    \r\n\t/**\r\n\t * 场景光照贴图\r\n\t */\r\n    static get sceneLightingTexture(): BaseTexture \r\n    {\r\n\t\treturn this._shaderValues.getTexture(this.SCENELIGHTINGTEXTURE);\r\n\t}\r\n\r\n    static set sceneLightingTexture(value: BaseTexture) \r\n    {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(this.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(this.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\tthis._shaderValues.setTexture(this.SCENELIGHTINGTEXTURE, value);\r\n    }\r\n\r\n    static SetSceneLightingTexture(value: BaseTexture)\r\n    {\r\n        this.sceneLightingTexture = value;\r\n    }\r\n\r\n    \r\n    \r\n\t/**\r\n\t * 场景光照贴图映射场景大小 (xMin, xLength, zMin, zLength)\r\n\t */\r\n    static get sceneLightingSize(): Vector4 \r\n    {\r\n\t\treturn this._shaderValues.getVector(this.SCENELIGHTINGSIZE);\r\n\t}\r\n\r\n    static set sceneLightingSize(value: Vector4) \r\n    {\r\n\t\tthis._shaderValues.setVector(this.SCENELIGHTINGSIZE, value);\r\n    }\r\n\r\n    static SetSceneLightingSize(value: Vector4)\r\n    {\r\n        this.sceneLightingSize = value;\r\n    }\r\n\r\n    \r\n    static LoadSceneLightingTexture(path: string)\r\n    {\r\n        Laya.loader.create(path, Laya.Handler.create(this, (texture:Laya.Texture2D)=>\r\n        {\r\n            this.sceneLightingTexture = texture;\r\n        }), null, Laya.Loader.TEXTURE2D);\r\n    }\r\n}\r\n","\r\nimport Shader3D = Laya.Shader3D;\r\nimport SubShader = Laya.SubShader;\r\nimport SkinnedMeshSprite3D = Laya.SkinnedMeshSprite3D;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\nimport RenderState = Laya.RenderState;\r\nimport Scene3DShaderDeclaration = Laya.Scene3DShaderDeclaration;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport Material = Laya.Material;\r\nimport { GPUSkinningBaseMaterial } from \"./GPUSkinningBaseMaterial\";\r\nimport GPUSkiningVertexMesh from \"../Mesh/GPUSkiningVertexMesh\";\r\n\r\n\r\n\r\nexport class GPUSkinningToonV2Material extends GPUSkinningBaseMaterial\r\n{\r\n    \r\n    /** Shader名称 */\r\n    public static shaderName = \"GPUSkinningToonV2\";\r\n    public static outlinePass = \"GPUSkinningToonV2Outline\";\r\n\r\n\tprivate static _isInstalled: boolean = false;\r\n    public static async install()\r\n    {\r\n\t\tif(this._isInstalled)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isInstalled = true;\r\n        GPUSkinningToonV2Material.__initDefine__();\r\n        await GPUSkinningToonV2Material.initShader();\r\n\r\n        GPUSkinningToonV2Material.defaultMaterial = new GPUSkinningToonV2Material();\r\n        GPUSkinningToonV2Material.defaultMaterial.lock = true;\r\n    }\r\n\r\n    private static async initShader()\r\n    {\r\n\t\t\r\n        var outlineVS: string = await this.loadShaderVSAsync(GPUSkinningToonV2Material.outlinePass);\r\n\t\tvar outlinePS: string = await this.loadShaderPSAsync(GPUSkinningToonV2Material.outlinePass);\r\n\t\t\r\n        var vs: string = await GPUSkinningToonV2Material.loadShaderVSAsync(GPUSkinningToonV2Material.shaderName);\r\n        var ps: string = await GPUSkinningToonV2Material.loadShaderPSAsync(GPUSkinningToonV2Material.shaderName);\r\n        \r\n        \r\n        var attributeMap: object;\r\n        var uniformMap: object;\r\n        var stateMap: object;\r\n        var shader:Shader3D;\r\n        var subShader:SubShader;\r\n\r\n        attributeMap = \r\n        {\r\n\t\t\t'a_Position': VertexMesh.MESH_POSITION0,\r\n\t\t\t'a_Color': VertexMesh.MESH_COLOR0,\r\n\t\t\t'a_Normal': VertexMesh.MESH_NORMAL0,\r\n\t\t\t'a_Texcoord0': VertexMesh.MESH_TEXTURECOORDINATE0,\r\n\t\t\t'a_Texcoord1': VertexMesh.MESH_TEXTURECOORDINATE1,\r\n\t\t\t'a_Texcoord2': GPUSkiningVertexMesh.MESH_TEXTURECOORDINATE2,\r\n\t\t\t'a_MvpMatrix': VertexMesh.MESH_MVPMATRIX_ROW0,\r\n\t\t\t'a_WorldMat': VertexMesh.MESH_WORLDMATRIX_ROW0\r\n\t\t};\r\n\r\n        uniformMap = \r\n        {\r\n\t\t\t'u_GPUSkinning_TextureMatrix': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_TextureSize_NumPixelsPerFrame': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t'u_GPUSkinning_RootMotion': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_RootMotion_CrossFade': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation': Shader3D.PERIOD_SPRITE,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade': Shader3D.PERIOD_SPRITE,\r\n\r\n\t\t\t'u_DotRimColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n            // 卡通材质 -- 描边粗细\r\n            'u_CartoonOutlineWidth': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t// 卡通材质 -- 场景光照贴图\r\n\t\t\t'u_SceneLightingTexture': Shader3D.PERIOD_SCENE,\r\n\t\t\t// 卡通材质 -- 场景光照贴图映射世界坐标大小\r\n\t\t\t'u_SceneLightingSize': Shader3D.PERIOD_SCENE,\r\n\t\t\t\r\n\t\t\t// 主贴图\r\n\t\t\t'u_AlbedoTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlbedoColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_TilingOffset': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlphaTestValue': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t\r\n\t\t\t// 卡通材质 -- 阴影贴图\r\n\t\t\t'u_ShadowTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n\t\t\t// 卡通材质 -- 阴影颜色贴图\r\n\t\t\t'u_ShadowColorTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n\t\t\t// 卡通材质 -- 高光和边缘光贴图\r\n\t\t\t'u_HeightRimLightTexture': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t'u_rimColorA0': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_rimColorA1': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_rimColorB': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_rimViewDirA0': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_rimViewDirB': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_outlineColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n            \r\n\t\t\t'u_WorldMat': Shader3D.PERIOD_SPRITE,\r\n            'u_MvpMatrix': Shader3D.PERIOD_SPRITE,\r\n            \r\n\t\t\t'u_FogStart': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogRange': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogColor': Shader3D.PERIOD_SCENE,\r\n\r\n\t\t\t\r\n\t\t\t'u_DirationLightCount': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_LightBuffer': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_LightClusterBuffer': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_AmbientColor': Shader3D.PERIOD_SCENE,\r\n\t\t\t\r\n\t\t\t//legacy lighting\r\n\t\t\t'u_DirectionLight.color': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_DirectionLight.direction': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.position': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.range': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.color': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.position': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.direction': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.range': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.spot': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.color': Shader3D.PERIOD_SCENE,\r\n\r\n\t\t\t'u_CameraPos': Shader3D.PERIOD_CAMERA\r\n\t\t};\r\n\r\n        stateMap = \r\n        {\r\n\t\t\t's_Cull': Shader3D.RENDER_STATE_CULL,\r\n\t\t\t's_Blend': Shader3D.RENDER_STATE_BLEND,\r\n\t\t\t's_BlendSrc': Shader3D.RENDER_STATE_BLEND_SRC,\r\n\t\t\t's_BlendDst': Shader3D.RENDER_STATE_BLEND_DST,\r\n\t\t\t's_DepthTest': Shader3D.RENDER_STATE_DEPTH_TEST,\r\n\t\t\t's_DepthWrite': Shader3D.RENDER_STATE_DEPTH_WRITE\r\n\t\t};\r\n\r\n        \r\n        shader = Shader3D.add(GPUSkinningToonV2Material.shaderName, null, null, true);\r\n        subShader =  new SubShader(attributeMap, uniformMap);\r\n\t\tshader.addSubShader(subShader);\r\n\t\t\r\n\t\t\r\n        var outlinePass = subShader.addShaderPass(outlineVS, outlinePS);\r\n\t\toutlinePass.renderState.cull = Laya.RenderState.CULL_FRONT;\r\n\t\t// outlinePass.renderState.depthWrite = false;\r\n\r\n        \r\n\r\n        var mainPass =  subShader.addShaderPass(vs, ps, stateMap);\r\n        mainPass.renderState.cull = Laya.RenderState.CULL_BACK;\r\n        \r\n        \r\n    }\r\n\r\n\t\r\n\t/**渲染状态_不透明。*/\r\n\tstatic RENDERMODE_OPAQUE: number = 0;\r\n\t/**渲染状态_阿尔法测试。*/\r\n\tstatic RENDERMODE_CUTOUT: number = 1;\r\n\t/**渲染状态__透明混合。*/\r\n\tstatic RENDERMODE_TRANSPARENT: number = 2;\r\n\t/**渲染状态__加色法混合。*/\r\n\tstatic RENDERMODE_ADDTIVE: number = 3;\r\n\r\n\t/** 宏定义--主贴图 */\r\n\tstatic SHADERDEFINE_ALBEDOTEXTURE: ShaderDefine;\r\n\t/** 宏定义--阴影贴图 */\r\n\tstatic SHADERDEFINE_SHADOWTEXTURE: ShaderDefine;\r\n\t/** 宏定义--阴影颜色贴图 */\r\n\tstatic SHADERDEFINE_SHADOWCOLORTEXTURE: ShaderDefine;\r\n\t/** 宏定义--高光和边缘光贴图 */\r\n\tstatic SHADERDEFINE_HEIGHTRIMLIGHTTEXTURE: ShaderDefine;\r\n\t\r\n\t/** 宏定义--场景光照贴图 */\r\n\tstatic SHADERDEFINE_SCENELIGHTINGTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_TILINGOFFSET: ShaderDefine;\r\n\tstatic SHADERDEFINE_ENABLEVERTEXCOLOR: ShaderDefine;\r\n\r\n\t\r\n\t// 卡通材质 -- 描边粗细\r\n    static CARTOON_OUTLINEWIDTH: number = Shader3D.propertyNameToID(\"u_CartoonOutlineWidth\");\r\n\r\n\tstatic SCENELIGHTINGTEXTURE: number = Shader3D.propertyNameToID(\"u_SceneLightingTexture\");\r\n\r\n\t// 高光和边缘光贴图\r\n\tstatic HEIGHTRIMLIGHTTEXTURE: number = Shader3D.propertyNameToID(\"u_HeightRimLightTexture\");\r\n\t// 阴影颜色贴图\r\n\tstatic SHADOWCOLORTEXTURE: number = Shader3D.propertyNameToID(\"u_ShadowColorTexture\");\r\n\t// 阴影贴图\r\n\tstatic SHADOWTEXTURE: number = Shader3D.propertyNameToID(\"u_ShadowTexture\");\r\n\t// 主贴图\r\n\tstatic ALBEDOTEXTURE: number = Shader3D.propertyNameToID(\"u_AlbedoTexture\");\r\n\tstatic ALBEDOCOLOR: number = Shader3D.propertyNameToID(\"u_AlbedoColor\");\r\n\tstatic RIMCOLORA0: number = Shader3D.propertyNameToID(\"u_rimColorA0\");\r\n\tstatic RIMCOLORA1: number = Shader3D.propertyNameToID(\"u_rimColorA1\");\r\n\tstatic RIMCOLORB: number = Shader3D.propertyNameToID(\"u_rimColorB\");\r\n\tstatic RIMVIEWDIRA0: number = Shader3D.propertyNameToID(\"u_rimViewDirA0\");\r\n\tstatic RIMVIEWDIRB: number = Shader3D.propertyNameToID(\"u_rimViewDirB\");\r\n\tstatic OUTLINECOLOR: number = Shader3D.propertyNameToID(\"u_outlineColor\");\r\n\tstatic TILINGOFFSET: number = Shader3D.propertyNameToID(\"u_TilingOffset\");\r\n\tstatic CULL: number = Shader3D.propertyNameToID(\"s_Cull\");\r\n\tstatic BLEND: number = Shader3D.propertyNameToID(\"s_Blend\");\r\n\tstatic BLEND_SRC: number = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n\tstatic BLEND_DST: number = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n\tstatic DEPTH_TEST: number = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n\tstatic DEPTH_WRITE: number = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n\r\n\t/** 默认材质，禁止修改*/\r\n\tstatic defaultMaterial: GPUSkinningToonV2Material;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __initDefine__(): void {\r\n\t\tGPUSkinningToonV2Material.SHADERDEFINE_ALBEDOTEXTURE = Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\r\n\t\tGPUSkinningToonV2Material.SHADERDEFINE_SHADOWTEXTURE = Shader3D.getDefineByName(\"SHADOWTEXTURE\");\r\n\t\tGPUSkinningToonV2Material.SHADERDEFINE_SHADOWCOLORTEXTURE = Shader3D.getDefineByName(\"SHADOWCOLORTEXTURE\");\r\n\t\tGPUSkinningToonV2Material.SHADERDEFINE_HEIGHTRIMLIGHTTEXTURE = Shader3D.getDefineByName(\"HEIGHTRIMLIGHTTEXTURE\");\r\n\t\tGPUSkinningToonV2Material.SHADERDEFINE_SCENELIGHTINGTEXTURE = Shader3D.getDefineByName(\"SCENELIGHTING\");\r\n\t\tGPUSkinningToonV2Material.SHADERDEFINE_TILINGOFFSET = Shader3D.getDefineByName(\"TILINGOFFSET\");\r\n\t\tGPUSkinningToonV2Material.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\r\n\t}\r\n\r\n\t\r\n\tprivate _rimColorA0: Vector4 = new Vector4(1.0, 0.02116402, 0.0);\r\n\tget rimColorA0(): Vector4 {\r\n\t\treturn this._rimColorA0;\r\n\t}\r\n\tset rimColorA0(value: Vector4) {\r\n\t\t\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningToonV2Material.RIMCOLORA0));\r\n\t\tVector4.scale(value, 1, finalAlbedo);\r\n\r\n\t\tthis._rimColorA0 = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.RIMCOLORA0, finalAlbedo);\r\n\t}\r\n\t\r\n\tset _RimA_Color(value: Vector4) {\r\n\t\tthis.rimColorA0 = value;\r\n\t}\r\n\r\n\t\r\n\tprivate _rimColorA1: Vector4 = new Vector4(1.0, 0.9290133, 0.759434);\r\n\tget rimColorA1(): Vector4 {\r\n\t\treturn this._rimColorA1;\r\n\t}\r\n\tset rimColorA1(value: Vector4) {\r\n\t\tthis._rimColorA1 = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.RIMCOLORA1, value);\r\n\t}\r\n\r\n\tset _RimB_Color(value: Vector4) {\r\n\t\tthis.rimColorA1 = value;\r\n\t}\r\n\r\n\t\r\n\tprivate _rimColorB: Vector4 = new Vector4(1.0, 0.501811, 0.0);\r\n\tget rimColorB(): Vector4 {\r\n\t\treturn this._rimColorB;\r\n\t}\r\n\tset rimColorB(value: Vector4) {\r\n\t\tthis._rimColorB = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.RIMCOLORB, value);\r\n\t}\r\n\r\n\t\r\n\tset _RimC_Color(value: Vector4) {\r\n\t\tthis.rimColorB = value;\r\n\t}\r\n\r\n\t\r\n\tset _RimC_Range(value: number) {\r\n\t\tthis._rimColorB.w = value;\r\n\t\tthis.rimColorB = this._rimColorB;\r\n\t}\r\n\r\n\t\r\n\tprivate __outlineColor: Vector4 = new Vector4(0.0, 0, 0.0);\r\n\tget outlineColor(): Vector4 {\r\n\t\treturn this.__outlineColor;\r\n\t}\r\n\tset outlineColor(value: Vector4) {\r\n\t\tthis.__outlineColor = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.OUTLINECOLOR, value);\r\n\t}\r\n\r\n\t\r\n\tset _OutlineColor(value: Vector4) {\r\n\t\tthis.outlineColor = value;\r\n\t}\r\n\r\n\t\r\n\tprivate _rimViewDirA0: Vector4 = new Vector4(25, -5, 10, 0.55);\r\n\tget rimViewDirA0(): Vector4 {\r\n\t\treturn this._rimViewDirA0;\r\n\t}\r\n\tset rimViewDirA0(value: Vector4) {\r\n\t\tthis._rimViewDirA0 = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.RIMVIEWDIRA0, value);\r\n\t}\r\n\r\n\t\r\n\tset _RimAB_Direction(value: Vector4) {\r\n\t\tthis.rimViewDirA0 = value;\r\n\t}\r\n\r\n\tset _RimA_Rate(value: number)\r\n\t{\r\n\t\tthis._rimViewDirA0.w = value;\r\n\t\tthis.rimViewDirA0 = this._rimViewDirA0;\r\n\t}\r\n\r\n\t\r\n\t\r\n\t\r\n\tprivate _rimViewDirB: Vector4 = new Vector4(-30, -5, 20, 0.6);\r\n\tget rimViewDirB(): Vector4 {\r\n\t\treturn this._rimViewDirB;\r\n\t}\r\n\tset rimViewDirB(value: Vector4) {\r\n\t\tthis._rimViewDirB = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.RIMVIEWDIRB, value);\r\n\t}\r\n\r\n\t\r\n\tset _RimC_Direction(value: Vector4) {\r\n\t\tthis.rimViewDirB = value;\r\n\t}\r\n\t\r\n\t\r\n\tset _RimB_Rate(value: number)\r\n\t{\r\n\t\tthis._rimViewDirB.w = value;\r\n\t\tthis.rimViewDirB = this._rimViewDirB;\r\n\t}\r\n\r\n\r\n\r\n\tprivate _albedoColor: Vector4 = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\t\r\n\r\n\r\n\t/**\r\n\t * 反照率颜色。\r\n\t */\r\n\tget albedoColor(): Vector4 {\r\n\t\treturn this._albedoColor;\r\n\t}\r\n\r\n\tset albedoColor(value: Vector4) {\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningToonV2Material.ALBEDOCOLOR));\r\n\t\tVector4.scale(value, 1, finalAlbedo);\r\n\t\tthis._albedoColor = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.ALBEDOCOLOR, finalAlbedo);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 反照率贴图。\r\n\t */\r\n\tget albedoTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonV2Material.ALBEDOTEXTURE);\r\n\t}\r\n\r\n\tset albedoTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonV2Material.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonV2Material.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonV2Material.ALBEDOTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\tset _MainTex(value: BaseTexture) {\r\n\t\tthis.albedoTexture = value;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * 阴影贴图\r\n\t */\r\n\tget shadowTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonV2Material.SHADOWTEXTURE);\r\n\t}\r\n\r\n\tset shadowTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonV2Material.SHADERDEFINE_SHADOWTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonV2Material.SHADERDEFINE_SHADOWTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonV2Material.SHADOWTEXTURE, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 阴影颜色贴图\r\n\t */\r\n\tget shadowColorTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonV2Material.SHADOWCOLORTEXTURE);\r\n\t}\r\n\r\n\tset shadowColorTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonV2Material.SHADERDEFINE_SHADOWCOLORTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonV2Material.SHADERDEFINE_SHADOWCOLORTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonV2Material.SHADOWCOLORTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * 高光和边缘光贴图\r\n\t */\r\n\tget heightRimLightTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonV2Material.HEIGHTRIMLIGHTTEXTURE);\r\n\t}\r\n\r\n\tset heightRimLightTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonV2Material.SHADERDEFINE_HEIGHTRIMLIGHTTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonV2Material.SHADERDEFINE_HEIGHTRIMLIGHTTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonV2Material.HEIGHTRIMLIGHTTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\tset _MaskTex(value: BaseTexture) {\r\n\t\tthis.heightRimLightTexture = value;\r\n\t}\r\n\t\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n\t * 场景光照\r\n\t */\r\n\tget sceneLightingTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonV2Material.SCENELIGHTINGTEXTURE);\r\n\t}\r\n\r\n\tset sceneLightingTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonV2Material.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonV2Material.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonV2Material.SCENELIGHTINGTEXTURE, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 渲染模式。\r\n\t */\r\n\tset renderMode(value: number) {\r\n\t\tswitch (value) {\r\n\t\t\tcase GPUSkinningToonV2Material.RENDERMODE_OPAQUE:\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningToonV2Material.RENDERMODE_CUTOUT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n\t\t\t\tthis.alphaTest = true;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningToonV2Material.RENDERMODE_TRANSPARENT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.depthWrite = false;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_ENABLE_ALL;\r\n\t\t\t\tthis.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n\t\t\t\tthis.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"GPUSkinningToonV2Material : renderMode value error.\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 是否写入深度。\r\n\t */\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._shaderValues.getBool(GPUSkinningToonV2Material.DEPTH_WRITE);\r\n\t}\r\n\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._shaderValues.setBool(GPUSkinningToonV2Material.DEPTH_WRITE, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 剔除方式。\r\n\t */\r\n\tget cull(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonV2Material.CULL);\r\n\t}\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonV2Material.CULL, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合方式。\r\n\t */\r\n\tget blend(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonV2Material.BLEND);\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonV2Material.BLEND, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合源。\r\n\t */\r\n\tget blendSrc(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonV2Material.BLEND_SRC);\r\n\t}\r\n\r\n\tset blendSrc(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonV2Material.BLEND_SRC, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 混合目标。\r\n\t */\r\n\tget blendDst(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonV2Material.BLEND_DST);\r\n\t}\r\n\r\n\tset blendDst(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonV2Material.BLEND_DST, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 深度测试方式。\r\n\t */\r\n\tget depthTest(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonV2Material.DEPTH_TEST);\r\n\t}\r\n\r\n\tset depthTest(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonV2Material.DEPTH_TEST, value);\r\n\t}\r\n\r\n\t\r\n\r\n\t\r\n    /** 卡通材质 -- 描边粗细 */\r\n    get CartoonOutlineWidth() {\r\n        return this._shaderValues.getNumber(GPUSkinningToonV2Material.CARTOON_OUTLINEWIDTH);\r\n    }\r\n    set CartoonOutlineWidth(value) {\r\n        this._shaderValues.setNumber(GPUSkinningToonV2Material.CARTOON_OUTLINEWIDTH, value);\r\n\t}\r\n\t\r\n\t\r\n    set _OutlineWidth(value) {\r\n\t\tthis.CartoonOutlineWidth = value;\r\n\t}\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.setShaderName(GPUSkinningToonV2Material.shaderName);\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.ALBEDOCOLOR, new Vector4(1.0, 1.0, 1.0, 1.0));\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.TILINGOFFSET, new Vector4(1.0, 1.0, 0.0, 0.0));\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.RIMCOLORA0, this._rimColorA0);\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.RIMCOLORA1, this._rimColorA1);\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonV2Material.RIMCOLORB, this._rimColorB);\r\n\t\t\r\n\t\t// this._shaderValues.setVector(GPUSkinningToonV2Material.DOTRIMCOLOR, new Vector4(1.0, 0.0, 0.0, 1.0));\r\n\t\t// 卡通材质 -- 描边粗细\r\n\t\tthis.CartoonOutlineWidth = 0.004;\r\n\r\n\r\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, 0.5);\r\n\r\n\t\tthis.renderMode = GPUSkinningToonV2Material.RENDERMODE_OPAQUE;\r\n\r\n\t\t// this._shaderValues.addDefine(Shader3D.getDefineByName(\"SKIN_4\"));\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: GPUSkinningToonV2Material = new GPUSkinningToonV2Material();\r\n\t\tthis.cloneTo(dest);\r\n\t\tthis._albedoColor.cloneTo(dest._albedoColor);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\t\r\n\tcloneTo(destObject: any): void {\r\n\t\tsuper.cloneTo(destObject);\r\n\t\tvar destMaterial: GPUSkinningToonV2Material = (<GPUSkinningToonV2Material>destObject);\r\n\t\tthis._albedoColor.cloneTo(destMaterial._albedoColor);\r\n\t\t\r\n\t\t// this._rimColorA0.cloneTo(destMaterial._rimColorA0);\r\n\t\t// this._rimColorA1.cloneTo(destMaterial._rimColorA1);\r\n\t\t// this._rimColorB.cloneTo(destMaterial._rimColorB);\r\n\r\n\t\t// destMaterial.rimColorA0 = destMaterial._rimColorA0;\r\n\t\t// destMaterial.rimColorA1 = destMaterial._rimColorA1;\r\n\t\t// destMaterial.rimColorB = destMaterial._rimColorB;\r\n\t\t\r\n\t}\r\n\r\n}","\r\nimport Shader3D = Laya.Shader3D;\r\nimport SubShader = Laya.SubShader;\r\nimport SkinnedMeshSprite3D = Laya.SkinnedMeshSprite3D;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\nimport RenderState = Laya.RenderState;\r\nimport Scene3DShaderDeclaration = Laya.Scene3DShaderDeclaration;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport Material = Laya.Material;\r\nimport { GPUSkinningBaseMaterial } from \"./GPUSkinningBaseMaterial\";\r\nimport GPUSkiningVertexMesh from \"../Mesh/GPUSkiningVertexMesh\";\r\n\r\n\r\n\r\nexport class GPUSkinningToonWeaponV2Material extends GPUSkinningBaseMaterial\r\n{\r\n    \r\n    /** Shader名称 */\r\n    public static shaderName = \"GPUSkinningToonWeaponV2\";\r\n    public static outlinePass = \"GPUSkinningToonV2Outline\";\r\n\r\n\tprivate static _isInstalled: boolean = false;\r\n    public static async install()\r\n    {\r\n\t\tif(this._isInstalled)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isInstalled = true;\r\n        GPUSkinningToonWeaponV2Material.__initDefine__();\r\n        await GPUSkinningToonWeaponV2Material.initShader();\r\n\r\n        GPUSkinningToonWeaponV2Material.defaultMaterial = new GPUSkinningToonWeaponV2Material();\r\n        GPUSkinningToonWeaponV2Material.defaultMaterial.lock = true;\r\n    }\r\n\r\n    private static async initShader()\r\n    {\r\n\t\t\r\n        // var outlineVS: string = await this.loadShaderVSAsync(GPUSkinningToonWeaponV2Material.outlinePass);\r\n\t\t// var outlinePS: string = await this.loadShaderPSAsync(GPUSkinningToonWeaponV2Material.outlinePass);\r\n\t\t\r\n        var vs: string = await GPUSkinningToonWeaponV2Material.loadShaderVSAsync(\"GPUSkinningToonV2\");\r\n        var ps: string = await GPUSkinningToonWeaponV2Material.loadShaderPSAsync(\"GPUSkinningToonV2\");\r\n        \r\n        \r\n        var attributeMap: object;\r\n        var uniformMap: object;\r\n        var stateMap: object;\r\n        var shader:Shader3D;\r\n        var subShader:SubShader;\r\n\r\n        attributeMap = \r\n        {\r\n\t\t\t'a_Position': VertexMesh.MESH_POSITION0,\r\n\t\t\t'a_Color': VertexMesh.MESH_COLOR0,\r\n\t\t\t'a_Normal': VertexMesh.MESH_NORMAL0,\r\n\t\t\t'a_Texcoord0': VertexMesh.MESH_TEXTURECOORDINATE0,\r\n\t\t\t'a_Texcoord1': VertexMesh.MESH_TEXTURECOORDINATE1,\r\n\t\t\t'a_Texcoord2': GPUSkiningVertexMesh.MESH_TEXTURECOORDINATE2,\r\n\t\t\t'a_MvpMatrix': VertexMesh.MESH_MVPMATRIX_ROW0,\r\n\t\t\t'a_WorldMat': VertexMesh.MESH_WORLDMATRIX_ROW0\r\n\t\t};\r\n\r\n        uniformMap = \r\n        {\r\n\t\t\t'u_GPUSkinning_TextureMatrix': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_TextureSize_NumPixelsPerFrame': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t'u_GPUSkinning_RootMotion': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_RootMotion_CrossFade': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation': Shader3D.PERIOD_SPRITE,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade': Shader3D.PERIOD_SPRITE,\r\n\r\n\t\t\t'u_DotRimColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n            // 卡通材质 -- 描边粗细\r\n            'u_CartoonOutlineWidth': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t// 卡通材质 -- 场景光照贴图\r\n\t\t\t'u_SceneLightingTexture': Shader3D.PERIOD_SCENE,\r\n\t\t\t// 卡通材质 -- 场景光照贴图映射世界坐标大小\r\n\t\t\t'u_SceneLightingSize': Shader3D.PERIOD_SCENE,\r\n\t\t\t\r\n\t\t\t// 主贴图\r\n\t\t\t'u_AlbedoTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlbedoColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_TilingOffset': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlphaTestValue': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t\r\n\t\t\t// 卡通材质 -- 阴影贴图\r\n\t\t\t'u_ShadowTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n\t\t\t// 卡通材质 -- 阴影颜色贴图\r\n\t\t\t'u_ShadowColorTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n\t\t\t// 卡通材质 -- 高光和边缘光贴图\r\n\t\t\t'u_HeightRimLightTexture': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t'u_rimColorA0': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_rimColorA1': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_rimColorB': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_rimViewDirA0': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_rimViewDirB': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_outlineColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n            \r\n\t\t\t'u_WorldMat': Shader3D.PERIOD_SPRITE,\r\n            'u_MvpMatrix': Shader3D.PERIOD_SPRITE,\r\n            \r\n\t\t\t'u_FogStart': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogRange': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogColor': Shader3D.PERIOD_SCENE,\r\n\r\n\t\t\t\r\n\t\t\t'u_DirationLightCount': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_LightBuffer': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_LightClusterBuffer': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_AmbientColor': Shader3D.PERIOD_SCENE,\r\n\t\t\t\r\n\t\t\t//legacy lighting\r\n\t\t\t'u_DirectionLight.color': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_DirectionLight.direction': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.position': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.range': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.color': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.position': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.direction': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.range': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.spot': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.color': Shader3D.PERIOD_SCENE,\r\n\r\n\t\t\t'u_CameraPos': Shader3D.PERIOD_CAMERA\r\n\t\t};\r\n\r\n        stateMap = \r\n        {\r\n\t\t\t's_Cull': Shader3D.RENDER_STATE_CULL,\r\n\t\t\t's_Blend': Shader3D.RENDER_STATE_BLEND,\r\n\t\t\t's_BlendSrc': Shader3D.RENDER_STATE_BLEND_SRC,\r\n\t\t\t's_BlendDst': Shader3D.RENDER_STATE_BLEND_DST,\r\n\t\t\t's_DepthTest': Shader3D.RENDER_STATE_DEPTH_TEST,\r\n\t\t\t's_DepthWrite': Shader3D.RENDER_STATE_DEPTH_WRITE\r\n\t\t};\r\n\r\n        \r\n        shader = Shader3D.add(GPUSkinningToonWeaponV2Material.shaderName, null, null, true);\r\n        subShader =  new SubShader(attributeMap, uniformMap);\r\n\t\tshader.addSubShader(subShader);\r\n\t\t\r\n\t\t\r\n        // var outlinePass = subShader.addShaderPass(outlineVS, outlinePS);\r\n\t\t// outlinePass.renderState.cull = Laya.RenderState.CULL_FRONT;\r\n\t\t// // outlinePass.renderState.depthWrite = false;\r\n\r\n        \r\n\r\n        var mainPass =  subShader.addShaderPass(vs, ps, stateMap);\r\n        mainPass.renderState.cull = Laya.RenderState.CULL_BACK;\r\n        \r\n        \r\n    }\r\n\r\n\t\r\n\t/**渲染状态_不透明。*/\r\n\tstatic RENDERMODE_OPAQUE: number = 0;\r\n\t/**渲染状态_阿尔法测试。*/\r\n\tstatic RENDERMODE_CUTOUT: number = 1;\r\n\t/**渲染状态__透明混合。*/\r\n\tstatic RENDERMODE_TRANSPARENT: number = 2;\r\n\t/**渲染状态__加色法混合。*/\r\n\tstatic RENDERMODE_ADDTIVE: number = 3;\r\n\r\n\t/** 宏定义--主贴图 */\r\n\tstatic SHADERDEFINE_ALBEDOTEXTURE: ShaderDefine;\r\n\t/** 宏定义--阴影贴图 */\r\n\tstatic SHADERDEFINE_SHADOWTEXTURE: ShaderDefine;\r\n\t/** 宏定义--阴影颜色贴图 */\r\n\tstatic SHADERDEFINE_SHADOWCOLORTEXTURE: ShaderDefine;\r\n\t/** 宏定义--高光和边缘光贴图 */\r\n\tstatic SHADERDEFINE_HEIGHTRIMLIGHTTEXTURE: ShaderDefine;\r\n\t\r\n\t/** 宏定义--场景光照贴图 */\r\n\tstatic SHADERDEFINE_SCENELIGHTINGTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_TILINGOFFSET: ShaderDefine;\r\n\tstatic SHADERDEFINE_ENABLEVERTEXCOLOR: ShaderDefine;\r\n\r\n\t\r\n\t// 卡通材质 -- 描边粗细\r\n    static CARTOON_OUTLINEWIDTH: number = Shader3D.propertyNameToID(\"u_CartoonOutlineWidth\");\r\n\r\n\tstatic SCENELIGHTINGTEXTURE: number = Shader3D.propertyNameToID(\"u_SceneLightingTexture\");\r\n\r\n\t// 高光和边缘光贴图\r\n\tstatic HEIGHTRIMLIGHTTEXTURE: number = Shader3D.propertyNameToID(\"u_HeightRimLightTexture\");\r\n\t// 阴影颜色贴图\r\n\tstatic SHADOWCOLORTEXTURE: number = Shader3D.propertyNameToID(\"u_ShadowColorTexture\");\r\n\t// 阴影贴图\r\n\tstatic SHADOWTEXTURE: number = Shader3D.propertyNameToID(\"u_ShadowTexture\");\r\n\t// 主贴图\r\n\tstatic ALBEDOTEXTURE: number = Shader3D.propertyNameToID(\"u_AlbedoTexture\");\r\n\tstatic ALBEDOCOLOR: number = Shader3D.propertyNameToID(\"u_AlbedoColor\");\r\n\tstatic RIMCOLORA0: number = Shader3D.propertyNameToID(\"u_rimColorA0\");\r\n\tstatic RIMCOLORA1: number = Shader3D.propertyNameToID(\"u_rimColorA1\");\r\n\tstatic RIMCOLORB: number = Shader3D.propertyNameToID(\"u_rimColorB\");\r\n\tstatic RIMVIEWDIRA0: number = Shader3D.propertyNameToID(\"u_rimViewDirA0\");\r\n\tstatic RIMVIEWDIRB: number = Shader3D.propertyNameToID(\"u_rimViewDirB\");\r\n\tstatic OUTLINECOLOR: number = Shader3D.propertyNameToID(\"u_outlineColor\");\r\n\tstatic TILINGOFFSET: number = Shader3D.propertyNameToID(\"u_TilingOffset\");\r\n\tstatic CULL: number = Shader3D.propertyNameToID(\"s_Cull\");\r\n\tstatic BLEND: number = Shader3D.propertyNameToID(\"s_Blend\");\r\n\tstatic BLEND_SRC: number = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n\tstatic BLEND_DST: number = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n\tstatic DEPTH_TEST: number = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n\tstatic DEPTH_WRITE: number = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n\r\n\t/** 默认材质，禁止修改*/\r\n\tstatic defaultMaterial: GPUSkinningToonWeaponV2Material;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __initDefine__(): void {\r\n\t\tGPUSkinningToonWeaponV2Material.SHADERDEFINE_ALBEDOTEXTURE = Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\r\n\t\tGPUSkinningToonWeaponV2Material.SHADERDEFINE_SHADOWTEXTURE = Shader3D.getDefineByName(\"SHADOWTEXTURE\");\r\n\t\tGPUSkinningToonWeaponV2Material.SHADERDEFINE_SHADOWCOLORTEXTURE = Shader3D.getDefineByName(\"SHADOWCOLORTEXTURE\");\r\n\t\tGPUSkinningToonWeaponV2Material.SHADERDEFINE_HEIGHTRIMLIGHTTEXTURE = Shader3D.getDefineByName(\"HEIGHTRIMLIGHTTEXTURE\");\r\n\t\tGPUSkinningToonWeaponV2Material.SHADERDEFINE_SCENELIGHTINGTEXTURE = Shader3D.getDefineByName(\"SCENELIGHTING\");\r\n\t\tGPUSkinningToonWeaponV2Material.SHADERDEFINE_TILINGOFFSET = Shader3D.getDefineByName(\"TILINGOFFSET\");\r\n\t\tGPUSkinningToonWeaponV2Material.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\r\n\t}\r\n\r\n\t\r\n\tprivate _rimColorA0: Vector4 = new Vector4(1.0, 0.02116402, 0.0);\r\n\tget rimColorA0(): Vector4 {\r\n\t\treturn this._rimColorA0;\r\n\t}\r\n\tset rimColorA0(value: Vector4) {\r\n\t\t\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningToonWeaponV2Material.RIMCOLORA0));\r\n\t\tVector4.scale(value, 1, finalAlbedo);\r\n\r\n\t\tthis._rimColorA0 = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.RIMCOLORA0, finalAlbedo);\r\n\t}\r\n\t\r\n\tset _RimA_Color(value: Vector4) {\r\n\t\tthis.rimColorA0 = value;\r\n\t}\r\n\r\n\t\r\n\tprivate _rimColorA1: Vector4 = new Vector4(1.0, 0.9290133, 0.759434);\r\n\tget rimColorA1(): Vector4 {\r\n\t\treturn this._rimColorA1;\r\n\t}\r\n\tset rimColorA1(value: Vector4) {\r\n\t\tthis._rimColorA1 = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.RIMCOLORA1, value);\r\n\t}\r\n\r\n\tset _RimB_Color(value: Vector4) {\r\n\t\tthis.rimColorA1 = value;\r\n\t}\r\n\r\n\t\r\n\tprivate _rimColorB: Vector4 = new Vector4(1.0, 0.501811, 0.0);\r\n\tget rimColorB(): Vector4 {\r\n\t\treturn this._rimColorB;\r\n\t}\r\n\tset rimColorB(value: Vector4) {\r\n\t\tthis._rimColorB = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.RIMCOLORB, value);\r\n\t}\r\n\r\n\t\r\n\tset _RimC_Color(value: Vector4) {\r\n\t\tthis.rimColorB = value;\r\n\t}\r\n\r\n\t\r\n\tset _RimC_Range(value: number) {\r\n\t\tthis._rimColorB.w = value;\r\n\t\tthis.rimColorB = this._rimColorB;\r\n\t}\r\n\r\n\t\r\n\tprivate __outlineColor: Vector4 = new Vector4(0.0, 0, 0.0);\r\n\tget outlineColor(): Vector4 {\r\n\t\treturn this.__outlineColor;\r\n\t}\r\n\tset outlineColor(value: Vector4) {\r\n\t\tthis.__outlineColor = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.OUTLINECOLOR, value);\r\n\t}\r\n\r\n\t\r\n\tset _OutlineColor(value: Vector4) {\r\n\t\tthis.outlineColor = value;\r\n\t}\r\n\r\n\t\r\n\tprivate _rimViewDirA0: Vector4 = new Vector4(25, -5, 10, 0.55);\r\n\tget rimViewDirA0(): Vector4 {\r\n\t\treturn this._rimViewDirA0;\r\n\t}\r\n\tset rimViewDirA0(value: Vector4) {\r\n\t\tthis._rimViewDirA0 = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.RIMVIEWDIRA0, value);\r\n\t}\r\n\r\n\t\r\n\tset _RimAB_Direction(value: Vector4) {\r\n\t\tthis.rimViewDirA0 = value;\r\n\t}\r\n\r\n\tset _RimA_Rate(value: number)\r\n\t{\r\n\t\tthis._rimViewDirA0.w = value;\r\n\t\tthis.rimViewDirA0 = this._rimViewDirA0;\r\n\t}\r\n\r\n\t\r\n\t\r\n\t\r\n\tprivate _rimViewDirB: Vector4 = new Vector4(-30, -5, 20, 0.6);\r\n\tget rimViewDirB(): Vector4 {\r\n\t\treturn this._rimViewDirB;\r\n\t}\r\n\tset rimViewDirB(value: Vector4) {\r\n\t\tthis._rimViewDirB = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.RIMVIEWDIRB, value);\r\n\t}\r\n\r\n\t\r\n\tset _RimC_Direction(value: Vector4) {\r\n\t\tthis.rimViewDirB = value;\r\n\t}\r\n\t\r\n\t\r\n\tset _RimB_Rate(value: number)\r\n\t{\r\n\t\tthis._rimViewDirB.w = value;\r\n\t\tthis.rimViewDirB = this._rimViewDirB;\r\n\t}\r\n\r\n\r\n\r\n\tprivate _albedoColor: Vector4 = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\t\r\n\r\n\r\n\t/**\r\n\t * 反照率颜色。\r\n\t */\r\n\tget albedoColor(): Vector4 {\r\n\t\treturn this._albedoColor;\r\n\t}\r\n\r\n\tset albedoColor(value: Vector4) {\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningToonWeaponV2Material.ALBEDOCOLOR));\r\n\t\tVector4.scale(value, 1, finalAlbedo);\r\n\t\tthis._albedoColor = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.ALBEDOCOLOR, finalAlbedo);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 反照率贴图。\r\n\t */\r\n\tget albedoTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonWeaponV2Material.ALBEDOTEXTURE);\r\n\t}\r\n\r\n\tset albedoTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonWeaponV2Material.ALBEDOTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\tset _MainTex(value: BaseTexture) {\r\n\t\tthis.albedoTexture = value;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * 阴影贴图\r\n\t */\r\n\tget shadowTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonWeaponV2Material.SHADOWTEXTURE);\r\n\t}\r\n\r\n\tset shadowTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_SHADOWTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_SHADOWTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonWeaponV2Material.SHADOWTEXTURE, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 阴影颜色贴图\r\n\t */\r\n\tget shadowColorTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonWeaponV2Material.SHADOWCOLORTEXTURE);\r\n\t}\r\n\r\n\tset shadowColorTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_SHADOWCOLORTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_SHADOWCOLORTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonWeaponV2Material.SHADOWCOLORTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * 高光和边缘光贴图\r\n\t */\r\n\tget heightRimLightTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonWeaponV2Material.HEIGHTRIMLIGHTTEXTURE);\r\n\t}\r\n\r\n\tset heightRimLightTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_HEIGHTRIMLIGHTTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_HEIGHTRIMLIGHTTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonWeaponV2Material.HEIGHTRIMLIGHTTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\tset _MaskTex(value: BaseTexture) {\r\n\t\tthis.heightRimLightTexture = value;\r\n\t}\r\n\t\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n\t * 场景光照\r\n\t */\r\n\tget sceneLightingTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningToonWeaponV2Material.SCENELIGHTINGTEXTURE);\r\n\t}\r\n\r\n\tset sceneLightingTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningToonWeaponV2Material.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningToonWeaponV2Material.SCENELIGHTINGTEXTURE, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 渲染模式。\r\n\t */\r\n\tset renderMode(value: number) {\r\n\t\tswitch (value) {\r\n\t\t\tcase GPUSkinningToonWeaponV2Material.RENDERMODE_OPAQUE:\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningToonWeaponV2Material.RENDERMODE_CUTOUT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n\t\t\t\tthis.alphaTest = true;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningToonWeaponV2Material.RENDERMODE_TRANSPARENT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.depthWrite = false;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_ENABLE_ALL;\r\n\t\t\t\tthis.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n\t\t\t\tthis.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"GPUSkinningToonWeaponV2Material : renderMode value error.\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 是否写入深度。\r\n\t */\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._shaderValues.getBool(GPUSkinningToonWeaponV2Material.DEPTH_WRITE);\r\n\t}\r\n\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._shaderValues.setBool(GPUSkinningToonWeaponV2Material.DEPTH_WRITE, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 剔除方式。\r\n\t */\r\n\tget cull(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonWeaponV2Material.CULL);\r\n\t}\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonWeaponV2Material.CULL, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合方式。\r\n\t */\r\n\tget blend(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonWeaponV2Material.BLEND);\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonWeaponV2Material.BLEND, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合源。\r\n\t */\r\n\tget blendSrc(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonWeaponV2Material.BLEND_SRC);\r\n\t}\r\n\r\n\tset blendSrc(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonWeaponV2Material.BLEND_SRC, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 混合目标。\r\n\t */\r\n\tget blendDst(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonWeaponV2Material.BLEND_DST);\r\n\t}\r\n\r\n\tset blendDst(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonWeaponV2Material.BLEND_DST, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 深度测试方式。\r\n\t */\r\n\tget depthTest(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningToonWeaponV2Material.DEPTH_TEST);\r\n\t}\r\n\r\n\tset depthTest(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningToonWeaponV2Material.DEPTH_TEST, value);\r\n\t}\r\n\r\n\t\r\n\r\n\t\r\n    /** 卡通材质 -- 描边粗细 */\r\n    get CartoonOutlineWidth() {\r\n        return this._shaderValues.getNumber(GPUSkinningToonWeaponV2Material.CARTOON_OUTLINEWIDTH);\r\n    }\r\n    set CartoonOutlineWidth(value) {\r\n        this._shaderValues.setNumber(GPUSkinningToonWeaponV2Material.CARTOON_OUTLINEWIDTH, value);\r\n\t}\r\n\t\r\n\t\r\n    set _OutlineWidth(value) {\r\n\t\tthis.CartoonOutlineWidth = value;\r\n\t}\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.setShaderName(GPUSkinningToonWeaponV2Material.shaderName);\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.ALBEDOCOLOR, new Vector4(1.0, 1.0, 1.0, 1.0));\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.TILINGOFFSET, new Vector4(1.0, 1.0, 0.0, 0.0));\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.RIMCOLORA0, this._rimColorA0);\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.RIMCOLORA1, this._rimColorA1);\r\n\t\tthis._shaderValues.setVector(GPUSkinningToonWeaponV2Material.RIMCOLORB, this._rimColorB);\r\n\t\t\r\n\t\t// this._shaderValues.setVector(GPUSkinningToonWeaponV2Material.DOTRIMCOLOR, new Vector4(1.0, 0.0, 0.0, 1.0));\r\n\t\t// 卡通材质 -- 描边粗细\r\n\t\tthis.CartoonOutlineWidth = 0.004;\r\n\r\n\r\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, 0.5);\r\n\r\n\t\tthis.renderMode = GPUSkinningToonWeaponV2Material.RENDERMODE_OPAQUE;\r\n\r\n\t\t// this._shaderValues.addDefine(Shader3D.getDefineByName(\"SKIN_4\"));\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: GPUSkinningToonWeaponV2Material = new GPUSkinningToonWeaponV2Material();\r\n\t\tthis.cloneTo(dest);\r\n\t\tthis._albedoColor.cloneTo(dest._albedoColor);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\t\r\n\tcloneTo(destObject: any): void {\r\n\t\tsuper.cloneTo(destObject);\r\n\t\tvar destMaterial: GPUSkinningToonWeaponV2Material = (<GPUSkinningToonWeaponV2Material>destObject);\r\n\t\tthis._albedoColor.cloneTo(destMaterial._albedoColor);\r\n\t\t\r\n\t\t// this._rimColorA0.cloneTo(destMaterial._rimColorA0);\r\n\t\t// this._rimColorA1.cloneTo(destMaterial._rimColorA1);\r\n\t\t// this._rimColorB.cloneTo(destMaterial._rimColorB);\r\n\r\n\t\t// destMaterial.rimColorA0 = destMaterial._rimColorA0;\r\n\t\t// destMaterial.rimColorA1 = destMaterial._rimColorA1;\r\n\t\t// destMaterial.rimColorB = destMaterial._rimColorB;\r\n\t\t\r\n\t}\r\n\r\n}","import GPUSkiningMesh from \"./Mesh/GPUSkiningMesh\";\r\n\r\nimport LoaderManager = Laya.LoaderManager;\r\nimport Loader = Laya.Loader;\r\nimport Event = Laya.Event;\r\nimport Shader3D = Laya.Shader3D;\r\nimport HalfFloatUtils = Laya.HalfFloatUtils;\r\nimport GPUSkinningAnimation from \"./Datas/GPUSkinningAnimation\";\r\nimport GPUSkinningPlayerMono from \"./GPUSkinningPlayerMono\";\r\nimport { GPUSkinningBaseMaterial } from \"./Material/GPUSkinningBaseMaterial\";\r\nimport GPUSkinningPlayerMonoManager from \"./GPUSkinningPlayerMonoManager\";\r\nimport GPUSkinningPlayer from \"./GPUSkinningPlayer\";\r\nimport GPUSkinningPlayerResources from \"./GPUSkinningPlayerResources\";\r\nimport GPUSkinningPlayerJoint from \"./GPUSkinningPlayerJoint\";\r\nimport { GPUSkiningLoadModelV05 } from \"./Mesh/GPUSkiningLoadModelV05\";\r\nimport GPUSkiningVertexMesh from \"./Mesh/GPUSkiningVertexMesh\";\r\nimport GPUSkinningClip from \"./Datas/GPUSkinningClip\";\r\nimport LayaExtends_Node from \"../LayaExtends/LayaExtends_Node\";\r\nimport { GPUSkinningCartoon2TextureMaterial } from \"./Material/GPUSkinningCartoon2TextureMaterial\";\r\nimport SceneMaterial from \"./Material/SceneMaterial\";\r\nimport { GPUSkinningToonV2Material } from \"./Material/GPUSkinningToonV2\";\r\nimport { GPUSkinningToonWeaponV2Material } from \"./Material/GPUSkinningToonWeaponV2\";\r\n// import LayaExtends_Laya3D from \"../LayaExtends/LayaExtends_Laya3D\";\r\n// import LayaExtends_Texture2D from \"../LayaExtends/LayaExtends_Texture2D\";\r\n\r\nexport enum MaterialTextureType\r\n{\r\n  /** 无 */\r\n  None = 0,\r\n\r\n  /** 褶皱阴影贴图 */\r\n  Shadow = 2,\r\n\r\n  /** 阴影颜色贴图 */\r\n  ShadowColor = 4,\r\n\r\n  /** 高光和边缘光贴图 */\r\n  HeightRimLight = 8,\r\n\r\n  /** 遮罩 */\r\n  Mask = 16,\r\n\r\n  \r\n  /** 阴影颜色贴图 和 高光和边缘光贴图 */\r\n  ShadowColor_And_HeightRimLight = 4 | 8,\r\n}\r\n\r\nexport default class GPUSkining\r\n{\r\n    static IsPauseAll: boolean = false;\r\n    static EXT_SKING_MESH = \"skinlm\";\r\n\r\n    static async InitAsync()\r\n    {\r\n      \r\n      window['GPUSkining'] = GPUSkining;\r\n      window['GPUSkinningPlayerMonoManager'] = GPUSkinningPlayerMonoManager;\r\n      window['GPUSkinningPlayerMono'] = GPUSkinningPlayerMono;\r\n      window['GPUSkinningPlayerResources'] = GPUSkinningPlayerResources;\r\n      window['GPUSkinningPlayer'] = GPUSkinningPlayer;\r\n      window['GPUSkinningPlayerJoint'] = GPUSkinningPlayerJoint;\r\n      window['GPUSkiningMesh'] = GPUSkiningMesh;\r\n      window['GPUSkiningLoadModelV05'] = GPUSkiningLoadModelV05;\r\n      window['GPUSkiningVertexMesh'] = GPUSkiningVertexMesh;\r\n      window['GPUSkinningBaseMaterial'] = GPUSkinningBaseMaterial;\r\n      window['GPUSkinningCartoon2TextureMaterial'] = GPUSkinningCartoon2TextureMaterial;\r\n      window['GPUSkinningToonV2Material'] = GPUSkinningToonV2Material;\r\n      window['GPUSkinningToonWeaponV2Material'] = GPUSkinningToonWeaponV2Material;\r\n      window['GPUSkinningAnimation'] = GPUSkinningAnimation;\r\n      window['GPUSkinningClip'] = GPUSkinningClip;\r\n      window['SceneMaterial'] = SceneMaterial;\r\n\r\n      Laya.ClassUtils.regClass(\"GPUSkinningToonV2Material\", GPUSkinningToonV2Material);\r\n      Laya.ClassUtils.regClass(\"GPUSkinningToonWeaponV2Material\", GPUSkinningToonWeaponV2Material);\r\n      \r\n      \r\n      var GPUSkinningIncludegGLSL: string = await GPUSkinningBaseMaterial.loadShaderGlslAsync(\"GPUSkinningInclude\");\r\n      Shader3D.addInclude(\"GPUSkinningInclude.glsl\", GPUSkinningIncludegGLSL);\r\n\r\n      // var GPUSkinningIncludegGLSL: string = await GPUSkinningBaseMaterial.loadShaderGlslAsync(\"GPUSkinningInclude4\");\r\n      // Shader3D.addInclude(\"GPUSkinningInclude4.glsl\", GPUSkinningIncludegGLSL);\r\n\r\n      GPUSkinningBaseMaterial.__initDefine__();\r\n      // await GPUSkinningUnlitMaterial.install();\r\n      // await GPUSkinningCartoonMaterial.install();\r\n      // await GPUSkinningCartoon2TextureMaterial.install();\r\n      // await GPUSkinningToonMaterial.install();\r\n      await GPUSkinningToonV2Material.install();\r\n      await GPUSkinningToonWeaponV2Material.install();\r\n\r\n\r\n\r\n      LayaExtends_Node.Init();\r\n      // LayaExtends_Texture2D.Init();\r\n      // LayaExtends_Laya3D.Init();\r\n\r\n      Laya3D.SKING_MESH = \"SKING_MESH\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n      var createMap: any = LoaderManager.createMap;\r\n      createMap[\"skinlm\"] = [Laya3D.SKING_MESH, GPUSkiningMesh._parse];\r\n\r\n      \r\n      var parserMap: any = Loader.parserMap;\r\n      parserMap[Laya3D.SKING_MESH] = this._loadMesh;\r\n        \r\n    }\r\n\r\n    private static _loadMesh(loader: Loader): void \r\n    {\r\n      loader.on(Event.LOADED, null, this._onMeshLmLoaded, [loader]);\r\n      loader.load(loader.url, Loader.BUFFER, false, null, true);\r\n    }\r\n\r\n    static _onMeshLmLoaded(loader: Loader, lmData: ArrayBuffer): void \r\n    {\r\n      loader._cache = loader._createCache;\r\n      var mesh: GPUSkiningMesh = GPUSkiningMesh._parse(lmData, loader._propertyParams, loader._constructParams);\r\n      Laya3D._endLoad(loader, mesh);\r\n    }\r\n    \r\n\r\n\r\n    static resRoot = \"res3d/Conventional/\";\r\n    static GetAnimName(name: string): string\r\n    {\r\n      // name = name.replace(\"_Skin1\", \"\");\r\n      // return `GPUSKinning_${name}_Anim.bin`;\r\n      return name + \".info.bin\";\r\n    }\r\n\r\n    static GetMeshName(name: string): string\r\n    {\r\n      // name = name.replace(\"_Skin1\", \"\");\r\n      // return `GPUSKinning_${name}_Mesh.bin`;\r\n      return name + \".mesh.bin\";\r\n    }\r\n    \r\n    static GetMatrixTextureName(name: string): string\r\n    {\r\n      // name = name.replace(\"_Skin1\", \"\");\r\n      // return `GPUSKinning_${name}_MatrixTexture.bin`;\r\n      return name + \".matrix.bin\";\r\n    }\r\n    \r\n    static GetMainTextureName(name: string): string\r\n    {\r\n      // name = name.replace(\"_Skin1\", \"\");\r\n      // return `GPUSKinning_${name}_MainTexture.png`;\r\n      \r\n      return `${name}_main.png`;\r\n    }\r\n    \r\n    static GetShadowTextureName(name: string): string\r\n    {\r\n      // name = name.replace(\"_Skin1\", \"\");\r\n      return `GPUSKinning_${name}_ShadowTexture.png`;\r\n    }\r\n    \r\n    static GetShadowColorTextureName(name: string): string\r\n    {\r\n      // name = name.replace(\"_Skin1\", \"\");\r\n      return `GPUSKinning_${name}_ShadowColorTexture.png`;\r\n    }\r\n\r\n    static GetMaskTextureName(name: string): string\r\n    {\r\n      // name = name.replace(\"_Skin1\", \"\");\r\n      // return `GPUSKinning_${name}_MaskTexture.png`;\r\n      return `${name}_mask.png`;\r\n    }\r\n    \r\n    static GetHeightRimLightTextureName(name: string): string\r\n    {\r\n      // name = name.replace(\"_Skin1\", \"\");\r\n      return `GPUSKinning_${name}_HeightRimLightTexture.png`;\r\n    }\r\n    \r\n    static GetMaterailName(name: string): string\r\n    {\r\n      // name = name.replace(\"_Skin1\", \"\");\r\n      return `${name}.materail.lmat`;\r\n    }\r\n\r\n    static GetPath(name: string)\r\n    {\r\n      return this.resRoot + name;\r\n    }\r\n\r\n    // static LoadAnimTexture(path: string, width: int, height:int, callback:(  (anim: Laya.Texture2D) => any))\r\n    // {\r\n    //       Laya.loader.load(path, Laya.Handler.create(this, (arrayBuffer:ArrayBuffer | Laya.Texture2D)=>\r\n    //       {\r\n    //         var texture: Laya.Texture2D;\r\n    //         if(arrayBuffer instanceof ArrayBuffer)\r\n    //         {\r\n    //           var f32 = new Float32Array(arrayBuffer);\r\n    //           texture = new Laya.Texture2D(width, height, Laya.TextureFormat.R32G32B32A32, false, false);\r\n    //           texture.wrapModeU = Laya.BaseTexture.WARPMODE_CLAMP;\r\n    //           texture.wrapModeV = Laya.BaseTexture.WARPMODE_CLAMP;\r\n    //           texture.filterMode = Laya.BaseTexture.FILTERMODE_POINT;\r\n    //           texture.anisoLevel = 0;\r\n    //           texture.lock = true;\r\n    //           texture.setSubPixels(0, 0, width, height, f32, 0);\r\n    //           texture._url =  Laya.URL.formatURL(path);\r\n\r\n\r\n    //           Laya.Loader.clearRes(path);\r\n    //           Laya.Loader.cacheRes(path, texture);\r\n    //         }\r\n    //         else\r\n    //         {\r\n    //           texture = arrayBuffer;\r\n    //         }\r\n            \r\n    //         callback(texture);\r\n\r\n    //       }), null, Laya.Loader.BUFFER);\r\n\r\n    // }\r\n\r\n    \r\n    static LoadAnimTexture(path: string, width: int, height:int, callback:(  (anim: Laya.Texture2D) => any))\r\n    {\r\n          Laya.loader.load(path, Laya.Handler.create(this, (arrayBuffer:ArrayBuffer | Laya.Texture2D)=>\r\n          {\r\n            var texture: Laya.Texture2D;\r\n            if(arrayBuffer instanceof ArrayBuffer)\r\n            {\r\n              var f32 = new Float32Array(arrayBuffer);\r\n              \r\n              var pixelDataArrays:Float32Array = new Float32Array(width*height*4); \r\n              pixelDataArrays.set(f32,0);\r\n    \r\n              texture = new Laya.Texture2D(width, height, Laya.TextureFormat.R32G32B32A32, false, false);\r\n              texture.wrapModeU = Laya.BaseTexture.WARPMODE_CLAMP;\r\n              texture.wrapModeV = Laya.BaseTexture.WARPMODE_CLAMP;\r\n              texture.filterMode = Laya.BaseTexture.FILTERMODE_POINT;\r\n              texture.anisoLevel = 0;\r\n              texture.lock = true;\r\n              texture.setPixels(pixelDataArrays,0);\r\n              texture._url =  Laya.URL.formatURL(path);\r\n\r\n              \r\n\r\n\r\n              Laya.Loader.clearRes(path);\r\n              Laya.Loader.cacheRes(path, texture);\r\n            }\r\n            else\r\n            {\r\n              texture = arrayBuffer;\r\n            }\r\n            \r\n            callback(texture);\r\n\r\n          }), null, Laya.Loader.BUFFER);\r\n\r\n    }\r\n\r\n    \r\n\tstatic LoadAnimTextureAsync(path: string, width: int, height:int): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n        this.LoadAnimTexture(path, width, height, (res: Laya.Texture2D)=>{\r\n          resolve(res);\r\n        });\r\n\t\t});\r\n  }\r\n  \r\n\tstatic LoadAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.load(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n        resolve(data);\r\n\r\n\t\t\t}), null, type);\r\n\t\t});\r\n\t}\r\n    \r\n\tstatic Load3DAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.create(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n        Laya.timer.frameOnce(1, this, ()=>{\r\n\r\n          resolve(data);\r\n\r\n        })\r\n\t\t\t}), null, type);\r\n\t\t});\r\n\t}\r\n\r\n\r\n    static GetLoadItemList(list: {url:string, type:string}[],name: string, hasShadowTexture?: boolean,  mainTexturePath?: string): {url:string, type:string}[]\r\n    {\r\n      var animPath: string = this.GetPath(this.GetAnimName(name));\r\n      var meshPath: string = this.GetPath(this.GetMeshName(name));\r\n      var matrixTexturePath: string = this.GetPath(this.GetMatrixTextureName(name));\r\n      if(mainTexturePath == null || mainTexturePath == \"\")\r\n      { \r\n        mainTexturePath = this.GetPath(this.GetMainTextureName(name));\r\n      }\r\n\r\n\r\n      if(!list)\r\n      {\r\n        list = [];\r\n      }\r\n\r\n\r\n      list.push(\r\n                {url: animPath, type: Laya.Loader.BUFFER},\r\n                {url: meshPath, type: Laya.Loader.BUFFER},\r\n                {url: matrixTexturePath, type: Laya.Loader.BUFFER},\r\n                {url: mainTexturePath, type: Laya.Loader.TEXTURE2D},\r\n             );\r\n      // if(hasShadowTexture)\r\n      // {\r\n      //     var shadowTexturePath = this.GetPath(this.GetShadowTextureName(name));\r\n      //     list.push({url: shadowTexturePath, type: Laya.Loader.TEXTURE2D});\r\n      // }\r\n      \r\n      // if (name.indexOf(\"1\") == 0) \r\n\t\t\t// {\r\n\t    //         var maskTexturePath = this.GetPath(this.GetMaskTextureName(name));\r\n\t    //         list.push({ url: maskTexturePath, type: Laya.Loader.TEXTURE2D });\r\n      // }\r\n      \r\n      var maskTexturePath = this.GetPath(this.GetMaskTextureName(name));\r\n      list.push({ url: maskTexturePath, type: Laya.Loader.TEXTURE2D });\r\n\t\t\t\r\n      return list;\r\n    }\r\n\r\n    static async CreateByNameAsync(skinName: string, animName:string): Promise<GPUSkinningPlayerMono>\r\n    {\r\n      return new Promise<GPUSkinningPlayerMono>((resolve)=>\r\n      {\r\n            this.CreateByName(skinName, animName, Laya.Handler.create(this, (mono: GPUSkinningPlayerMono)=>{\r\n              resolve(mono);\r\n            }));\r\n      })\r\n    }\r\n\r\n\r\n    static CreateByName(skinName: string, animName:string, callback:Laya.Handler)\r\n    {\r\n\r\n      var animPath: string = this.GetPath(this.GetAnimName(animName));\r\n      var matrixTexturePath: string = this.GetPath(this.GetMatrixTextureName(animName));\r\n      var meshPath: string = this.GetPath(this.GetMeshName(skinName));\r\n      var materailPath = this.GetPath(this.GetMaterailName(skinName));\r\n\r\n      GPUSkinningAnimation.Load(animPath, (anim: GPUSkinningAnimation)=>\r\n      {\r\n            if(anim == null)\r\n            {\r\n              console.error(\"GPUSkinning.CreateByName资源加载失败\", animPath);\r\n              callback.runWith(null);\r\n              return;\r\n            }\r\n            \r\n            GPUSkiningMesh.Load(meshPath, (mesh: GPUSkiningMesh)=>\r\n            {\r\n                  if(mesh == null)\r\n                  {\r\n                    console.error(\"GPUSkinning.CreateByName资源加载失败\", meshPath);\r\n                    callback.runWith(null);\r\n                    return;\r\n                  }\r\n\r\n                  this.LoadAnimTexture(matrixTexturePath, anim.textureWidth, anim.textureHeight, (animTexture: Laya.Texture2D)=>\r\n                  {\r\n                      if(animTexture == null)\r\n                      {\r\n                        console.error(\"GPUSkinning.CreateByName资源加载失败\", matrixTexturePath);\r\n                        callback.runWith(null);\r\n                      }\r\n                      \r\n\r\n\r\n                      var material:GPUSkinningToonV2Material;\r\n\r\n                      var createFun = ()=>\r\n                      {\r\n                        material.GPUSkinning_TextureMatrix = animTexture;\r\n                        material.__mname = skinName + \" prefab\";\r\n\r\n\r\n                        var sprite = new Laya.MeshSprite3D();\r\n                        var mono: GPUSkinningPlayerMono = sprite.addComponent(GPUSkinningPlayerMono);\r\n                        mono.SetData(anim, mesh, material, animTexture);\r\n                        callback.runWith(mono);\r\n                        window['sprite'] = sprite;\r\n                      }\r\n\r\n\r\n\r\n                    Laya.loader.create(materailPath, Laya.Handler.create(this, (m:GPUSkinningToonV2Material)=>\r\n                    {\r\n                      if(m == null)\r\n                      {\r\n                        console.error(\"GPUSkinning.CreateByName资源加载失败\", materailPath);\r\n                      }\r\n                      material = m;\r\n                      createFun();\r\n                    }));\r\n\r\n                          \r\n                          \r\n                        \r\n\r\n                  });\r\n\r\n\r\n\r\n              \r\n            })\r\n\r\n\r\n      })\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\nwindow['GPUSkining'] = GPUSkining;\r\nwindow['SceneMaterial'] = SceneMaterial;","import GPUSkining from \"./GPUSkining\";\r\n\r\nexport default class GPUSKiningLib\r\n{\r\n\r\n}\r\nwindow['GPUSkining'] = GPUSkining;"],"names":["Matrix4x4","Byte","Vector3","Quaternion","Shader3D","Vector4","VertexMesh","SubShader","RenderState","Material"],"mappings":"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"}