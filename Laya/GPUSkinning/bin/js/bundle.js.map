{"version":3,"file":"bundle.js","sources":["../../src/GPUSkinning/Material/SceneMaterial.ts","../../src/_test/TestSene.ts","../../src/GPUSkinning/Mesh/GPUSkiningVertexMesh.ts","../../src/GPUSkinning/Mesh/GPUSkiningLoadModelV05.ts","../../src/GPUSkinning/Mesh/GPUSkiningMeshReader.ts","../../src/GPUSkinning/Mesh/GPUSkiningMesh.ts","../../src/GPUSkinning/Datas/ByteReadUtil.ts","../../src/GPUSkinning/Datas/GPUSkinningBone.ts","../../src/GPUSkinning/Datas/GPUSkinningWrapMode.ts","../../src/GPUSkinning/Datas/GPUSkinningAnimEvent.ts","../../src/GPUSkinning/Datas/GPUSkinningFrame.ts","../../src/GPUSkinning/Datas/GPUSkinningClip.ts","../../src/GPUSkinning/Datas/GPUSkinningQuality.ts","../../src/GPUSkinning/Datas/GPUSkinningAnimation.ts","../../src/GPUSkinning/GPUSKinningCullingMode.ts","../../src/GPUSkinning/GPUSkinningBetterList.ts","../../src/GPUSkinning/GPUSkinningExecuteOncePerFrame.ts","../../src/GPUSkinning/GPUSkinningMaterial.ts","../../src/GPUSkinning/MaterialState.ts","../../src/GPUSkinning/GPUSkinningPlayerResources.ts","../../src/GPUSkinning/GPUSkinningPlayerMonoManager.ts","../../src/GPUSkinning/GPUSkinningPlayerJoint.ts","../../src/GPUSkinning/GPUSkinningPlayer.ts","../../src/GPUSkinning/GPUSkinningPlayerMono.ts","../../src/GPUSkinning/Material/GPUSkinningBaseMaterial.ts","../../src/GPUSkinning/Material/GPUSkinningUnlitMaterial.ts","../../src/LayaExtends/LayaUtil.ts","../../src/LayaExtends/LayaExtends_Node.ts","../../src/GPUSkinning/Material/GPUSkinningCartoon2TextureMaterial.ts","../../src/GPUSkinning/GPUSkining.ts","../../src/_test/TestShader.ts","../../src/GameConfig.ts","../../src/_test/TestMain.ts"],"sourcesContent":["\r\nimport Shader3D = Laya.Shader3D;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport ShaderData = Laya.ShaderData;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\n\r\n\r\nexport default class SceneMaterial\r\n{\r\n    static scene: Laya.Scene3D;\r\n    static _shaderValues:ShaderData;\r\n    static Init(scene: Laya.Scene3D)\r\n    {\r\n        this.scene = scene;\r\n        this._shaderValues = (<any>scene)._shaderValues;\r\n\t\tthis.SHADERDEFINE_SCENELIGHTINGTEXTURE = Shader3D.getDefineByName(\"SCENELIGHTING\");\r\n        this.sceneLightingSize = new Vector4(-10, 20, -10, 20);\r\n    }\r\n    \r\n\tstatic SCENELIGHTINGTEXTURE: number = Shader3D.propertyNameToID(\"u_SceneLightingTexture\");\r\n\tstatic SCENELIGHTINGSIZE: number = Shader3D.propertyNameToID(\"u_SceneLightingSize\");\r\n\r\n\tstatic SHADERDEFINE_SCENELIGHTINGTEXTURE: ShaderDefine;\r\n    \r\n\t/**\r\n\t * 场景光照贴图\r\n\t */\r\n    static get sceneLightingTexture(): BaseTexture \r\n    {\r\n\t\treturn this._shaderValues.getTexture(this.SCENELIGHTINGTEXTURE);\r\n\t}\r\n\r\n    static set sceneLightingTexture(value: BaseTexture) \r\n    {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(this.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(this.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\tthis._shaderValues.setTexture(this.SCENELIGHTINGTEXTURE, value);\r\n    }\r\n\r\n    static SetSceneLightingTexture(value: BaseTexture)\r\n    {\r\n        this.sceneLightingTexture = value;\r\n    }\r\n\r\n    \r\n    \r\n\t/**\r\n\t * 场景光照贴图映射场景大小 (xMin, xLength, zMin, zLength)\r\n\t */\r\n    static get sceneLightingSize(): Vector4 \r\n    {\r\n\t\treturn this._shaderValues.getVector(this.SCENELIGHTINGSIZE);\r\n\t}\r\n\r\n    static set sceneLightingSize(value: Vector4) \r\n    {\r\n\t\tthis._shaderValues.setVector(this.SCENELIGHTINGSIZE, value);\r\n    }\r\n\r\n    static SetSceneLightingSize(value: Vector4)\r\n    {\r\n        this.sceneLightingSize = value;\r\n    }\r\n\r\n    \r\n    static LoadSceneLightingTexture(path: string)\r\n    {\r\n        Laya.loader.create(path, Laya.Handler.create(this, (texture:Laya.Texture2D)=>\r\n        {\r\n            this.sceneLightingTexture = texture;\r\n        }), null, Laya.Loader.TEXTURE2D);\r\n    }\r\n}\r\n","import Vector3 = Laya.Vector3;\r\nimport SceneMaterial from \"../GPUSkinning/Material/SceneMaterial\";\r\nexport class TestScene extends Laya.Scene3D\r\n{\r\n    static create(): TestScene\r\n    {\r\n        let node = new TestScene();\r\n        node.name = \"WarScene\";\r\n\r\n        let scene = node;\r\n        scene.init()\r\n        return scene;\r\n    }\r\n\r\n    /** 场景根节点 */\r\n    sceneRoot:Laya.Sprite3D;\r\n\r\n    /** 地图节点 */\r\n    mapNode: Laya.Sprite3D;\r\n\r\n    /** 摄像机 */\r\n    camera:Laya.Camera;\r\n    cameraNode:Laya.Sprite3D;\r\n\r\n    /** 屏幕空间层 */\r\n    screen3DLayer:Laya.Sprite3D;\r\n\r\n    /** 灯光 */\r\n    directionLight:Laya.DirectionLight;\r\n\r\n    \r\n    init()\r\n    {\r\n        window['warScene'] = this;\r\n\r\n        this.initCamera();\r\n    }\r\n\r\n    \r\n    initCamera()\r\n    {\r\n        var cameraRootNode: Laya.Sprite3D = new Laya.Sprite3D(\"CameraRoot\");\r\n        var cameraRotationXNode: Laya.Sprite3D = new Laya.Sprite3D(\"CameraRotationX\");\r\n        var camera:Laya.Camera = new Laya.Camera(0, 0.1, 1000);\r\n        var screenLayer: Laya.Sprite3D = new Laya.Sprite3D(\"ScreenLayer\");\r\n\r\n        cameraRootNode.addChild(cameraRotationXNode);\r\n        cameraRotationXNode.addChild(camera);\r\n        camera.addChild(screenLayer);\r\n\r\n        cameraRotationXNode.transform.localRotationEulerX = -20;\r\n        camera.transform.localPosition = new Vector3(0, 0, 10);\r\n\r\n        camera.clearColor = new Laya.Vector4(0.2, 0.5, 0.8, 1);\r\n        camera.orthographic = true;\r\n        camera.orthographicVerticalSize = 5.2;\r\n        camera.farPlane = 2000;\r\n        \r\n\r\n        \r\n        this.camera = camera;\r\n        this.cameraNode = cameraRootNode;\r\n        this.screen3DLayer = screenLayer;\r\n\r\n        \r\n        //创建平行光\r\n        let directionLight: Laya.DirectionLight =<Laya.DirectionLight> this.addChild(new Laya.DirectionLight());\r\n\t\tdirectionLight.color = new Laya.Vector3(1, 1.0, 1.0);\r\n\t\tthis.lightRotaitonSrc= directionLight.transform.localRotationEuler = new Laya.Vector3(-45, 80, 0);\r\n        this.directionLight = directionLight;\r\n        directionLight.transform.rotationEuler = new Laya.Vector3(-20, 20, 0); \r\n        \r\n\r\n        this.addChild(cameraRootNode);\r\n        this.addChild(directionLight);\r\n\r\n        // this.lightRotaitonStart();\r\n\r\n        SceneMaterial.Init(this);\r\n        // SceneMaterial.LoadSceneLightingTexture(\"res3d/GPUSKinning-30/scene_lighting.png\"); \r\n\r\n        \r\n    }\r\n\r\n    lightRotaitonSrc:Vector3;\r\n    lightRotaiton:Vector3;\r\n    lightRotaitonStart()\r\n    {\r\n        this.lightRotaiton = this.directionLight.transform.localRotationEuler;\r\n        Laya.timer.frameLoop(1, this, this.onLightRotaitonLoop)\r\n    }\r\n\r\n    \r\n    lightRotaitonStop()\r\n    {\r\n        this.directionLight.transform.localRotationEuler = this.lightRotaitonSrc;\r\n        Laya.timer.clear(this, this.onLightRotaitonLoop)\r\n    }\r\n    \r\n    onLightRotaitonLoop()\r\n    {\r\n        this.lightRotaiton.x += 1;\r\n        this.lightRotaiton.y += 2;\r\n        this.lightRotaiton.z += 2;\r\n\r\n        this.directionLight.transform.localRotationEuler = this.lightRotaiton;\r\n    }\r\n    \r\n}\r\n\r\n","import VertexMesh = Laya.VertexMesh;\r\nimport VertexDeclaration = Laya.VertexDeclaration;\r\nimport VertexElement = Laya.VertexElement;\r\nimport VertexElementFormat = Laya.VertexElementFormat;\r\n\r\n\r\nexport default class GPUSkiningVertexMesh extends VertexMesh\r\n{\r\n    \r\n\tstatic MESH_TEXTURECOORDINATE2: number = 6;\r\n\tprivate static _declarationMap: any = {};\r\n\r\n    /**\r\n\t * 获取顶点声明。\r\n\t * @param vertexFlag 顶点声明标记字符,格式为:\"POSITION,NORMAL,COLOR,UV,UV1,UV2,BLENDWEIGHT,BLENDINDICES,TANGENT\"。\r\n\t * @return 顶点声明。\r\n\t */\r\n\tstatic getVertexDeclaration(vertexFlag: string, compatible: boolean = true): VertexDeclaration {\r\n\t\tvar verDec: VertexDeclaration = this._declarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\r\n\t\tif (!verDec) {\r\n\t\t\tvar subFlags: any[] = vertexFlag.split(\",\");\r\n\t\t\tvar offset: number = 0;\r\n\t\t\tvar elements: any[] = [];\r\n\t\t\tfor (var i: number = 0, n: number = subFlags.length; i < n; i++) {\r\n\t\t\t\tvar element: VertexElement;\r\n\t\t\t\tswitch (subFlags[i]) {\r\n\t\t\t\t\tcase \"POSITION\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, this.MESH_POSITION0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, this.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"COLOR\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_COLOR0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, this.MESH_TEXTURECOORDINATE0);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV1\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_TEXTURECOORDINATE1);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n                    case \"UV2\":\r\n                        element = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_TEXTURECOORDINATE2);\r\n\t\t\t\t\t\toffset += 16;\r\n                        break;\r\n\t\t\t\t\tcase \"BLENDWEIGHT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_BLENDWEIGHT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDINDICES\":\r\n\t\t\t\t\t\tif (compatible) {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_BLENDINDICES0);//兼容\r\n\t\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Byte4, this.MESH_BLENDINDICES0);\r\n\t\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"TANGENT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, this.MESH_TANGENT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tconsole.log(\"TANGENT\", element)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow \"VertexMesh: unknown vertex flag.\";\r\n\t\t\t\t}\r\n\t\t\t\telements.push(element);\r\n\t\t\t}\r\n\t\t\tverDec = new VertexDeclaration(offset, elements);\r\n\t\t\tthis._declarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\r\n\t\t}\r\n\t\treturn verDec;\r\n\t}\r\n}","// import { IndexBuffer3D } from \"../graphics/IndexBuffer3D\"\r\n// import { VertexMesh } from \"../graphics/Vertex/VertexMesh\"\r\n// import { VertexBuffer3D } from \"../graphics/VertexBuffer3D\"\r\n// import { VertexDeclaration } from \"../graphics/VertexDeclaration\"\r\n// import { HalfFloatUtils } from \"../math/HalfFloatUtils\"\r\n// import { Matrix4x4 } from \"../math/Matrix4x4\"\r\n// import { Mesh } from \"../resource/models/Mesh\"\r\n// import { SubMesh } from \"../resource/models/SubMesh\"\r\n// import { Byte } from \"../../utils/Byte\"\r\n// import { LayaGL } from \"../../layagl/LayaGL\";\r\n// import { IndexFormat } from \"../graphics/IndexFormat\"\r\n\r\nimport IndexBuffer3D = Laya.IndexBuffer3D;\r\nimport VertexBuffer3D = Laya.VertexBuffer3D;\r\nimport VertexDeclaration = Laya.VertexDeclaration;\r\nimport HalfFloatUtils = Laya.HalfFloatUtils;\r\nimport Matrix4x4 = Laya.Matrix4x4;\r\nimport Mesh = Laya.Mesh;\r\nimport SubMesh = Laya.SubMesh;\r\nimport Byte = Laya.Byte;\r\nimport IndexFormat = Laya.IndexFormat;\r\nimport LayaGL = Laya.LayaGL;\r\nimport GPUSkiningVertexMesh from \"./GPUSkiningVertexMesh\";\r\n\r\n\r\n/**\r\n * @internal\r\n * <code>LoadModelV05</code> 类用于模型加载。\r\n */\r\nexport class GPUSkiningLoadModelV05 {\r\n\r\n\t/**@internal */\r\n\tprivate static _BLOCK: any = { count: 0 };\r\n\t/**@internal */\r\n\tprivate static _DATA: any = { offset: 0, size: 0 };\r\n\r\n\t/**@internal */\r\n\tprivate static _strings: any[] = [];\r\n\t/**@internal */\r\n\tprivate static _readData: Byte;\r\n\t/**@internal */\r\n\tprivate static _version: string;\r\n\t/**@internal */\r\n\tprivate static _mesh: Mesh;\r\n\t/**@internal */\r\n\tprivate static _subMeshes: SubMesh[];\r\n\t/**@internal */\r\n\t static _bindPoseIndices: number[] = [];\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic parse(readData: Byte, version: string, mesh: Mesh, subMeshes: SubMesh[]): void {\r\n\t\tGPUSkiningLoadModelV05._mesh = mesh;\r\n\t\tGPUSkiningLoadModelV05._subMeshes = subMeshes;\r\n\t\tGPUSkiningLoadModelV05._version = version;\r\n\t\tGPUSkiningLoadModelV05._readData = readData;\r\n\r\n\r\n\t\tGPUSkiningLoadModelV05.READ_DATA();\r\n\t\tGPUSkiningLoadModelV05.READ_BLOCK();\r\n\t\tGPUSkiningLoadModelV05.READ_STRINGS();\r\n\t\tfor (var i: number = 0, n: number = GPUSkiningLoadModelV05._BLOCK.count; i < n; i++) {\r\n\t\t\tGPUSkiningLoadModelV05._readData.pos = GPUSkiningLoadModelV05._BLOCK.blockStarts[i];\r\n\t\t\tvar index: number = GPUSkiningLoadModelV05._readData.getUint16();\r\n\t\t\tvar blockName: string = GPUSkiningLoadModelV05._strings[index];\r\n\t\t\tvar fn: Function = GPUSkiningLoadModelV05[\"READ_\" + blockName];\r\n\t\t\tif (fn == null)\r\n\t\t\t\tthrow new Error(\"model file err,no this function:\" + index + \" \" + blockName);\r\n\t\t\telse\r\n\t\t\t\tfn.call(null);\r\n\t\t}\r\n\t\tGPUSkiningLoadModelV05._mesh._bindPoseIndices = new Uint16Array(GPUSkiningLoadModelV05._bindPoseIndices);\r\n\t\tGPUSkiningLoadModelV05._bindPoseIndices.length = 0;\r\n\t\tGPUSkiningLoadModelV05._strings.length = 0;\r\n\t\tGPUSkiningLoadModelV05._readData = null;\r\n\t\tGPUSkiningLoadModelV05._version = null;\r\n\t\tGPUSkiningLoadModelV05._mesh = null;\r\n\t\tGPUSkiningLoadModelV05._subMeshes = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static _readString(): string {\r\n\t\treturn GPUSkiningLoadModelV05._strings[GPUSkiningLoadModelV05._readData.getUint16()];\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_DATA(): void {\r\n\t\tGPUSkiningLoadModelV05._DATA.offset = GPUSkiningLoadModelV05._readData.getUint32();\r\n\t\tGPUSkiningLoadModelV05._DATA.size = GPUSkiningLoadModelV05._readData.getUint32();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_BLOCK(): void {\r\n\t\tvar count: number = GPUSkiningLoadModelV05._BLOCK.count = GPUSkiningLoadModelV05._readData.getUint16();\r\n\t\tvar blockStarts: any[] = GPUSkiningLoadModelV05._BLOCK.blockStarts = [];\r\n\t\tvar blockLengths: any[] = GPUSkiningLoadModelV05._BLOCK.blockLengths = [];\r\n\t\tfor (var i: number = 0; i < count; i++) {\r\n\t\t\tblockStarts.push(GPUSkiningLoadModelV05._readData.getUint32());\r\n\t\t\tblockLengths.push(GPUSkiningLoadModelV05._readData.getUint32());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_STRINGS(): void {\r\n\t\tvar offset: number = GPUSkiningLoadModelV05._readData.getUint32();\r\n\t\tvar count: number = GPUSkiningLoadModelV05._readData.getUint16();\r\n\t\tvar prePos: number = GPUSkiningLoadModelV05._readData.pos;\r\n\t\tGPUSkiningLoadModelV05._readData.pos = offset + GPUSkiningLoadModelV05._DATA.offset;\r\n\r\n\t\tfor (var i: number = 0; i < count; i++)\r\n\t\t\tGPUSkiningLoadModelV05._strings[i] = GPUSkiningLoadModelV05._readData.readUTFString();\r\n\r\n\t\tGPUSkiningLoadModelV05._readData.pos = prePos;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_MESH(): boolean {\r\n\t\tvar gl: WebGLRenderingContext = LayaGL.instance;\r\n\t\tvar i: number, n: number;\r\n\t\tvar memorySize: number = 0;\r\n\t\tvar name: string = GPUSkiningLoadModelV05._readString();\r\n\t\tvar reader: Byte = GPUSkiningLoadModelV05._readData;\r\n\t\tvar arrayBuffer: ArrayBuffer = reader.__getBuffer();\r\n\t\tvar vertexBufferCount: number = reader.getInt16();\r\n\t\tvar offset: number = GPUSkiningLoadModelV05._DATA.offset;\r\n\t\tfor (i = 0; i < vertexBufferCount; i++) {//TODO:始终为1\r\n\t\t\tvar vbStart: number = offset + reader.getUint32();\r\n\t\t\tvar vertexCount: number = reader.getUint32();\r\n\t\t\tvar vertexFlag: string = GPUSkiningLoadModelV05._readString();\r\n\t\t\tvar vertexDeclaration: VertexDeclaration = GPUSkiningVertexMesh.getVertexDeclaration(vertexFlag, false);\r\n\r\n\t\t\tvar vertexStride: number = vertexDeclaration.vertexStride;\r\n\t\t\tvar vertexData: ArrayBuffer;\r\n\t\t\tvar floatData: Float32Array;\r\n\t\t\tvar uint8Data: Uint8Array;\r\n\r\n\t\t\tvar subVertexFlags: any[] = vertexFlag.split(\",\");\r\n\t\t\tvar subVertexCount: number = subVertexFlags.length;\r\n\t\t\tvar mesh: Mesh = GPUSkiningLoadModelV05._mesh;\r\n\r\n\t\t\tswitch (GPUSkiningLoadModelV05._version) {\r\n\t\t\t\tcase \"LAYAMODEL:05\":\r\n\t\t\t\tcase \"LAYAMODEL:GPUSkining_05\": \r\n\t\t\t\tcase \"LAYAMODEL:GPUSkining_06\": \r\n\t\t\t\t\tvertexData = arrayBuffer.slice(vbStart, vbStart + vertexCount * vertexStride);\r\n\t\t\t\t\tfloatData = new Float32Array(vertexData);\r\n\t\t\t\t\tuint8Data = new Uint8Array(vertexData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"LAYAMODEL:COMPRESSION_05\":\r\n\t\t\t\t\tvertexData = new ArrayBuffer(vertexStride * vertexCount);\r\n\t\t\t\t\tfloatData = new Float32Array(vertexData);\r\n\t\t\t\t\tuint8Data = new Uint8Array(vertexData);\r\n\t\t\t\t\tvar lastPosition: number = reader.pos;\r\n\t\t\t\t\treader.pos = vbStart;\r\n\r\n\t\t\t\t\tfor (var j: number = 0; j < vertexCount; j++) {\r\n\t\t\t\t\t\tvar subOffset: number;\r\n\t\t\t\t\t\tvar verOffset: number = j * vertexStride;\r\n\t\t\t\t\t\tfor (var k: number = 0; k < subVertexCount; k++) {\r\n\t\t\t\t\t\t\tswitch (subVertexFlags[k]) {\r\n\t\t\t\t\t\t\t\tcase \"POSITION\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tverOffset += 12;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"NORMAL\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tverOffset += 12;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"COLOR\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 3] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tverOffset += 16;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"UV\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tverOffset += 8;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"UV1\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = HalfFloatUtils.convertToNumber(reader.getUint16());\r\n\t\t\t\t\t\t\t\t\tverOffset += 8;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"BLENDWEIGHT\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 3] = reader.getUint8() / 255;\r\n\t\t\t\t\t\t\t\t\tverOffset += 16;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"BLENDINDICES\":\r\n\t\t\t\t\t\t\t\t\tuint8Data[verOffset] = reader.getUint8();\r\n\t\t\t\t\t\t\t\t\tuint8Data[verOffset + 1] = reader.getUint8();\r\n\t\t\t\t\t\t\t\t\tuint8Data[verOffset + 2] = reader.getUint8();\r\n\t\t\t\t\t\t\t\t\tuint8Data[verOffset + 3] = reader.getUint8();\r\n\t\t\t\t\t\t\t\t\tverOffset += 4;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"TANGENT\":\r\n\t\t\t\t\t\t\t\t\tsubOffset = verOffset / 4;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 1] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 2] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tfloatData[subOffset + 3] = reader.getUint8() / 127.5 - 1;\r\n\t\t\t\t\t\t\t\t\tverOffset += 16;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treader.pos = lastPosition;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexBuffer: VertexBuffer3D = new VertexBuffer3D(vertexData.byteLength, gl.STATIC_DRAW, true);\r\n\t\t\tvertexBuffer.vertexDeclaration = vertexDeclaration;\r\n\t\t\tvertexBuffer.setData(vertexData);\r\n\t\t\tvar vertexCount: number = vertexBuffer._byteLength / vertexDeclaration.vertexStride;\r\n\t\t\t//TDDO:是否加标记\r\n\t\t\tif (vertexCount > 65535)\r\n\t\t\t\tmesh._indexFormat = IndexFormat.UInt32;\r\n\t\t\telse\r\n\t\t\t\tmesh._indexFormat = IndexFormat.UInt16;\r\n\t\t\tmesh._vertexBuffer = vertexBuffer;\r\n\t\t\tmesh._vertexCount += vertexCount;\r\n\t\t\tmemorySize += floatData.length * 4;\r\n\t\t}\r\n\r\n\t\tvar ibStart: number = offset + reader.getUint32();\r\n\t\tvar ibLength: number = reader.getUint32();\r\n\r\n\t\tvar ibDatas: Uint16Array | Uint32Array;\r\n\t\tif (mesh.indexFormat == <any>IndexFormat.UInt32)\r\n\t\t\tibDatas = new Uint32Array(arrayBuffer.slice(ibStart, ibStart + ibLength));\r\n\t\telse\r\n\t\t\tibDatas = new Uint16Array(arrayBuffer.slice(ibStart, ibStart + ibLength));\r\n\r\n\t\tvar indexBuffer: IndexBuffer3D = new IndexBuffer3D(mesh.indexFormat, ibDatas.length, gl.STATIC_DRAW, true);\r\n\t\tindexBuffer.setData(ibDatas);\r\n\t\tmesh._indexBuffer = indexBuffer;\r\n\r\n\t\tmesh._setBuffer(mesh._vertexBuffer, indexBuffer);\r\n\r\n\t\tmemorySize += indexBuffer.indexCount * 2;\r\n\t\tmesh._setCPUMemory(memorySize);\r\n\t\tmesh._setGPUMemory(memorySize);\r\n\r\n\t\tvar boneNames: string[] = mesh._boneNames = [];\r\n\t\tvar boneCount: number = reader.getUint16();\r\n\t\tboneNames.length = boneCount;\r\n\t\tfor (i = 0; i < boneCount; i++)\r\n\t\t\tboneNames[i] = GPUSkiningLoadModelV05._strings[reader.getUint16()];//[兼容性]\r\n\r\n\t\tvar bindPoseDataStart: number = reader.getUint32();\r\n\t\tvar bindPoseDataLength: number = reader.getUint32();\r\n\t\tvar bindPoseDatas: Float32Array = new Float32Array(arrayBuffer.slice(offset + bindPoseDataStart, offset + bindPoseDataStart + bindPoseDataLength));\r\n\t\tvar bindPoseFloatCount: number = bindPoseDatas.length;\r\n\t\tvar bindPoseCount: number = bindPoseFloatCount / 16;\r\n\t\tvar bindPoseBuffer: ArrayBuffer = mesh._inverseBindPosesBuffer = new ArrayBuffer(bindPoseFloatCount * 4);//TODO:[NATIVE]临时\r\n\t\tmesh._inverseBindPoses = [];\r\n\t\tfor (i = 0; i < bindPoseFloatCount; i += 16) {\r\n\t\t\tvar inverseGlobalBindPose: Matrix4x4 = new Matrix4x4(bindPoseDatas[i + 0], bindPoseDatas[i + 1], bindPoseDatas[i + 2], bindPoseDatas[i + 3], bindPoseDatas[i + 4], bindPoseDatas[i + 5], bindPoseDatas[i + 6], bindPoseDatas[i + 7], bindPoseDatas[i + 8], bindPoseDatas[i + 9], bindPoseDatas[i + 10], bindPoseDatas[i + 11], bindPoseDatas[i + 12], bindPoseDatas[i + 13], bindPoseDatas[i + 14], bindPoseDatas[i + 15], new Float32Array(bindPoseBuffer, i * 4, 16));\r\n\t\t\tmesh._inverseBindPoses[i / 16] = inverseGlobalBindPose;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static READ_SUBMESH(): boolean {\r\n\t\tvar reader: Byte = GPUSkiningLoadModelV05._readData;\r\n\t\tvar arrayBuffer: ArrayBuffer = reader.__getBuffer();\r\n\t\tvar subMesh: SubMesh = new SubMesh(GPUSkiningLoadModelV05._mesh);\r\n\r\n\t\treader.getInt16();//TODO:vbIndex\r\n\t\tvar ibStart: number = reader.getUint32();\r\n\t\tvar ibCount: number = reader.getUint32();\r\n\t\tvar indexBuffer: IndexBuffer3D = GPUSkiningLoadModelV05._mesh._indexBuffer;\r\n\t\tsubMesh._indexBuffer = indexBuffer;\r\n\t\tsubMesh._setIndexRange(ibStart, ibCount);\r\n\t\tvar vertexBuffer: VertexBuffer3D = GPUSkiningLoadModelV05._mesh._vertexBuffer;\r\n\t\tsubMesh._vertexBuffer = vertexBuffer;\r\n\r\n\t\tvar offset: number = GPUSkiningLoadModelV05._DATA.offset;\r\n\t\tvar subIndexBufferStart: number[] = subMesh._subIndexBufferStart;\r\n\t\tvar subIndexBufferCount: number[] = subMesh._subIndexBufferCount;\r\n\t\tvar boneIndicesList: Uint16Array[] = subMesh._boneIndicesList;\r\n\t\tvar drawCount: number = reader.getUint16();\r\n\t\tsubIndexBufferStart.length = drawCount;\r\n\t\tsubIndexBufferCount.length = drawCount;\r\n\t\tboneIndicesList.length = drawCount;\r\n\r\n\t\tvar pathMarks: any[][] = GPUSkiningLoadModelV05._mesh._skinDataPathMarks;\r\n\t\tvar bindPoseIndices: number[] = GPUSkiningLoadModelV05._bindPoseIndices;\r\n\t\tvar subMeshIndex: number = GPUSkiningLoadModelV05._subMeshes.length;\r\n\t\tfor (var i: number = 0; i < drawCount; i++) {\r\n\t\t\tsubIndexBufferStart[i] = reader.getUint32();\r\n\t\t\tsubIndexBufferCount[i] = reader.getUint32();\r\n\t\t\tvar boneDicofs: number = reader.getUint32();\r\n\t\t\tvar boneDicCount: number = reader.getUint32();\r\n\t\t\tvar boneIndices: Uint16Array = boneIndicesList[i] = new Uint16Array(arrayBuffer.slice(offset + boneDicofs, offset + boneDicofs + boneDicCount));\r\n\t\t\tfor (var j: number = 0, m: number = boneIndices.length; j < m; j++) {\r\n\t\t\t\tvar index: number = boneIndices[j];\r\n\t\t\t\tvar combineIndex: number = bindPoseIndices.indexOf(index);\r\n\t\t\t\tif (combineIndex === -1) {\r\n\t\t\t\t\tboneIndices[j] = bindPoseIndices.length;\r\n\t\t\t\t\tbindPoseIndices.push(index);\r\n\t\t\t\t\tpathMarks.push([subMeshIndex, i, j]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tboneIndices[j] = combineIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tGPUSkiningLoadModelV05._subMeshes.push(subMesh);\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import Mesh = Laya.Mesh;\r\nimport SubMesh = Laya.SubMesh;\r\nimport Byte = Laya.Byte;\r\nimport { GPUSkiningLoadModelV05 } from \"./GPUSkiningLoadModelV05\";\r\n\r\nexport class GPUSkiningMeshReader \r\n{\r\n\r\n     static read(data:ArrayBuffer, mesh:Mesh, subMeshes:SubMesh[]):void \r\n     {\r\n        var readData:Byte = new Byte(data);\r\n        readData.pos = 0;\r\n        var version:string = readData.readUTFString();\r\n\r\n        \r\n        var boundsMin:Laya.Vector3;\r\n        var boundsMax:Laya.Vector3;\r\n\t\tif(version == \"LAYAMODEL:GPUSkining_06\")\r\n\t\t{\r\n\t\t\tboundsMin = new Laya.Vector3();\r\n\t\t\tboundsMax = new Laya.Vector3();\r\n\r\n\t\t\tboundsMin.x = readData.readFloat32();\r\n\t\t\tboundsMin.y = readData.readFloat32();\r\n\t\t\tboundsMin.z = readData.readFloat32();\r\n\r\n\t\t\t\r\n\t\t\tboundsMax.x = readData.readFloat32();\r\n\t\t\tboundsMax.y = readData.readFloat32();\r\n\t\t\tboundsMax.z = readData.readFloat32();\r\n        }\r\n\r\n        \r\n        switch (version) \r\n        {\r\n            case \"LAYAMODEL:GPUSkining_05\": \r\n            case \"LAYAMODEL:GPUSkining_06\": \r\n                GPUSkiningLoadModelV05.parse(readData, version, mesh, subMeshes);\r\n                break;\r\n            default: \r\n                throw new Error(\"MeshReader: unknown mesh version.\");\r\n        }\r\n\r\n        if(version == \"LAYAMODEL:GPUSkining_06\")\r\n\t\t{\r\n            mesh._needUpdateBounds = false;\r\n            mesh.bounds.setMin(boundsMin);\r\n            mesh.bounds.setMin(boundsMax);\r\n        }\r\n        mesh._setSubMeshes(subMeshes);\r\n    }\r\n}","import { GPUSkiningMeshReader } from \"./GPUSkiningMeshReader\";\r\n\r\nexport default class GPUSkiningMesh extends Laya.Mesh\r\n{\r\n    static _parse(data: any, propertyParams: any = null, constructParams: any[] = null): GPUSkiningMesh \r\n    {\r\n\t\tvar mesh: GPUSkiningMesh = new GPUSkiningMesh();\r\n\t\tGPUSkiningMeshReader.read(<ArrayBuffer>data, mesh, mesh._subMeshes);\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\tstatic LoadAsync(path: string): Promise<GPUSkiningMesh>\r\n\t{\r\n\t\treturn new  Promise<GPUSkiningMesh>((resolve)=>\r\n\t\t{\r\n            this.Load(path, (data: GPUSkiningMesh)=>\r\n            {\r\n                resolve(data);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tstatic Load(path: string, callback:(  (anim: GPUSkiningMesh) => any))\r\n\t{\r\n\t\tLaya.loader.load(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t{\r\n\t\t\tif(data instanceof ArrayBuffer)\r\n\t\t\t{\r\n\t\t\t\tvar mesh = GPUSkiningMesh._parse(data);\r\n\t\t\t\tmesh._url = Laya.URL.formatURL(path);\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\tLaya.Loader.clearRes(path);\r\n\t\t\t\tLaya.Loader.cacheRes(path, mesh);\r\n\t\t\t\tcallback(mesh);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tcallback(data);\r\n\t\t\t}\r\n\r\n\t\t}), null, Laya.Loader.BUFFER);\r\n\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * 销毁资源,销毁后资源不能恢复。\r\n\t */\r\n\tdestroy(): void {\r\n\t\t// console.log(\"destroy GPUSkiningMesh\", this._url);\r\n\t\tsuper.destroy();\r\n\t}\r\n}","\r\nimport Byte = Laya.Byte;\r\nimport Bounds = Laya.Bounds;\r\nimport Vector3 = Laya.Vector3;\r\nimport Quaternion = Laya.Quaternion;\r\n\r\nimport Matrix4x4 = Laya.Matrix4x4;\r\nexport default class ByteReadUtil\r\n{\r\n    \r\n    \r\n    static ReadQuaternion(b:Byte):Quaternion\r\n    {\r\n        var v = new Quaternion();\r\n        v.x = b.readFloat32();\r\n        v.y = b.readFloat32();\r\n        v.z = b.readFloat32();\r\n        v.w = b.readFloat32();\r\n        return v;\r\n    }\r\n    \r\n    static ReadVector3(b:Byte):Vector3\r\n    {\r\n        var v = new Vector3();\r\n        v.x = b.readFloat32() * -1;\r\n        v.y = b.readFloat32();\r\n        v.z = b.readFloat32();\r\n        return v;\r\n    }\r\n\r\n    static ReadBounds(b:Byte):Bounds\r\n    {\r\n        var min = this.ReadVector3(b);\r\n        var max = this.ReadVector3(b);\r\n        var v = new Bounds(min, max);\r\n        return v;\r\n    }\r\n\r\n    \r\n    \r\n    static mm = new Matrix4x4(\r\n\t\t-1.0, 0.0, 0.0, 0.0,\r\n\t\t0.0, 1.0, 0.0, 0.0,\r\n\t\t0.0, 0.0, 1.0, 0.0,\r\n\t\t0.0, 0.0, 0.0, 1.0\r\n    );\r\n    \r\n    static ReadMatrix4x4(b:Byte):Matrix4x4\r\n    {\r\n        var m00 = b.readFloat32();\r\n        var m01 = b.readFloat32();\r\n        var m02 = b.readFloat32();\r\n        var m03 = b.readFloat32();\r\n\r\n        \r\n        var m10 = b.readFloat32();\r\n        var m11 = b.readFloat32();\r\n        var m12 = b.readFloat32();\r\n        var m13 = b.readFloat32();\r\n\r\n        \r\n        var m20 = b.readFloat32();\r\n        var m21 = b.readFloat32();\r\n        var m22 = b.readFloat32();\r\n        var m23 = b.readFloat32();\r\n        \r\n        var m30 = b.readFloat32();\r\n        var m31 = b.readFloat32();\r\n        var m32 = b.readFloat32();\r\n        var m33 = b.readFloat32();\r\n        // var v = new Matrix4x4\r\n        // (\r\n        //     -m00, m01, m02, m03,\r\n        //     -m10, m11, m12, m13,\r\n        //     -m20, m21, m22, m23,\r\n        //     -m30, m31, m32, m33,\r\n        // );\r\n\r\n        \r\n        var v2 = new Matrix4x4\r\n        (\r\n            m00, m01, m02, m03,\r\n            m10, m11, m12, m13,\r\n            m20, m21, m22, m23,\r\n            m30, m31, m32, m33,\r\n        );\r\n\r\n        var v = new Matrix4x4();\r\n\r\n        Matrix4x4.multiply(this.mm, v2, v);\r\n\r\n        return v;\r\n    }\r\n}","import Matrix4x4 = Laya.Matrix4x4;\r\nimport ByteReadUtil from \"./ByteReadUtil\";\r\n/** 烘焙动画--骨骼节点信息 */\r\nexport default class GPUSkinningBone\r\n{\r\n    /** 编号 */\r\n    guid: string;\r\n\r\n    /** 名称 */\r\n    name: string;\r\n\r\n    /** 是否导出 */\r\n    isExposed: boolean;\r\n\r\n    /** 矩阵 */\r\n    bindpose: Matrix4x4;\r\n\r\n    /** 索引 */\r\n    boneIndex: int = -1;\r\n\r\n    /** 父节点索引 */\r\n    parentBoneIndex: int = -1;\r\n\r\n    /** 子节点索引 */\r\n    childrenBonesIndices: int[];\r\n\r\n    /** 是否生成了逆矩阵 */\r\n    private _bindposeInvInit = false;\r\n\r\n    private _bindposeInv: Matrix4x4;\r\n    /** 逆矩阵 */\r\n    public get BindposeInv(): Matrix4x4\r\n    {\r\n        if(!this._bindposeInv)\r\n        {\r\n            this._bindposeInv = new Matrix4x4();\r\n            this.bindpose.invert(this._bindposeInv);\r\n            this._bindposeInvInit = true;\r\n        }\r\n        return this._bindposeInv;\r\n    }\r\n    \r\n    FromBytes(data: ArrayBuffer): void\r\n    {\r\n        var b:Laya.Byte = new Laya.Byte(data);\r\n        this.name = b.readUTFString();\r\n        this.guid = b.readUTFString();\r\n        this.isExposed = b.readByte() != 0;\r\n        this.boneIndex = b.readInt32();\r\n        this.parentBoneIndex = b.readInt32();\r\n        this.bindpose = ByteReadUtil.ReadMatrix4x4(b);\r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer):GPUSkinningBone\r\n    {\r\n        var obj = new GPUSkinningBone();\r\n        obj.FromBytes(data);\r\n        return obj;\r\n    }\r\n\r\n\r\n}","export enum GPUSkinningWrapMode\r\n{\r\n    /** 播放一次 */\r\n    Once,\r\n    /** 循环播放 */\r\n    Loop\r\n}","\r\n/** 烘焙动画--动画剪辑事件 */\r\nexport default class GPUSkinningAnimEvent  \r\n{\r\n    /** 帧索引 */\r\n    frameIndex:int = 0;\r\n\r\n    /** 事件ID */\r\n    eventId:int = 0;\r\n\r\n    /** 比较 */\r\n    CompareTo(other: GPUSkinningAnimEvent): int\r\n    {\r\n        return this.frameIndex > other.frameIndex ? -1 : 1;\r\n    }\r\n\r\n    \r\n    FromBytes(data: ArrayBuffer): void\r\n    {\r\n        var b:Laya.Byte = new Laya.Byte(data);\r\n        this.frameIndex = b.readInt32();\r\n        this.eventId = b.readInt32();\r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer):GPUSkinningAnimEvent\r\n    {\r\n        var obj = new GPUSkinningAnimEvent();\r\n        obj.FromBytes(data);\r\n        return obj;\r\n    }\r\n}","import Matrix4x4 = Laya.Matrix4x4;\r\nimport Quaternion = Laya.Quaternion;\r\nimport ByteReadUtil from \"./ByteReadUtil\";\r\n\r\n/** 烘焙动画--动画剪辑帧数据信息 */\r\nexport default class GPUSkinningFrame\r\n{\r\n    /** 矩阵 */\r\n    matrices: Matrix4x4[];\r\n\r\n    /** 相对根节点偏移--方向  */\r\n    rootMotionDeltaPositionQ: Quaternion;\r\n    \r\n    /** 相对根节点偏移--距离  */\r\n    rootMotionDeltaPositionL: float;\r\n\r\n    /** 相对根节点偏移 */\r\n    rootMotionDeltaRotation: Quaternion;\r\n\r\n    /** 是否根节点初始化逆矩阵 */\r\n    private rootMotionInvInit: boolean = false;\r\n    private rootMotionInv: Matrix4x4;\r\n    /** 根节点逆矩阵 */\r\n    public RootMotionInv(rootBoneIndex: int ):Matrix4x4\r\n    {\r\n        if (!this.rootMotionInvInit)\r\n        {\r\n            let m =  this.matrices[rootBoneIndex];\r\n            this.rootMotionInv = new Matrix4x4();\r\n            m.invert(this.rootMotionInv);\r\n            this.rootMotionInvInit = true;\r\n        }\r\n        return this.rootMotionInv;\r\n    }\r\n\r\n    \r\n    FromBytes(data: ArrayBuffer, rootMotionEnabled:boolean): void\r\n    {\r\n        var b:Laya.Byte = new Laya.Byte(data);\r\n        if(rootMotionEnabled)\r\n        {\r\n            this.rootMotionDeltaPositionL = b.readFloat32();\r\n            this.rootMotionDeltaPositionQ = ByteReadUtil.ReadQuaternion(b);\r\n            this.rootMotionDeltaRotation = ByteReadUtil.ReadQuaternion(b);\r\n        }\r\n\r\n        var matricesCount = b.readUint32();\r\n        this.matrices = [];\r\n        for(var i = 0; i < matricesCount; i ++)\r\n        {\r\n            var m = ByteReadUtil.ReadMatrix4x4(b);\r\n            this.matrices.push(m);\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer, rootMotionEnabled:boolean):GPUSkinningFrame\r\n    {\r\n        var obj = new GPUSkinningFrame();\r\n        obj.FromBytes(data, rootMotionEnabled);\r\n        return obj;\r\n    }\r\n\r\n\r\n\r\n}","import { GPUSkinningWrapMode } from \"./GPUSkinningWrapMode\";\r\nimport GPUSkinningAnimEvent from \"./GPUSkinningAnimEvent\";\r\nimport GPUSkinningFrame from \"./GPUSkinningFrame\";\r\n\r\nimport Byte = Laya.Byte;\r\nimport ByteReadUtil from \"./ByteReadUtil\";\r\n/** 烘焙动画--动画剪辑数据信息 */\r\nexport default class GPUSkinningClip\r\n{\r\n    /** 名称 */\r\n    name: string;\r\n\r\n    /** 时间长度 （单位:秒） */\r\n    length = 0.0;\r\n\r\n    /** 播放帧率 （默认30） */\r\n    fps = 0;\r\n\r\n    /** 播放模式，单次或者循环 */\r\n    wrapMode = GPUSkinningWrapMode.Once;\r\n\r\n    /** 帧数据列表 */\r\n    frames: GPUSkinningFrame[];\r\n\r\n    /** 所在贴图像素起始位置 */\r\n    pixelSegmentation:int = 0;\r\n\r\n    /** 是否动画驱动位移 */\r\n    rootMotionEnabled: boolean = false;\r\n\r\n    /** 多个单位播放动作帧是否差异化 */\r\n    individualDifferenceEnabled: boolean = false;\r\n\r\n    /** 事件列表 */\r\n    events: GPUSkinningAnimEvent[];\r\n\r\n    /** 帧数 */\r\n    frameCount = 0;\r\n    /** 最后一帧 */\r\n    frameLastIndex = 0;\r\n\r\n\r\n    \r\n    FromBytes(data: ArrayBuffer): void\r\n    {\r\n        var b:Byte = new Byte(data);\r\n        b.pos = 0;\r\n        this.name = b.readUTFString();\r\n        // this.name = this.name.toLowerCase();\r\n        this.length = b.readFloat32();\r\n        this.fps = b.readUint32();\r\n        this.wrapMode = b.readInt32();\r\n        this.pixelSegmentation = b.readUint32();\r\n        this.rootMotionEnabled = b.readByte() != 0;\r\n        this.individualDifferenceEnabled = b.readByte() != 0;\r\n\r\n        // 帧列表 数量\r\n        var frameCount = b.readUint32();\r\n        // 事件列表 数量\r\n        var eventCount = b.readUint32();\r\n        \r\n        // 帧列表 头信息\r\n        var framePosLengthList:int[][] = [];\r\n        for(var i = 0; i < frameCount; i ++)\r\n        {\r\n            var info = [];\r\n            info[0] = b.readUint32(); // posBegin\r\n            info[1] = b.readUint32(); // length\r\n            framePosLengthList.push(info);\r\n        }\r\n\r\n        \r\n        // 事件列表 头信息\r\n        var eventPosLengthList:int[][] = [];\r\n        for(var i = 0; i < eventCount; i ++)\r\n        {\r\n            var info = [];\r\n            info[0] = b.readUint32(); // posBegin\r\n            info[1] = b.readUint32(); // length\r\n            eventPosLengthList.push(info);\r\n        }\r\n\r\n        \r\n        // 帧列表 数据块\r\n        var frameList: GPUSkinningFrame[] = [];\r\n        this.frames = frameList;\r\n        for(var i = 0; i < frameCount; i ++)\r\n        {\r\n            var itemInfo:int[] = framePosLengthList[i];\r\n            var pos = itemInfo[0];\r\n            var len = itemInfo[1];\r\n\r\n            b.pos = pos;\r\n            var itemBuffer = b.readArrayBuffer(len);\r\n            var item:any = GPUSkinningFrame.CreateFromBytes(itemBuffer, this.rootMotionEnabled);\r\n            frameList.push(item);\r\n        }\r\n\r\n\r\n        \r\n        // 事件列表 数据块\r\n        var eventList: GPUSkinningAnimEvent[] = [];\r\n        this.events = eventList;\r\n        for(var i = 0; i < eventCount; i ++)\r\n        {\r\n            var itemInfo:int[] = eventPosLengthList[i];\r\n            var pos = itemInfo[0];\r\n            var len = itemInfo[1];\r\n\r\n            b.pos = pos;\r\n            var itemBuffer = b.readArrayBuffer(len);\r\n            var item:any = GPUSkinningAnimEvent.CreateFromBytes(itemBuffer);\r\n            eventList.push(item);\r\n        }\r\n\r\n        this.frameCount = Math.floor(this.length * this.fps);\r\n        this.frameLastIndex = this.frameCount  - 1;\r\n\r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer):GPUSkinningClip\r\n    {\r\n        var obj = new GPUSkinningClip();\r\n        obj.FromBytes(data);\r\n        return obj;\r\n    }\r\n}","export enum GPUSkinningQuality\r\n{\r\n    Bone1,\r\n    Bone2,\r\n    Bone4 \r\n}","import GPUSkinningBone from \"./GPUSkinningBone\";\r\nimport GPUSkinningClip from \"./GPUSkinningClip\";\r\nimport { GPUSkinningQuality } from \"./GPUSkinningQuality\";\r\n\r\nimport Byte = Laya.Byte;\r\nimport ByteReadUtil from \"./ByteReadUtil\";\r\n\r\n/** 烘焙动画--全部数据信息 */\r\nexport default class GPUSkinningAnimation extends Laya.Resource\r\n{\r\n    version:string;\r\n    /** 编号 */\r\n    guid: string;\r\n\r\n    /** 名称 */\r\n    name: string;\r\n\r\n    bonesCount = 67;\r\n\r\n    /** 骨骼列表 */\r\n    bones: GPUSkinningBone[];\r\n\r\n    /** 根骨骼 */\r\n    rootBoneIndex: int = 0;\r\n\r\n    /** 动作列表 */\r\n    clips: GPUSkinningClip[];\r\n\r\n    /** 盒子大小 */\r\n    bounds: Laya.Bounds;\r\n\r\n    /** 动作贴图宽 */\r\n    textureWidth: number = 0;\r\n\r\n    /** 动作贴图高 */\r\n    textureHeight: number = 0;\r\n\r\n    /** lod模式 距离列表 */\r\n    lodDistances: float[];\r\n\r\n    /** lod模式 Mesh列表 */\r\n    lodMeshes: Laya.Mesh[];\r\n    \r\n    /** 裁剪用 CullingBounds */\r\n    sphereRadius: float = 1.0;\r\n\r\n    /** 骨骼品质 */\r\n    skinQuality:GPUSkinningQuality = GPUSkinningQuality.Bone4;\r\n\r\n    FromBytes(arrayBuffer: ArrayBuffer): void\r\n    {\r\n        \r\n        // var b:Byte = new Byte(arrayBuffer);\r\n        // b.pos = 0;\r\n        // var vision = b.readUTFString();\r\n        // var len = b.readUint32();\r\n        // var arrayBuffer = arrayBuffer.slice(b.pos, pos + len);\r\n\r\n        var b:Byte = new Byte(arrayBuffer);\r\n        b.pos = 0;\r\n\r\n        this.guid = b.readUTFString();\r\n        this.name = b.readUTFString();\r\n        this.rootBoneIndex = b.readInt16();\r\n        this.textureWidth = b.readUint32();\r\n        this.textureHeight = b.readUint32();\r\n        this.sphereRadius = b.readFloat32();\r\n        this.skinQuality = <GPUSkinningQuality> b.readInt32();\r\n        this.bonesCount = b.readUint32();\r\n        this.bounds = ByteReadUtil.ReadBounds(b);\r\n\r\n        \r\n        // 剪辑列表 数量\r\n        var clipCount = b.readUint32();\r\n        // 骨骼列表 数量\r\n        var boneCount = b.readUint32();\r\n\r\n\r\n        // 剪辑列表 头信息\r\n        var clipPosLengthList:int[][] = [];\r\n        for(var i = 0; i < clipCount; i ++)\r\n        {\r\n            var info = [];\r\n            info[0] = b.readUint32(); // posBegin\r\n            info[1] = b.readUint32(); // length\r\n            clipPosLengthList.push(info);\r\n        }\r\n\r\n\r\n        // 骨骼列表 头信息\r\n        var bonePosLengthList:int[][] = [];\r\n        for(var i = 0; i < boneCount; i ++)\r\n        {\r\n            var info = [];\r\n            info[0] = b.readUint32(); // posBegin\r\n            info[1] = b.readUint32(); // length\r\n            bonePosLengthList.push(info);\r\n        }\r\n\r\n        \r\n        // 剪辑列表 数据块\r\n        var clipList: GPUSkinningClip[] = [];\r\n        this.clips = clipList;\r\n        for(var i = 0; i < clipCount; i ++)\r\n        {\r\n            var itemInfo:int[] = clipPosLengthList[i];\r\n            var pos = itemInfo[0];\r\n            var len = itemInfo[1];\r\n\r\n            b.pos = pos;\r\n\r\n            var itemBuffer = b.readArrayBuffer(len);\r\n            var item:any = GPUSkinningClip.CreateFromBytes(itemBuffer);\r\n            clipList.push(item);\r\n        }\r\n\r\n        \r\n        // 骨骼列表 数据块\r\n        var boneList: GPUSkinningBone[] = [];\r\n        this.bones = boneList;\r\n        for(var i = 0; i < boneCount; i ++)\r\n        {\r\n            var itemInfo:int[] = bonePosLengthList[i];\r\n            var pos = itemInfo[0];\r\n            var len = itemInfo[1];\r\n\r\n            b.pos = pos;\r\n            b.pos = pos;\r\n            var itemBuffer = b.readArrayBuffer(len);\r\n            var item:any = GPUSkinningBone.CreateFromBytes(itemBuffer);\r\n            boneList.push(item);\r\n        }\r\n\r\n    }\r\n\r\n    static CreateFromBytes(data: ArrayBuffer):GPUSkinningAnimation\r\n    {\r\n        \r\n        var b:Byte = new Byte(data);\r\n        b.pos = 0;\r\n        var version = b.readUTFString();\r\n        var len = b.readUint32();\r\n        var arrayBuffer = b.readArrayBuffer(len);\r\n\r\n        var obj = new GPUSkinningAnimation();\r\n        obj.version = version;\r\n        obj.FromBytes(arrayBuffer);\r\n        return obj;\r\n    }\r\n\r\n\r\n    static async LoadAsync(path: string):Promise<GPUSkinningAnimation>\r\n    {\r\n        return new Promise<GPUSkinningAnimation>((resolve)=>\r\n        {\r\n            this.Load(path, (anim: GPUSkinningAnimation)=>\r\n            {\r\n                resolve(anim);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    \r\n    static Load(path: string, callback:(  (anim: GPUSkinningAnimation) => any)  ):void\r\n    {\r\n        Laya.loader.load(path, Laya.Handler.create(this, (data: ArrayBuffer | GPUSkinningAnimation)=>\r\n        {\r\n\r\n            if(data == null)\r\n            {\r\n                console.error(\"加载资源失败\" , path);\r\n                callback(null);\r\n                return;\r\n            }\r\n            \r\n            var anim: GPUSkinningAnimation;\r\n            if(data instanceof ArrayBuffer)\r\n            {\r\n                anim = GPUSkinningAnimation.CreateFromBytes(data);\r\n                anim._url = Laya.URL.formatURL(path);\r\n                Laya.Loader.clearRes(path);\r\n                Laya.Loader.cacheRes(path, anim);\r\n            }\r\n            else\r\n            {\r\n                anim = data;\r\n            }\r\n\r\n            if(callback)\r\n            {\r\n                callback(anim);\r\n            }\r\n        }), null, Laya.Loader.BUFFER)\r\n    }\r\n\r\n    protected _disposeResource(): void \r\n    {\r\n\t\tsuper._disposeResource();\r\n    }\r\n    \r\n    \r\n\t/**\r\n\t * 销毁资源,销毁后资源不能恢复。\r\n\t */\r\n\tdestroy(): void {\r\n\t\t// console.log(\"destroy GPUSkinningAnimation\", this._url);\r\n\t\tsuper.destroy();\r\n\t}\r\n    \r\n\r\n}","/** 裁剪模式 */\r\nexport enum GPUSKinningCullingMode\r\n{\r\n    /** 总是播放 */\r\n    AlwaysAnimate, \r\n    /**  */\r\n    CullUpdateTransforms, \r\n    /** 裁剪剔除 不播放 */\r\n    CullCompletely\r\n}","export default class GPUSkinningBetterList<T>\r\n{\r\n    public buffer: T[];\r\n    public size:int = 0;\r\n    public bufferIncrement:int = 0;\r\n\r\n    public Get(i:int):T\r\n    {\r\n        return this.buffer[i];\r\n    }\r\n\r\n    public Set(i:int, value:T)\r\n    {\r\n        this.buffer[i] = value;\r\n    }\r\n\r\n    constructor(bufferIncrement: int)\r\n    {\r\n        this.bufferIncrement = Math.max(1, bufferIncrement);\r\n    }\r\n\r\n    private AllocateMore()\r\n    {\r\n        let newList:T[] = (this.buffer != null) \r\n            ? new Array<T>(this.buffer.length + this.bufferIncrement) \r\n            : new Array<T>(this.bufferIncrement);\r\n\r\n        if(this.buffer != null && this.size > 0)\r\n        {\r\n            arrayCopyValue(this.buffer, newList, false);\r\n        }\r\n\r\n        this.buffer = newList;\r\n    }\r\n\r\n    public Clear()\r\n    {\r\n        this.size = 0;\r\n    }\r\n\r\n    public Release()\r\n    {\r\n        this.size = 0;\r\n        this.buffer = null;\r\n    }\r\n\r\n    public Add(item: T)\r\n    {\r\n        if(this.buffer == null || this.size == this.buffer.length)\r\n        {\r\n            this.AllocateMore();\r\n        }\r\n\r\n        this.buffer[this.size ++] = item;\r\n    }\r\n\r\n    public AddRange(items: T[])\r\n    {\r\n        if(items == null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let length = items.length;\r\n        if(length == 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(this.buffer == null)\r\n        {\r\n            this.buffer = new Array<T>(Math.max(this.bufferIncrement, length));\r\n            arrayCopyValue(items, this.buffer, false);\r\n            this.size = length;\r\n        }\r\n        else\r\n        {\r\n            if(this.size + length > this.buffer.length)\r\n            {\r\n                let newList: T[] = new Array<T>(Math.max(this.buffer.length + this.bufferIncrement, this.size + length));\r\n                arrayCopyValue(this.buffer, newList, false);\r\n                this.buffer = newList;\r\n                for(var i = 0; i < length; i ++)\r\n                {\r\n                    this.buffer[this.size + i] = items[i];\r\n                }\r\n            }\r\n            else\r\n            {\r\n                for(var i = 0; i < length; i ++)\r\n                {\r\n                    this.buffer[this.size + i] = items[i];\r\n                }\r\n            }\r\n            this.size += length;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public RemoveAt(index: int)\r\n    {\r\n        if(this.buffer != null && index > -1 && index < this.size)\r\n        {\r\n            this.size --;\r\n            this.buffer[index] = null;\r\n            for(let b = index; b < this.size; ++b)\r\n            {\r\n                this.buffer[b] = this.buffer[b + 1];\r\n            }\r\n\r\n            this.buffer[this.size] = null;\r\n        }\r\n    }\r\n\r\n    /** 删除并返回最右一个值 */\r\n    public Pop():T\r\n    {\r\n        if(this.buffer == null || this.size == 0)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        --this.size;\r\n        let t = this.buffer[this.size];\r\n        this.buffer[this.size] = null;\r\n        return t;\r\n    }\r\n\r\n    /** 返回最后一个值 */\r\n    public Peek():T\r\n    {\r\n        if(this.buffer == null || this.size == 0)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        return this.buffer[this.size - 1];\r\n\r\n    }\r\n\r\n}","/** 一帧只执行一次标记 */\r\nexport default class GPUSkinningExecuteOncePerFrame\r\n{\r\n    private frameCount: int = -1;\r\n\r\n    /** 获取当前帧是否能执行 */\r\n    public CanBeExecute()\r\n    {\r\n        return this.frameCount != Laya.timer.currFrame;\r\n    }\r\n\r\n    /** 标记当前帧已经执行过了 */\r\n    public MarkAsExecuted()\r\n    {\r\n        this.frameCount = Laya.timer.currFrame;\r\n    }\r\n}","import GPUSkinningExecuteOncePerFrame from \"./GPUSkinningExecuteOncePerFrame\";\r\n\r\n/** GPU骨骼动画--材质球 */\r\nexport default class GPUSkinningMaterial\r\n{\r\n    /** 材质 */\r\n    material: Laya.Material;\r\n\r\n    /** 一帧只执行一次标记 */\r\n    executeOncePerFrame: GPUSkinningExecuteOncePerFrame = new GPUSkinningExecuteOncePerFrame();\r\n\r\n    /** 销毁 */\r\n    Destroy()\r\n    {\r\n        if(this.material)\r\n        {\r\n            this.material.destroy();\r\n            this.material = null;\r\n        }\r\n    }\r\n\r\n}","/** 材质状态 */\r\nexport enum MaterialState\r\n{\r\n    RootOn_BlendOff = 0, \r\n    RootOn_BlendOn_CrossFadeRootOn,\r\n    RootOn_BlendOn_CrossFadeRootOff,\r\n    RootOff_BlendOff,\r\n    RootOff_BlendOn_CrossFadeRootOn,\r\n    RootOff_BlendOn_CrossFadeRootOff, \r\n    Count = 6\r\n}","\r\nimport GPUSkinningAnimation from \"./Datas/GPUSkinningAnimation\";\r\nimport GPUSkinningPlayerMono from \"./GPUSkinningPlayerMono\";\r\nimport GPUSkinningBetterList from \"./GPUSkinningBetterList\";\r\nimport GPUSkinningMaterial from \"./GPUSkinningMaterial\";\r\nimport GPUSkinningExecuteOncePerFrame from \"./GPUSkinningExecuteOncePerFrame\";\r\nimport GPUSkinningPlayer from \"./GPUSkinningPlayer\";\r\n\r\nimport Material = Laya.Material;\r\nimport Mesh = Laya.Mesh;\r\nimport Texture2D = Laya.Texture2D;\r\nimport BoundSphere = Laya.BoundSphere;\r\nimport Vector4 = Laya.Vector4;\r\nimport Vector3 = Laya.Vector3;\r\nimport Matrix4x4 = Laya.Matrix4x4;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Shader3D = Laya.Shader3D;\r\n\r\nimport GPUSkinningClip from \"./Datas/GPUSkinningClip\";\r\nimport GPUSkinningFrame from \"./Datas/GPUSkinningFrame\";\r\nimport { MaterialState } from \"./MaterialState\";\r\nimport { GPUSkinningQuality } from \"./Datas/GPUSkinningQuality\";\r\nimport { GPUSkinningBaseMaterial } from \"./Material/GPUSkinningBaseMaterial\";\r\n\r\n\r\n/** GPU骨骼动画--资源 */\r\nexport default class GPUSkinningPlayerResources\r\n{\r\n\r\n    /** 烘焙动画--全部数据信息 */\r\n    public anim: GPUSkinningAnimation  = null;\r\n\r\n    /** 网格 */\r\n    public mesh: Mesh  = null;\r\n\r\n    /** 烘焙动画--贴图数据 */\r\n    public texture: Texture2D;\r\n\r\n    /** 动画播放控制器列表 */\r\n    public players: GPUSkinningPlayerMono[] = [];\r\n\r\n    /** 裁剪组 */\r\n    private cullingGroup:any = null;\r\n\r\n    /** 裁剪列表 <球形包围盒> */\r\n    private cullingBounds: GPUSkinningBetterList<BoundSphere> = new GPUSkinningBetterList<BoundSphere>(100);\r\n\r\n    /** 材质球列表 */\r\n    private mtrls: GPUSkinningMaterial[]  = null;\r\n\r\n    /** 一帧只执行一次标记 */\r\n    private executeOncePerFrame:GPUSkinningExecuteOncePerFrame  = new GPUSkinningExecuteOncePerFrame();\r\n\r\n\r\n\r\n\r\n    private time: float = 0;\r\n    public get Time():float\r\n    {\r\n        return this.time;\r\n    }\r\n\r\n    public set Time(value: float)\r\n    {\r\n        this.time = value;\r\n    }\r\n\r\n    private static keywords: string[]  = [\r\n        \"ROOTON_BLENDOFF\", \"ROOTON_BLENDON_CROSSFADEROOTON\", \"ROOTON_BLENDON_CROSSFADEROOTOFF\",\r\n        \"ROOTOFF_BLENDOFF\", \"ROOTOFF_BLENDON_CROSSFADEROOTON\", \"ROOTOFF_BLENDON_CROSSFADEROOTOFF\" \r\n    ];\r\n\r\n    \r\n    private static keywordDefines: Laya.ShaderDefine[]  = [];\r\n    private static ShaderDefine_SKIN_1: Laya.ShaderDefine;\r\n    private static ShaderDefine_SKIN_2: Laya.ShaderDefine;\r\n    private static ShaderDefine_SKIN_4: Laya.ShaderDefine;\r\n    \r\n\r\n    private static  shaderPropID_GPUSkinning_TextureMatrix : int= -1;\r\n\r\n    private static  shaderPropID_GPUSkinning_TextureSize_NumPixelsPerFrame : int= 0;\r\n\r\n    public static  shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation : int= 0;\r\n\r\n    public static  shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation_Last : int= 0;\r\n\r\n    private static  shaderPropID_GPUSkinning_RootMotion : int= 0;\r\n\r\n    public static  shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade : int= 0;\r\n\r\n    private static  shaderPropID_GPUSkinning_RootMotion_CrossFade : int= 0;\r\n\r\n    private static _isInited: boolean = false;\r\n    static Init()\r\n    {\r\n        if(this._isInited)\r\n            return;\r\n\r\n        this._isInited = true;\r\n\r\n        for(let key of this.keywords)\r\n        {\r\n            this.keywordDefines.push(Shader3D.getDefineByName(key));\r\n        }\r\n\r\n        this.ShaderDefine_SKIN_1 = Shader3D.getDefineByName(\"SKIN_1\");\r\n        this.ShaderDefine_SKIN_2 = Shader3D.getDefineByName(\"SKIN_2\");\r\n        this.ShaderDefine_SKIN_4 = Shader3D.getDefineByName(\"SKIN_4\");\r\n\r\n        this.shaderPropID_GPUSkinning_TextureMatrix = Shader3D.propertyNameToID(\"u_GPUSkinning_TextureMatrix\");\r\n\r\n        this.shaderPropID_GPUSkinning_TextureSize_NumPixelsPerFrame = Shader3D.propertyNameToID(\"u_GPUSkinning_TextureSize_NumPixelsPerFrame\");\r\n        this.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation = Shader3D.propertyNameToID(\"u_GPUSkinning_FrameIndex_PixelSegmentation\");\r\n        this.shaderPropID_GPUSkinning_RootMotion = Shader3D.propertyNameToID(\"u_GPUSkinning_RootMotion\");\r\n        this.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade = Shader3D.propertyNameToID(\"u_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade\");\r\n        this.shaderPropID_GPUSkinning_RootMotion_CrossFade = Shader3D.propertyNameToID(\"u_GPUSkinning_RootMotion_CrossFade\");\r\n\r\n\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        GPUSkinningPlayerResources.Init();\r\n    }\r\n\r\n    /** 销毁 */\r\n    public Destroy()\r\n    {\r\n        \r\n        if(this.anim != null)\r\n        {\r\n            this.anim.destroy();\r\n            this.anim = null;\r\n        }\r\n\r\n        if(this.mesh != null)\r\n        {\r\n            this.mesh.destroy();\r\n            this.mesh = null;\r\n        }\r\n\r\n\r\n        if(this.mtrls != null)\r\n        {\r\n            for(let i = 0; i < this.mtrls.length; i ++)\r\n            {\r\n                this.mtrls[i].Destroy();\r\n                this.mtrls[i] = null;\r\n            }\r\n            this.mtrls = null;\r\n        }\r\n\r\n        if(this.texture != null)\r\n        {\r\n            this.texture.destroy();\r\n            this.texture = null;\r\n        }\r\n\r\n        if(this.players != null)\r\n        {\r\n            this.players.length = 0;\r\n            this.players = null;\r\n        }\r\n\r\n    }\r\n\r\n    /** 添加包围盒 */\r\n    public AddCullingBounds()\r\n    {\r\n        this.cullingBounds.Add(new BoundSphere(new Vector3(0, 0, 0), 0));\r\n    }\r\n\r\n    /** 移除包围盒 */\r\n    public RemoveCullingBounds(index: int )\r\n    {\r\n        this.cullingBounds.RemoveAt(index);\r\n\r\n    }\r\n\r\n    /** 动画播放控制器LOD改变 */\r\n    public LODSettingChanged(player: GPUSkinningPlayer )\r\n    {\r\n        if(player.LODEnabled)\r\n        {\r\n            let players = this.players;\r\n            let numPlayers = players.length;\r\n            for(let i = 0; i < numPlayers; i ++)\r\n            {\r\n                if(players[i].Player == player)\r\n                {\r\n                    let distanceIndex = 0;\r\n                    this.SetLODMeshByDistanceIndex(distanceIndex, players[i].Player);\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\n        else\r\n        {\r\n            player.SetLODMesh(null);\r\n        }\r\n    }\r\n\r\n\r\n    /** 根据距离设置LOD */\r\n    private SetLODMeshByDistanceIndex(index: int , player: GPUSkinningPlayer )\r\n    {\r\n        let lodMesh: Mesh  = null;\r\n        if (index == 0)\r\n        {\r\n            lodMesh = this.mesh;\r\n        }\r\n        else\r\n        {\r\n            let lodMeshes: Mesh[]  = this.anim.lodMeshes;\r\n            lodMesh = lodMeshes == null || lodMeshes.length == 0 ? this.mesh : lodMeshes[Math.min(index - 1, lodMeshes.length - 1)];\r\n            if (lodMesh == null) lodMesh = this.mesh;\r\n        }\r\n        player.SetLODMesh(lodMesh);\r\n    }\r\n\r\n\r\n    /** 更新裁剪 包围盒 */\r\n    private UpdateCullingBounds()\r\n    {\r\n        let numPlayers = this.players.length;\r\n        for (let i = 0; i < numPlayers; ++i)\r\n        {\r\n            let player: GPUSkinningPlayerMono  = this.players[i];\r\n            if(!player.isEnable)\r\n            {\r\n                // console.log(player.anim.name, player.isEnable);\r\n                continue;\r\n            }\r\n            \r\n            if(!player.Player || !player.Player.Position)\r\n            {\r\n                console.error(\"player.Player =null\");\r\n                return;\r\n            }\r\n            let bounds: BoundSphere  = this.cullingBounds.Get(i);\r\n            bounds.center = player.Player.Position;\r\n            bounds.radius = this.anim.sphereRadius;\r\n            this.cullingBounds[i] = bounds;\r\n        }\r\n    }\r\n\r\n    /** 帧更新 */\r\n    public Update(deltaTime: float , mtrl: GPUSkinningMaterial )\r\n    {\r\n        if (this.executeOncePerFrame.CanBeExecute())\r\n        {\r\n            this.executeOncePerFrame.MarkAsExecuted();\r\n            this.time += deltaTime;\r\n            // this.UpdateCullingBounds();\r\n        }\r\n\r\n        if (mtrl.executeOncePerFrame.CanBeExecute())\r\n        {\r\n            let anim = this.anim;\r\n            mtrl.executeOncePerFrame.MarkAsExecuted();\r\n            mtrl.material._shaderValues.setTexture(GPUSkinningPlayerResources.shaderPropID_GPUSkinning_TextureMatrix, this.texture);\r\n            // console.log(\"textureWidth=\", anim.textureWidth, \"textureHeight=\", anim.textureWidth, \"anim.bonesCount * 3=\",anim.bonesCount* 3);\r\n        \r\n            mtrl.material._shaderValues.setVector(GPUSkinningPlayerResources.shaderPropID_GPUSkinning_TextureSize_NumPixelsPerFrame, \r\n                new Vector4(anim.textureWidth, anim.textureHeight, anim.bonesCount * 3 /*treat 3 pixels as a float3x4*/, 0));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /** 更新数据 */\r\n    public UpdatePlayingData( mpb: Laya.ShaderData , spriteShaderData: Laya.ShaderData, \r\n        playingClip: GPUSkinningClip , frameIndex: int ,  \r\n        nextFrameIndex: int ,  nextFrameFade,\r\n        frame: GPUSkinningFrame , rootMotionEnabled: boolean ,\r\n        lastPlayedClip: GPUSkinningClip , frameIndex_crossFade: int , crossFadeTime: float , crossFadeProgress: float )\r\n    {\r\n        // console.log(\"frameIndex=\", frameIndex, \"nextFrameIndex=\", nextFrameIndex, \"nextFrameFade\", nextFrameFade );\r\n        // console.log(spriteShaderData[\"__id\"], playingClip.name,\"frameIndex=\", frameIndex, \"pixelSegmentation\", playingClip.pixelSegmentation);\r\n        spriteShaderData.setVector( GPUSkinningPlayerResources.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation, new Vector4(frameIndex, playingClip.pixelSegmentation, nextFrameIndex, nextFrameFade));\r\n\r\n        if (rootMotionEnabled)\r\n        {\r\n            let rootMotionInv: Matrix4x4  = frame.RootMotionInv(this.anim.rootBoneIndex);\r\n            mpb.setMatrix4x4(GPUSkinningPlayerResources.shaderPropID_GPUSkinning_RootMotion, rootMotionInv);\r\n        }\r\n\r\n        if (this.IsCrossFadeBlending(lastPlayedClip, crossFadeTime, crossFadeProgress))\r\n        {\r\n            if (lastPlayedClip.rootMotionEnabled)\r\n            {\r\n                mpb.setMatrix4x4(GPUSkinningPlayerResources.shaderPropID_GPUSkinning_RootMotion_CrossFade, \r\n                    lastPlayedClip.frames[frameIndex_crossFade].RootMotionInv(this.anim.rootBoneIndex));\r\n            }\r\n            console.log(spriteShaderData[\"__id\"], \"frameIndex_crossFade\",frameIndex_crossFade, \"CrossFadeBlendFactor\", this.CrossFadeBlendFactor(crossFadeProgress, crossFadeTime) ,  playingClip.name,\"frameIndex=\", frameIndex, \"pixelSegmentation\", playingClip.pixelSegmentation);\r\n      \r\n            spriteShaderData.setVector(GPUSkinningPlayerResources.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade,\r\n                new Vector4(frameIndex_crossFade, lastPlayedClip.pixelSegmentation, this.CrossFadeBlendFactor(crossFadeProgress, crossFadeTime)));\r\n        }\r\n    }\r\n\r\n\r\n    /** 动画混合百分比 */\r\n    public CrossFadeBlendFactor(crossFadeProgress: float , crossFadeTime: float ):float\r\n    {\r\n        return Mathf.Clamp01(crossFadeProgress / crossFadeTime);\r\n    }\r\n\r\n    /** 是否是动画混合阶段 */\r\n    public IsCrossFadeBlending(lastPlayedClip: GPUSkinningClip , crossFadeTime: float , crossFadeProgress: float ): boolean\r\n    {\r\n        return lastPlayedClip != null && crossFadeTime > 0 && crossFadeProgress <= crossFadeTime;\r\n    }\r\n\r\n\r\n    /** 获取材质，根据状态 */\r\n    public GetMaterial(state: MaterialState ):GPUSkinningMaterial\r\n    {\r\n        return this.mtrls[state];\r\n    }\r\n\r\n    public InitMaterial(originalMaterial: GPUSkinningBaseMaterial, skinningQuality: GPUSkinningQuality)\r\n    {\r\n        if(this.mtrls != null)\r\n        {\r\n            return;\r\n        }\r\n        // console.log(\"CloneMaterial skinningQuality=\", skinningQuality);\r\n\r\n        let SKILL_N:ShaderDefine;\r\n        switch(skinningQuality)\r\n        {\r\n            case GPUSkinningQuality.Bone1:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_1;\r\n                break;\r\n            case GPUSkinningQuality.Bone2:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_2;\r\n                break;\r\n            case GPUSkinningQuality.Bone4:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_4;\r\n                break;\r\n        }\r\n\r\n        let mtrls = this.mtrls = [];\r\n\r\n        for (let i = 0; i < MaterialState.Count; ++i)\r\n        {\r\n            let materialItem = new GPUSkinningMaterial();\r\n            let material =  materialItem.material = <GPUSkinningBaseMaterial> originalMaterial.clone();\r\n            material.lock = true;\r\n            material.__mname = originalMaterial.__mname + \" \"+ GPUSkinningPlayerResources.keywords[i];\r\n\r\n            mtrls[i] = materialItem;\r\n            \r\n            material.name = GPUSkinningPlayerResources.keywords[i];\r\n           \r\n            material._shaderValues.addDefine(SKILL_N);\r\n\r\n\r\n            // TODO 还未实现\r\n            // material.enableInstancing = true; // enable instancing in Unity 5.6\r\n            this.EnableKeywords(i, materialItem);\r\n\r\n        }\r\n    }\r\n\r\n    CloneMaterial(originalMaterial:GPUSkinningBaseMaterial, skinningQuality: GPUSkinningQuality)\r\n    {\r\n        if(originalMaterial == null)\r\n        {\r\n            console.error(\"GPUSkinningPlayerResources.CloneMaterial originalMaterial=null\");\r\n        }\r\n        // console.log(\"CloneMaterial skinningQuality=\", skinningQuality);\r\n        let material =  <GPUSkinningBaseMaterial> originalMaterial.clone();\r\n        material.__mname = originalMaterial.__mname + \" CloneMaterial\";\r\n        \r\n        let SKILL_N:ShaderDefine;\r\n        switch(skinningQuality)\r\n        {\r\n            case GPUSkinningQuality.Bone1:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_1;\r\n                break;\r\n            case GPUSkinningQuality.Bone2:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_2;\r\n                break;\r\n            case GPUSkinningQuality.Bone4:\r\n                SKILL_N =  GPUSkinningPlayerResources.ShaderDefine_SKIN_4;\r\n                break;\r\n        }\r\n\r\n        \r\n        material._shaderValues.addDefine(SKILL_N);\r\n        material._shaderValues.addDefine(GPUSkinningPlayerResources.keywordDefines[3]);\r\n        return material;\r\n    }\r\n\r\n    private EnableKeywords(ki: int , mtrl: GPUSkinningMaterial )\r\n    {\r\n        for(let i = 0; i < this.mtrls.length; ++i)\r\n        {\r\n            if(i == ki)\r\n            {\r\n                mtrl.material._shaderValues.addDefine(GPUSkinningPlayerResources.keywordDefines[i]);\r\n            }\r\n            else\r\n            {\r\n                mtrl.material._shaderValues.removeDefine(GPUSkinningPlayerResources.keywordDefines[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import GPUSkinningPlayerResources from \"./GPUSkinningPlayerResources\";\r\nimport GPUSkinningAnimation from \"./Datas/GPUSkinningAnimation\";\r\n\r\n\r\nimport Material = Laya.Material;\r\nimport Mesh = Laya.Mesh;\r\nimport Texture2D = Laya.Texture2D;\r\nimport GPUSkinningPlayerMono from \"./GPUSkinningPlayerMono\";\r\n\r\n/** GPU骨骼动画--播放管理器 */\r\nexport default class GPUSkinningPlayerMonoManager\r\n{\r\n    /** GPU骨骼动画--资源 列表 */\r\n    private items:GPUSkinningPlayerResources[] = [];\r\n\r\n    /** 注册 */\r\n    public  Register(anim: GPUSkinningAnimation , mesh: Mesh , originalMtrl:Material , textureRawData: Texture2D , player: GPUSkinningPlayerMono  )\r\n    {\r\n\r\n        if (anim == null || originalMtrl == null || textureRawData == null || player == null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let item: GPUSkinningPlayerResources  = null;\r\n\r\n        let items = this.items;\r\n        let numItems = items.length;\r\n        for(let i = 0; i < numItems; ++i)\r\n        {\r\n            if(items[i].anim.guid == anim.guid)\r\n            {\r\n                item = items[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(item == null)\r\n        {\r\n            item = new GPUSkinningPlayerResources();\r\n            items.push(item);\r\n        }\r\n\r\n        if(item.anim == null)\r\n        {\r\n            item.anim = anim;\r\n        }\r\n\r\n        if(item.mesh == null)\r\n        {\r\n            item.mesh = mesh;\r\n        }\r\n\r\n        item.InitMaterial(<any>originalMtrl, anim.skinQuality);\r\n\r\n        if(item.texture == null)\r\n        {\r\n            item.texture = textureRawData;\r\n        }\r\n\r\n        if (item.players.indexOf(player) == -1)\r\n        {\r\n            item.players.push(player);\r\n            item.AddCullingBounds();\r\n            player.isEnable = true;\r\n        }\r\n\r\n        return item;\r\n    }\r\n\r\n    /** 注销 */\r\n    public Unregister(player: GPUSkinningPlayerMono )\r\n    {\r\n        if(player == null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let items = this.items;\r\n        let numItems = items.length;\r\n        for(let i = 0; i < numItems; ++i)\r\n        {\r\n            let playerIndex = items[i].players.indexOf(player);\r\n            if(playerIndex != -1)\r\n            {\r\n                items[i].players.splice(playerIndex, 1);\r\n                items[i].RemoveCullingBounds(playerIndex);\r\n                player.isEnable = false;\r\n                if(items[i].players.length == 0)\r\n                {\r\n                    items[i].Destroy();\r\n                    items.splice(i, 1)\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    } \r\n}","import GPUSkinningBone from \"./Datas/GPUSkinningBone\";\r\n\r\nexport default class GPUSkinningPlayerJoint extends Laya.Script3D\r\n{\r\n\r\n    bone: GPUSkinningBone;\r\n    index: int = 0;\r\n    BoneIndex:int = 0;\r\n    BoneGUID: string = null;\r\n\r\n    private go: Laya.Sprite3D;\r\n    private transform: Laya.Transform3D;\r\n\r\n\r\n\r\n    public get Transform(): Laya.Transform3D\r\n    {\r\n        return this.transform;\r\n    }\r\n\r\n    public get GameObject(): Laya.Sprite3D\r\n    {\r\n        return this.go;\r\n    }\r\n\r\n\r\n    onAwake()\r\n    {\r\n        this.go = <Laya.Sprite3D> this.owner;\r\n        this.transform = this.go.transform;\r\n    }\r\n\r\n    Init(bone: GPUSkinningBone, index: int, boneIndex: int, boneGUID: string)\r\n    {\r\n        this.bone = bone;\r\n        this.index = index;\r\n        this.BoneIndex = boneIndex;\r\n        this.BoneGUID = boneGUID;\r\n    }\r\n}","import GPUSkinningPlayerResources from \"./GPUSkinningPlayerResources\";\r\nimport GPUSkinningClip from \"./Datas/GPUSkinningClip\";\r\nimport { GPUSKinningCullingMode } from \"./GPUSKinningCullingMode\";\r\nimport GPUSkinningPlayerJoint from \"./GPUSkinningPlayerJoint\";\r\nimport { GPUSkinningWrapMode } from \"./Datas/GPUSkinningWrapMode\";\r\nimport GPUSkinningMaterial from \"./GPUSkinningMaterial\";\r\nimport LayaUtil from \"../LayaExtends/LayaUtil\";\r\nimport GPUSkinningBone from \"./Datas/GPUSkinningBone\";\r\nimport { MaterialState } from \"./MaterialState\";\r\nimport GPUSkinningFrame from \"./Datas/GPUSkinningFrame\";\r\n\r\nimport MeshRenderer = Laya.MeshRenderer;\r\nimport MeshFilter = Laya.MeshFilter;\r\nimport Vector3 = Laya.Vector3;\r\nimport Vector4 = Laya.Vector4;\r\nimport Mesh = Laya.Mesh;\r\nimport Matrix4x4 = Laya.Matrix4x4;\r\nimport Quaternion = Laya.Quaternion;\r\nimport Transform3D = Laya.Transform3D;\r\n\r\n\r\nimport GPUSkinningAnimEvent from \"./Datas/GPUSkinningAnimEvent\";\r\nimport GPUSkining from \"./GPUSkining\";\r\nimport { GPUSkinningUnlitMaterial } from \"./Material/GPUSkinningUnlitMaterial\";\r\n\r\n/** GPU骨骼动画--组件播放控制器 */\r\nexport default class GPUSkinningPlayer\r\n{\r\n    __mname:string;\r\n    private go: Laya.MeshSprite3D;\r\n    private transform: Laya.Transform3D;\r\n    private mr: MeshRenderer;\r\n    private mf: MeshFilter;\r\n    private spriteShaderData: Laya.ShaderData;\r\n\r\n    private time: float = 0;\r\n    private timeDiff: float = 0;\r\n    private crossFadeTime: float = -1;\r\n    private crossFadeProgress: float = 0;\r\n    private lastPlayedTime: float = 0;\r\n    private lastPlayedClip:GPUSkinningClip = null;\r\n    private lastPlayingFrameIndex: int = -1;\r\n    private lastPlayingClip: GPUSkinningClip = null;\r\n    private playingClip: GPUSkinningClip = null;\r\n\r\n\r\n    private nextFrameIndex: int = -1;\r\n    private nextLerpProgress: float = 0;\r\n\r\n\r\n    private res: GPUSkinningPlayerResources = null;\r\n    private rootMotionFrameIndex:int = -1;\r\n\r\n    public speed: float = 1;\r\n    /** 动画事件 */\r\n    sAnimEvent:Typed2Signal<GPUSkinningPlayer, int> = new Typed2Signal<GPUSkinningPlayer, int>();\r\n\r\n    /** 根节点是否驱动位移 */\r\n    private rootMotionEnabled: boolean = false;\r\n    public get RootMotionEnabled(): boolean\r\n    {\r\n        return this.rootMotionEnabled;\r\n    }\r\n\r\n    public set RootMotionEnabled(value: boolean)\r\n    {\r\n        this.rootMotionFrameIndex = -1;\r\n        this.rootMotionEnabled = value;\r\n    }\r\n\r\n\r\n    /** 裁剪模式 */\r\n    private cullingMode: GPUSKinningCullingMode = GPUSKinningCullingMode.CullUpdateTransforms;\r\n    public get CullingMode():GPUSKinningCullingMode\r\n    {\r\n        return this.cullingMode;\r\n    }\r\n\r\n    public set CullingMode(value: GPUSKinningCullingMode)\r\n    {\r\n        this.cullingMode = value;\r\n    }\r\n\r\n    /** 是否显示 */\r\n    private visible: boolean = true;\r\n    public get Visible(): boolean\r\n    {\r\n        return this.visible;\r\n    }\r\n\r\n    public set Visible(value: boolean)\r\n    {\r\n        this.visible = value;\r\n    }\r\n\r\n    /** LOD 模式是否开启 */\r\n    private lodEnabled: boolean = false;\r\n    public get LODEnabled()\r\n    {\r\n        return this.lodEnabled;\r\n    }\r\n\r\n    public set LODEnabled(value: boolean)\r\n    {\r\n        this.lodEnabled = value;\r\n        this.res.LODSettingChanged(this);\r\n    }\r\n\r\n    /** 是否播放 */\r\n    private isPlaying: boolean = false;\r\n    public get IsPlaying(): boolean\r\n    {\r\n        return this.isPlaying;\r\n    }\r\n\r\n    /** 当前播放的动画剪辑名称 */\r\n    public get PlayingClipName():string\r\n    {\r\n        return this.playingClip == null ? null : this.playingClip.name;\r\n    }\r\n\r\n    /** 世界坐标 */\r\n    public get Position():Vector3\r\n    {\r\n        return this.transform == null ? new Vector3() : this.transform.position;\r\n    }\r\n\r\n    /** 局部坐标 */\r\n    public get LocalPosition():Vector3\r\n    {\r\n        return this.transform == null ? new Vector3() : this.transform.localPosition;\r\n    }\r\n\r\n    /** 骨骼列表 */\r\n    private jointMap: Map<string, GPUSkinningPlayerJoint> = new Map<string, GPUSkinningPlayerJoint>();\r\n    private joints: GPUSkinningPlayerJoint[]  = null;\r\n    public get Joints(): GPUSkinningPlayerJoint[]\r\n    {\r\n        return this.joints;\r\n    }\r\n\r\n    /** 播放模式，单次或者循环 */\r\n    public get WrapMode(): GPUSkinningWrapMode\r\n    {\r\n        return this.playingClip == null ? GPUSkinningWrapMode.Once : this.playingClip.wrapMode;\r\n    }\r\n\r\n    /** 动画剪辑时间长度 */\r\n    public get ClipTimeLength(): float\r\n    {\r\n        if(!this.playingClip)\r\n        {\r\n            return 0;\r\n        }\r\n        \r\n        return this.playingClip.length;\r\n    }\r\n\r\n    /** 是否是动作结束帧 */\r\n    public get IsTimeAtTheEndOfLoop(): boolean\r\n    {\r\n        if(this.playingClip == null)\r\n        {\r\n            return false;\r\n        }\r\n        else\r\n        {\r\n            return this.GetFrameIndex() == (Math.floor(this.playingClip.length * this.playingClip.fps) - 1);\r\n        }\r\n\r\n    }\r\n\r\n    /** 播放进度百分比 */\r\n    public get NormalizedTime(): float\r\n    {\r\n        if(this.playingClip == null)\r\n        {\r\n            return 0;\r\n        }\r\n        else\r\n        {\r\n            return this.GetFrameIndex() / (Math.floor(this.playingClip.length * this.playingClip.fps) - 1);\r\n        }\r\n    }\r\n\r\n    public set NormalizedTime(value: float)\r\n    {\r\n        if(this.playingClip != null)\r\n        {\r\n            var v = Mathf.Clamp01(value);\r\n            \r\n            if(this.WrapMode == GPUSkinningWrapMode.Once)\r\n            {\r\n                this.time = v * this.playingClip.length;\r\n            }\r\n            else if(this.WrapMode == GPUSkinningWrapMode.Loop)\r\n            {\r\n                // if(this.playingClip.individualDifferenceEnabled)\r\n                // {\r\n                //     this.res.Time = this.playingClip.length + v * this.playingClip.length - this.timeDiff;\r\n                // }\r\n                // else\r\n                // {\r\n                //     this.res.Time = v * this.playingClip.length;\r\n                // }\r\n                \r\n                this.time = v * this.playingClip.length;\r\n            }\r\n            else\r\n            {\r\n                console.error(`GPUSkinningPlayer.NormalizedTime 未知 播放模式 WrapMode=${this.WrapMode}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 获取当前时间 */\r\n    private GetCurrentTime(): float\r\n    {\r\n        let time = 0;\r\n        switch(this.WrapMode)\r\n        {\r\n            case GPUSkinningWrapMode.Once:\r\n                time = this.time;\r\n                break;\r\n            case GPUSkinningWrapMode.Loop:\r\n                time = this.time;\r\n                // time = this.res.Time + (this.playingClip.individualDifferenceEnabled ? this.timeDiff : 0);\r\n                break;\r\n            default:\r\n                console.error(`GPUSkinningPlayer.GetCurrentTime 未知 播放模式 WrapMode=${this.WrapMode}`);\r\n                break;\r\n        }\r\n\r\n        return time;\r\n    }\r\n\r\n\r\n    __frameIndex:int = 0;\r\n    /** 获取当前帧 */\r\n    private GetFrameIndex(): int\r\n    {\r\n        let time = this.GetCurrentTime();\r\n        if(this.playingClip.length == time)\r\n        {\r\n            return this.GetTheLastFrameIndex_WrapMode_Once(this.playingClip);\r\n        }\r\n        else\r\n        {\r\n            return this.GetFrameIndex_WrapMode_Loop(this.playingClip, time);\r\n        }\r\n    }\r\n\r\n    /** 获取下一帧 */\r\n    private GetNextFrameIndex(currentFrameIndex:int): int\r\n    {\r\n        var frameIndex = currentFrameIndex;\r\n        var frameEnd = Math.floor(this.playingClip.length * this.playingClip.fps) - 1;\r\n        if(frameIndex == frameEnd)\r\n        {\r\n            switch(this.WrapMode)\r\n            {\r\n                case GPUSkinningWrapMode.Once:\r\n                    frameIndex = frameEnd;\r\n                    break;\r\n                case GPUSkinningWrapMode.Loop:\r\n                    frameIndex = 0;\r\n                    break;\r\n                default:\r\n                    console.error(`GPUSkinningPlayer.GetNextFrameIndex 未知 播放模式 WrapMode=${this.WrapMode}`);\r\n                    break;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            frameIndex ++;\r\n        }\r\n        return frameIndex;\r\n\r\n    }\r\n\r\n    /** 获取动画过度帧 */\r\n    private GetCrossFadeFrameIndex(): int\r\n    {\r\n        if(this.lastPlayedClip == null)\r\n        {\r\n            return 0;\r\n        }\r\n\r\n        switch(this.lastPlayedClip.wrapMode)\r\n        {\r\n            case GPUSkinningWrapMode.Once:\r\n                if(this.lastPlayedTime >= this.lastPlayedClip.length)\r\n                {\r\n                    return this.GetTheLastFrameIndex_WrapMode_Once(this.lastPlayedClip);\r\n                }\r\n                else\r\n                {\r\n                    return this.GetFrameIndex_WrapMode_Loop(this.lastPlayedClip, this.lastPlayedTime);\r\n                }\r\n                break;\r\n\r\n            case GPUSkinningWrapMode.Loop:\r\n                return this.GetFrameIndex_WrapMode_Loop(this.lastPlayedClip, this.lastPlayedTime);\r\n                break;\r\n\r\n            default:\r\n                console.error(`GPUSkinningPlayer.GetCrossFadeFrameIndex 未知 播放模式 this.lastPlayedClip.wrapMode=${this.lastPlayedClip.wrapMode}`);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /** 获取动画剪辑最后一帧索引 */\r\n    private GetTheLastFrameIndex_WrapMode_Once(clip: GPUSkinningClip ):int\r\n    {\r\n        return clip.frameLastIndex;\r\n        // return Math.floor(clip.length * clip.fps) - 1;\r\n    }\r\n\r\n    /** 获取动画剪辑帧索引 */\r\n    private  GetFrameIndex_WrapMode_Loop(clip: GPUSkinningClip , time: float ):int\r\n    {\r\n        return Math.floor(time * clip.fps) % Math.floor(clip.length * clip.fps);\r\n    }\r\n\r\n    /** 获取当前材质 */\r\n    private GetCurrentMaterial():GPUSkinningMaterial\r\n    {\r\n        if(this.res == null)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        if(this.playingClip == null)\r\n        {\r\n            return this.res.GetMaterial(MaterialState.RootOff_BlendOff);\r\n        }\r\n\r\n        let res = this.res;\r\n        let playingClip = this.playingClip;\r\n        let lastPlayedClip = this.lastPlayedClip;\r\n        let rootMotionEnabled = this.rootMotionEnabled;\r\n        let crossFadeTime = this.crossFadeTime;\r\n        let crossFadeProgress = this.crossFadeProgress;\r\n\r\n        if(playingClip.rootMotionEnabled && rootMotionEnabled)\r\n        {\r\n            if(res.IsCrossFadeBlending(lastPlayedClip, crossFadeTime, crossFadeProgress))\r\n            {\r\n                if(lastPlayedClip.rootMotionEnabled)\r\n                {\r\n                    return res.GetMaterial(MaterialState.RootOn_BlendOn_CrossFadeRootOn);\r\n                }\r\n                return res.GetMaterial(MaterialState.RootOn_BlendOn_CrossFadeRootOff);\r\n            }\r\n            return res.GetMaterial(MaterialState.RootOn_BlendOff);\r\n        }\r\n\r\n        if(res.IsCrossFadeBlending(lastPlayedClip, crossFadeTime, crossFadeProgress))\r\n        {\r\n            if(lastPlayedClip.rootMotionEnabled)\r\n            {\r\n                return res.GetMaterial(MaterialState.RootOff_BlendOn_CrossFadeRootOn);\r\n            }\r\n            return res.GetMaterial(MaterialState.RootOff_BlendOn_CrossFadeRootOff);\r\n        }\r\n        else\r\n        {\r\n            return res.GetMaterial(MaterialState.RootOff_BlendOff);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /** 设置LOD网格 */\r\n    public SetLODMesh(mesh: Mesh )\r\n    {\r\n        if(!this.LODEnabled)\r\n        {\r\n            mesh = this.res.mesh;\r\n        }\r\n\r\n        if(this.mf != null && this.mf.sharedMesh != mesh)\r\n        {\r\n            this.mf.sharedMesh = mesh;\r\n        }\r\n    }\r\n\r\n    mtrl: GPUSkinningMaterial;\r\n\r\n    static _ShaderUID = 0;\r\n    constructor(go: Laya.MeshSprite3D, res: GPUSkinningPlayerResources)\r\n    {\r\n        this.go = go;\r\n        this.transform = go.transform;\r\n        this.res = res;\r\n\r\n        this.mr = go.meshRenderer;\r\n        this.mf = go.meshFilter;\r\n        this.spriteShaderData = go.meshRenderer._shaderValues;\r\n        go.meshRenderer['__id']  = this.spriteShaderData['__id'] = GPUSkinningPlayer._ShaderUID ++;\r\n\r\n        let mtrl: GPUSkinningMaterial = this.GetCurrentMaterial();\r\n        this.mtrl = mtrl;\r\n        var mtrl2 = new GPUSkinningMaterial();\r\n        mtrl2.material =  res.CloneMaterial(<any>mtrl.material, res.anim.skinQuality)\r\n        mtrl = mtrl2;\r\n        this.mtrl = mtrl2;\r\n        this.mr.sharedMaterial = mtrl == null ? null : mtrl.material;\r\n        this.mf.sharedMesh = res.mesh;\r\n\r\n\r\n\r\n        this.ConstructJoints();\r\n    }\r\n\r\n    \r\n    onDestroy():void\r\n    {\r\n        if( this.mtrl)\r\n        {\r\n            this.mtrl.Destroy();\r\n            this.mtrl = null;\r\n        }\r\n    }\r\n\r\n    /** 构建骨骼节点 */\r\n    private ConstructJoints()\r\n    {\r\n        if(this.joints)\r\n            return;\r\n\r\n\r\n        \r\n        this.jointMap.clear();\r\n        let existingJoints: GPUSkinningPlayerJoint[] = this.go.getComponentsInChildren<GPUSkinningPlayerJoint>(GPUSkinningPlayerJoint);\r\n\r\n        let bones: GPUSkinningBone[] = this.res.anim.bones;\r\n        let numBones = bones == null ? 0 : bones.length;\r\n        for(let i = 0; i < numBones; i ++)\r\n        {\r\n            let bone = bones[i];\r\n            if(!bone.isExposed)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            if(this.joints == null)\r\n            {\r\n                this.joints = [];\r\n            }\r\n\r\n            let joints =  this.joints;\r\n\r\n            // 是否从已经存在的骨骼节点设置了\r\n            let inTheExistingJoints: boolean = false;\r\n\r\n            if(existingJoints != null)\r\n            {\r\n                for(let j = 0; j < existingJoints.length; j ++)\r\n                {\r\n                    let existingJoint = existingJoints[j];\r\n                    if(existingJoint && existingJoint.BoneGUID == bone.guid)\r\n                    {\r\n                        if(existingJoint.index != i)\r\n                        {\r\n                            existingJoint.Init(bone, i, bone.boneIndex, bone.guid);\r\n                        }\r\n\r\n                        existingJoint.GameObject.name = bone.name;\r\n                        joints.push(existingJoint);\r\n                        this.jointMap.set(bone.name, existingJoint);\r\n                        existingJoints[j] = null; \r\n                        inTheExistingJoints = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(!inTheExistingJoints)\r\n            {\r\n                let joinGO = new Laya.Sprite3D(bone.name);\r\n                this.go.addChild(joinGO);\r\n                joinGO.transform.localPosition = new Vector3();\r\n                joinGO.transform.localScale = new Vector3(1, 1, 1);\r\n\r\n                let join:GPUSkinningPlayerJoint = joinGO.addComponent(GPUSkinningPlayerJoint);\r\n                join.onAwake();\r\n                joints.push(join);\r\n                join.Init(bone, i, bone.boneIndex, bone.guid);\r\n                \r\n                this.jointMap.set(bone.name, join);\r\n            }\r\n        }\r\n\r\n        // 清除没用到已经存在的骨骼节点\r\n        this.DeleteInvalidJoints(existingJoints);\r\n\r\n    }\r\n\r\n\r\n    /** 清除没用到已经存在的骨骼节点 */\r\n    private DeleteInvalidJoints(joints: GPUSkinningPlayerJoint[] )\r\n    {\r\n        if(joints)\r\n        {\r\n            for(let i = 0; i < joints.length; i ++)\r\n            {\r\n                let join = joints[i];\r\n                if(!join)\r\n                    continue;\r\n\r\n                let joinGO = <Laya.Sprite3D> join.owner;\r\n                for(let j = joinGO.numChildren -1; j >= 0 ; j --)\r\n                {\r\n                    let child =  <Laya.Sprite3D> joinGO.getChildAt(j);\r\n                    this.go.addChild(child);\r\n                    child.transform.localPosition = new Vector3();\r\n                }\r\n\r\n                joinGO.removeSelf();\r\n                joinGO.destroy();\r\n                if(join.bone)\r\n                {\r\n                    this.jointMap.delete(join.bone.name);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 查找导出的骨骼节点 */\r\n    public FindJoint(boneName: string):GPUSkinningPlayerJoint\r\n    {\r\n        if(this.jointMap.has(boneName))\r\n        {\r\n            return this.jointMap.get(boneName);\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    /** 查找导出的骨骼节点GameObject */\r\n    public FindJointGameObject(boneName: string):Laya.Sprite3D\r\n    {\r\n        var joint = this.FindJoint(boneName);\r\n        if(joint)\r\n        {\r\n            return joint.GameObject;\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public GotoAndStop(clipName:string, nomrmalizeTime : number = 0)\r\n    {\r\n        this.Play(clipName, nomrmalizeTime);\r\n        this.Stop();\r\n    }\r\n\r\n    /** 播放 */\r\n    public Play(clipName:string, nomrmalizeTime : number = 0)\r\n    {\r\n        // clipName = clipName.toUpperCase();\r\n        let clips: GPUSkinningClip[] = this.res.anim.clips;\r\n        let numClips = clips == null ? 0 : clips.length;\r\n\r\n        let playingClip = this.playingClip;\r\n        for(let i = 0; i < numClips; ++i)\r\n        {\r\n            if(clips[i].name == clipName)\r\n            {\r\n                let item = clips[i];\r\n                if(playingClip != item\r\n                    || (playingClip != null && playingClip.wrapMode == GPUSkinningWrapMode.Once && this.IsTimeAtTheEndOfLoop)\r\n                    || (playingClip != null && !this.isPlaying)\r\n                )\r\n                {\r\n                    this.SetNewPlayingClip(item, nomrmalizeTime);\r\n                }\r\n                \r\n                this.time = nomrmalizeTime * item.length;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 播放动作融合 */\r\n    public CrossFade(clipName: string, fadeLength: float, nomrmalizeTime: number = 0)\r\n    {\r\n        this.Play(clipName, nomrmalizeTime);\r\n        return;\r\n\r\n        if(this.playingClip == null)\r\n        {\r\n            this.Play(clipName, nomrmalizeTime);\r\n        }\r\n        else\r\n        {\r\n            let playingClip = this.playingClip;\r\n\r\n            let clips: GPUSkinningClip[] = this.res.anim.clips;\r\n            let numClips = clips == null ? 0 : clips.length;\r\n            for(let i = 0; i < numClips; ++i)\r\n            {\r\n                if(clips[i].name == clipName)\r\n                {\r\n                    let item = clips[i];\r\n\r\n                    if(playingClip != item)\r\n                    {\r\n                        this.crossFadeProgress = nomrmalizeTime;\r\n                        this.crossFadeTime = fadeLength;\r\n                        this.SetNewPlayingClip(item, nomrmalizeTime);\r\n                        return;\r\n                    }\r\n\r\n                    if(\r\n                        (playingClip != null && playingClip.wrapMode == GPUSkinningWrapMode.Once && this.IsTimeAtTheEndOfLoop)\r\n                        || (playingClip != null && !this.isPlaying)\r\n                    )\r\n                    {\r\n                        this.SetNewPlayingClip(item, nomrmalizeTime);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    /** 设置新播放的剪辑 */\r\n    private SetNewPlayingClip(clip: GPUSkinningClip, nomrmalizeTime: number = 0)\r\n    {\r\n        this.lastPlayedClip = this.playingClip;\r\n        this.lastPlayedTime = this.GetCurrentTime();\r\n\r\n        this.isPlaying = true;\r\n        this.playingClip = clip;\r\n        this.rootMotionFrameIndex = -1;\r\n        this.time = nomrmalizeTime * clip.length;\r\n        this.timeDiff = Random.range(0, clip.length);\r\n    }\r\n\r\n\r\n    /** 暂停 */\r\n    public Stop()\r\n    {\r\n        // this.isPlaying = false;\r\n        this.speed = 0;\r\n    }\r\n\r\n    /** 继续播放 */\r\n    public Resume()\r\n    {\r\n        if(this.playingClip != null)\r\n        {\r\n            // this.isPlaying = true;\r\n            this.speed = 1;\r\n        }\r\n    }\r\n\r\n    isRandomPlayClip: boolean = false;\r\n    randomPlayClipI = 0;\r\n\r\n    /** 刷新入口 每帧调用 */\r\n    public Update(timeDelta: float)\r\n    {\r\n        if(!this.isPlaying || this.playingClip == null)\r\n        {\r\n            return;\r\n        }\r\n        timeDelta *= this.speed;\r\n\r\n        if(this.isRandomPlayClip)\r\n        {\r\n            this.randomPlayClipI ++;\r\n            if(this.randomPlayClipI >= Random.range(100, 500))\r\n            {\r\n                this.randomPlayClipI = 0;\r\n                var i = Random.range(0, this.res.anim.clips.length);\r\n                i = Math.floor(i);\r\n                this.Play(this.res.anim.clips[i].name);\r\n            }\r\n        }\r\n\r\n        let currMtrl = this.mtrl;\r\n        // let currMtrl = this.GetCurrentMaterial();\r\n        // if(currMtrl == null)\r\n        // {\r\n        //     return;\r\n        // }\r\n\r\n        // if(this.mr.sharedMaterial != currMtrl.material)\r\n        // {\r\n        //     this.mr.sharedMaterial = currMtrl.material;\r\n        // }\r\n\r\n        let playingClip = this.playingClip;\r\n\r\n        switch(playingClip.wrapMode)\r\n        {\r\n            case GPUSkinningWrapMode.Loop:\r\n                this.UpdateMaterial(timeDelta, currMtrl);\r\n                this.time += timeDelta;\r\n                break;\r\n\r\n            case GPUSkinningWrapMode.Once:\r\n                if(this.time >= playingClip.length)\r\n                {\r\n                    this.time = playingClip.length;\r\n                    this.UpdateMaterial(timeDelta, currMtrl);\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateMaterial(timeDelta, currMtrl);\r\n                    this.time += timeDelta;\r\n                    if(this.time > playingClip.length || this.__frameIndex == this.GetTheLastFrameIndex_WrapMode_Once(this.playingClip))\r\n                    {\r\n                        this.time = playingClip.length;\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                console.error(`GPUSkinningPlayer.Update 未知 播放模式 playingClip.wrapMode=${playingClip.wrapMode}`);\r\n                break;\r\n\r\n        }\r\n\r\n        this.crossFadeProgress += timeDelta;\r\n        this.lastPlayedTime += timeDelta;\r\n\r\n        \r\n        this.lastPlayingClip = this.playingClip;\r\n        this.lastPlayingFrameIndex = this.__frameIndex;\r\n\r\n        this.nextFrameIndex = this.__frameIndex;\r\n        this.nextLerpProgress += timeDelta;\r\n\r\n    }\r\n\r\n    \r\n    \r\n    onRenderUpdate(context: Laya.RenderContext3D, transform: Laya.Transform3D, render:Laya.MeshRenderer)\r\n    {\r\n        console.log(render['__id'], \"onRenderUpdate\");\r\n        // render._shaderValues.setVector( GPUSkinningPlayerResources.shaderPorpID_GPUSkinning_FrameIndex_PixelSegmentation, new Vector4(this.__frameIndex, this.playingClip.pixelSegmentation, 0, 0));\r\n\r\n    }\r\n\r\n\r\n\r\n    private UpdateMaterial(deltaTime: float , currMtrl: GPUSkinningMaterial )\r\n    {\r\n        let res = this.res;\r\n        let frameIndex = this.GetFrameIndex();\r\n        this.__frameIndex = frameIndex;\r\n        if(this.speed == 0)\r\n        {\r\n            this.nextFrameIndex = this.__frameIndex;\r\n        }\r\n        else\r\n        {\r\n            this.nextFrameIndex = this.GetNextFrameIndex(frameIndex);\r\n        }\r\n        \r\n        if(this.lastPlayingClip == this.playingClip && this.lastPlayingFrameIndex == frameIndex)\r\n        {\r\n            // res.Update(deltaTime, currMtrl);\r\n            // return;\r\n        }\r\n        else\r\n        {\r\n            this.nextLerpProgress = 0;\r\n        }\r\n\r\n\r\n\r\n        let lastPlayedClip = this.lastPlayingClip;\r\n        let playingClip = this.playingClip;\r\n\r\n        let blend_crossFade:float = 1;\r\n        let frameIndex_crossFade:int = -1;\r\n        let frame_crossFade: GPUSkinningFrame  = null;\r\n        if (res.IsCrossFadeBlending(lastPlayedClip, this.crossFadeTime, this.crossFadeProgress))\r\n        {\r\n            frameIndex_crossFade = this.GetCrossFadeFrameIndex();\r\n            frame_crossFade = lastPlayedClip.frames[frameIndex_crossFade];\r\n            blend_crossFade = res.CrossFadeBlendFactor(this.crossFadeProgress, this.crossFadeTime);\r\n        }\r\n\r\n        let nextFrameFade = res.CrossFadeBlendFactor(this.nextLerpProgress, playingClip.fps * 0.001);\r\n        // if(nextFrameFade != 0)\r\n        // {\r\n        //     nextFrameFade = 0.5;\r\n        // }\r\n\r\n        var mpb = currMtrl.material._shaderValues;\r\n\r\n        let frame: GPUSkinningFrame = playingClip.frames[frameIndex];\r\n        if (this.Visible || \r\n            this.CullingMode == GPUSKinningCullingMode.AlwaysAnimate)\r\n        {\r\n            res.Update(deltaTime, currMtrl);\r\n            res.UpdatePlayingData(\r\n                mpb, this.spriteShaderData, \r\n                playingClip, frameIndex, \r\n                this.nextFrameIndex, nextFrameFade,\r\n                frame,  playingClip.rootMotionEnabled && this.rootMotionEnabled,\r\n                lastPlayedClip, this.GetCrossFadeFrameIndex(), this.crossFadeTime, this.crossFadeProgress\r\n            );\r\n\r\n            // this.mr.SetPropertyBlock(mpb);\r\n            this.UpdateJoints(frame);\r\n        }\r\n\r\n        if (playingClip.rootMotionEnabled && this.rootMotionEnabled && frameIndex != this.rootMotionFrameIndex)\r\n        {\r\n            if (this.CullingMode != GPUSKinningCullingMode.CullCompletely)\r\n            {\r\n                this.rootMotionFrameIndex = frameIndex;\r\n                this.DoRootMotion(frame_crossFade, 1 - blend_crossFade, false);\r\n                this.DoRootMotion(frame, blend_crossFade, true);\r\n            }\r\n        }\r\n        \r\n\r\n        this.UpdateEvents(playingClip, frameIndex, frame_crossFade == null ? null : lastPlayedClip, frameIndex_crossFade);\r\n\r\n    }\r\n\r\n\r\n    /** 刷新骨骼节点位置 */\r\n    private UpdateJoints(frame: GPUSkinningFrame )\r\n    {\r\n        if(this.joints == null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let res = this.res;\r\n        let joints = this.joints;\r\n        let playingClip = this.playingClip;\r\n\r\n        let matrices: Matrix4x4[]  = frame.matrices;\r\n        let bones: GPUSkinningBone[]  = res.anim.bones;\r\n        let numJoints:int  = joints.length;\r\n        for(let i = 0; i < numJoints; ++i)\r\n        {\r\n            let joint: GPUSkinningPlayerJoint  = joints[i];\r\n            let jointTransform: Transform3D  = joint.Transform;\r\n            if (jointTransform != null)\r\n            {\r\n                // TODO: Update Joint when Animation Blend\r\n                var jointMatrix: Matrix4x4 = new Matrix4x4();\r\n\r\n                Matrix4x4.multiply(frame.matrices[joint.index], bones[joint.index].BindposeInv, jointMatrix);\r\n                if(playingClip.rootMotionEnabled && this.rootMotionEnabled)\r\n                {\r\n                    let outM: Matrix4x4 = new Matrix4x4();\r\n                    Matrix4x4.multiply( frame.RootMotionInv(res.anim.rootBoneIndex), jointMatrix, outM);\r\n                    jointMatrix = outM;\r\n                }\r\n\r\n                jointTransform.localMatrix = jointMatrix;\r\n\r\n\r\n                // var vec3 = new Vector3();\r\n                // jointMatrix.getTranslationVector(vec3);\r\n                // jointTransform.localPosition = vec3;\r\n\r\n                // vec3 = new Vector3();\r\n\r\n                // jointMatrix.getForward(vec3);\r\n\r\n                // var vec3_2 = new Vector3();\r\n                // Quaternion.angleTo(new Vector3(0, 0, 0), vec3, vec3_2);\r\n\r\n                // jointTransform.localRotationEuler = vec3_2;\r\n                // console.log(\"localPosition=\", jointTransform.localPosition, \" localRotationEuler=\", jointTransform.localRotationEuler);\r\n            }\r\n            else\r\n            {\r\n                joints.splice(i, 1);\r\n                --i;\r\n                --numJoints;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /** 设置根节点位置和旋转 */\r\n    private DoRootMotion(frame: GPUSkinningFrame , blend: float , doRotate: boolean )\r\n    {\r\n        // TODO 占时没实现\r\n        // if(frame == null)\r\n        // {\r\n        //     return;\r\n        // }\r\n\r\n        // Quaternion deltaRotation = frame.rootMotionDeltaPositionQ;\r\n        // Vector3 newForward = deltaRotation * transform.forward;\r\n        // Vector3 deltaPosition = newForward * frame.rootMotionDeltaPositionL * blend;\r\n        // transform.Translate(deltaPosition, Space.World);\r\n\r\n        // if (doRotate)\r\n        // {\r\n        //     transform.rotation *= frame.rootMotionDeltaRotation;\r\n        // }\r\n    }\r\n\r\n\r\n    /** 刷新事件 */\r\n    private UpdateEvents(playingClip: GPUSkinningClip , playingFrameIndex:int , corssFadeClip: GPUSkinningClip , crossFadeFrameIndex:int )\r\n    {\r\n        this.UpdateClipEvent(playingClip, playingFrameIndex);\r\n        this.UpdateClipEvent(corssFadeClip, crossFadeFrameIndex);\r\n    }\r\n\r\n\r\n    /** 刷新剪辑事件 */\r\n    private UpdateClipEvent(clip: GPUSkinningClip , frameIndex:int )\r\n    {\r\n        if(clip == null || clip.events == null || clip.events.length == 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let events: GPUSkinningAnimEvent[]  = clip.events;\r\n        let numEvents:int  = events.length;\r\n        for(let i = 0; i < numEvents; ++i)\r\n        {\r\n            if(events[i].frameIndex == frameIndex)\r\n            {\r\n                this.sAnimEvent.dispatch(this, events[i].eventId);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import GPUSkinningAnimation from \"./Datas/GPUSkinningAnimation\";\r\nimport { GPUSKinningCullingMode } from \"./GPUSKinningCullingMode\";\r\nimport GPUSkinningPlayerMonoManager from \"./GPUSkinningPlayerMonoManager\";\r\nimport GPUSkinningPlayer from \"./GPUSkinningPlayer\";\r\nimport Mesh = Laya.Mesh;\r\nimport Material = Laya.Material;\r\nimport Texture2D = Laya.Texture2D;\r\nimport GPUSkinningPlayerResources from \"./GPUSkinningPlayerResources\";\r\nimport GPUSkining from \"./GPUSkining\";\r\n\r\n\r\n/** GPU骨骼动画--组件 */\r\nexport default class GPUSkinningPlayerMono extends Laya.Script3D\r\n{\r\n    isEnable: boolean = false;\r\n    /** 烘焙动画--全部数据信息 */\r\n    anim: GPUSkinningAnimation;\r\n\r\n    /** 网格 */\r\n    mesh: Mesh;\r\n    \r\n    /** 材质 */\r\n    mtrl: Material;\r\n\r\n    /** 烘焙动画--贴图数据 */\r\n    textureRawData: Texture2D;\r\n\r\n    /** 默认播放动画剪辑 */\r\n    defaultPlayingClipIndex:int = 0;\r\n\r\n    /** 根节点是否驱动位移 */\r\n    rootMotionEnabled: boolean = false;\r\n\r\n    /** LOD 模式是否开启 */\r\n    lodEnabled: boolean = true;\r\n\r\n    /** 裁剪模式 */\r\n    cullingMode: GPUSKinningCullingMode = GPUSKinningCullingMode.CullUpdateTransforms;\r\n\r\n    /** 播放管理器 */\r\n    static playerManager: GPUSkinningPlayerMonoManager = new GPUSkinningPlayerMonoManager();\r\n\r\n    /** 播放控制器 */\r\n    private player: GPUSkinningPlayer;\r\n    public get Player(): GPUSkinningPlayer\r\n    {\r\n        return this.player;\r\n    }\r\n\r\n    /** 查找导出的骨骼节点GameObject */\r\n    public FindJointGameObject(boneName: string):Laya.Sprite3D\r\n    {\r\n        if(this.player)\r\n        {\r\n            return this.player.FindJointGameObject(boneName);\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    gameObject: Laya.MeshSprite3D;\r\n\r\n    _cloneTo(dest: GPUSkinningPlayerMono): void \r\n    {\r\n        dest.anim = this.anim;\r\n        dest.mesh = this.mesh;\r\n        dest.mtrl = this.mtrl;\r\n        dest.textureRawData = this.textureRawData;\r\n        dest.Init();\r\n\r\n        if(dest.anim.name == \"Monster_2012_Laohu_Skin1\")\r\n        {\r\n            console.log(\"GPUSkinningPlayerMono _cloneTo\", dest.anim.name);\r\n        }\r\n        \r\n        if(dest.player )\r\n        {\r\n            if(dest.player.__mname)\r\n            {\r\n                console.warn(dest.player.__mname);\r\n            }\r\n            else\r\n            {\r\n                dest.player.__mname = dest.anim.name + \" _cloneTo Set\";\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 创建后只执行一次\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onAwake():void\r\n    {\r\n\r\n        // console.log(\"onAwake\");\r\n    }\r\n\r\n    /**\r\n     * 每次启动后执行\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onEnable():void\r\n    {\r\n        // console.log(\"onEnable\");\r\n        var preHasPlayer = this.player != null;\r\n        this.Init();\r\n\r\n        \r\n        if(!preHasPlayer  && this.player )\r\n        {\r\n            if(this.player.__mname)\r\n            {\r\n                console.warn(this.player.__mname);\r\n            }\r\n            else\r\n            {\r\n                this.player.__mname = this.anim.name + \" onEnable Set\";\r\n            }\r\n        }\r\n\r\n        this.isEnable = true;\r\n    }\r\n\r\n\r\n    onStart():void\r\n    {\r\n        // console.log(\"onStart\");\r\n    }\r\n\r\n    \r\n    onUpdate():void\r\n    {\r\n        if(GPUSkining.IsPauseAll)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        if(this.player != null)\r\n        {\r\n            this.player.Update(Laya.timer.delta / 1000 );\r\n        }\r\n    }\r\n\r\n    /**\r\n\t * 渲染之前执行\r\n\t * 此方法为虚方法，使用时重写覆盖即可\r\n\t */\r\n    onPreRender(): void \r\n    {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 禁用时执行\r\n\t * 此方法为虚方法，使用时重写覆盖即可\r\n\t */\r\n\tonDisable(): void {\r\n\r\n        // console.log(\"onDisable\");\r\n        this.isEnable = false;\r\n\t}\r\n\r\n    \r\n    onDestroy():void\r\n    {\r\n\r\n        // console.log(\"onDestroy\");\r\n        GPUSkinningPlayerMono.playerManager.Unregister(this);\r\n        this.anim = null;\r\n        this.mesh = null;\r\n        this.mtrl = null;\r\n        this.textureRawData = null;\r\n\r\n        if(this.player)\r\n        {\r\n            this.player.onDestroy();\r\n            this.player = null;\r\n        }\r\n        \r\n    }\r\n\r\n    public SetData(anim: GPUSkinningAnimation, mesh: Mesh, mtrl: Material, textureRawData: Texture2D)\r\n    {\r\n        if(this.player != null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.anim = anim;\r\n        this.mesh = mesh;\r\n        this.mtrl = mtrl;\r\n        this.textureRawData = textureRawData;\r\n        this.Init();\r\n\r\n        if(this.player )\r\n        {\r\n            if(this.player.__mname)\r\n            {\r\n                console.warn(this.player.__mname);\r\n            }\r\n            else\r\n            {\r\n                this.player.__mname = anim.name + \" SetData Set\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Init()\r\n    {\r\n        this.gameObject = <Laya.MeshSprite3D> this.owner;\r\n\r\n\r\n        if(this.player != null)\r\n        {\r\n            return;\r\n        }\r\n        // this.initRender(this.gameObject.meshRenderer);\r\n\r\n        \r\n        let anim = this.anim;\r\n        let mesh = this.mesh;\r\n        let mtrl = this.mtrl;\r\n        let textureRawData = this.textureRawData;\r\n\r\n\r\n        if(anim != null && mesh != null && mtrl != null && textureRawData != null)\r\n        {\r\n            let res: GPUSkinningPlayerResources = GPUSkinningPlayerMono.playerManager.Register(anim, mesh, mtrl, textureRawData, this);\r\n\r\n            let player = new GPUSkinningPlayer(this.gameObject, res);\r\n            player.RootMotionEnabled = this.rootMotionEnabled;\r\n            player.LODEnabled = this.lodEnabled;\r\n            player.CullingMode = this.cullingMode;\r\n            this.player = player;\r\n\r\n            if (anim != null && anim.clips != null && anim.clips.length > 0)\r\n            {\r\n                player.Play(anim.clips[Mathf.clamp(this.defaultPlayingClipIndex, 0, anim.clips.length)].name);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initRender(renderer:Laya.MeshRenderer)\r\n    {\r\n        var r:any = renderer;\r\n        if(!r._renderUpdate__MeshRenderer__Source)\r\n        {\r\n            r._renderUpdate__MeshRenderer__Source = r._renderUpdate;\r\n        }\r\n\r\n        r._renderUpdate = this._renderUpdate;\r\n        r.onRenderUpdate = this.onRenderUpdate.bind(this);\r\n\r\n    }\r\n\r\n    onRenderUpdate(context: Laya.RenderContext3D, transform: Laya.Transform3D, render:Laya.MeshRenderer)\r\n    {\r\n        if(this.player != null)\r\n        {\r\n            this.player.onRenderUpdate(context, transform, render);\r\n        }\r\n    }\r\n\r\n    _renderUpdate(context: Laya.RenderContext3D, transform: Laya.Transform3D): void \r\n    {\r\n        this.onRenderUpdate(context, transform, <any>this);\r\n        this._renderUpdate__MeshRenderer__Source(context, transform);\r\n        \r\n    }\r\n    \r\n    _renderUpdate__MeshRenderer__Source(context: Laya.RenderContext3D, transform: Laya.Transform3D): void \r\n    {\r\n        \r\n    }\r\n\r\n}","import Shader3D = Laya.Shader3D;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\n\r\n\r\nexport class GPUSkinningBaseMaterial extends Laya.Material\r\n{\r\n    static SHADER_PATH_ROOT = \"res/shaders/GPUSkinning/\";\r\n    \r\n    // 获取--Shader路径--vs\r\n    static getShaderVS(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".vs\";\r\n    }\r\n\r\n    // 获取--Shader路径--ps\r\n    static getShaderPS(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".fs\";\r\n    }\r\n\r\n    \r\n    // 获取--Shader路径--glsl\r\n    static getShaderGLSL(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".glsl\";\r\n    }\r\n\r\n    \r\n    // 加载Shader\r\n    static async loadShaderGlslAsync(filename: string): Promise<string>\r\n    {\r\n        let code = await this.loadAsync(this.getShaderGLSL(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n    \r\n    // 加载Shader\r\n    static async loadShaderVSAsync(filename: string): Promise<string>\r\n    {\r\n        let code = await this.loadAsync(this.getShaderVS(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n\r\n    // 加载Shader\r\n    static async loadShaderPSAsync(filename: string): Promise<string>\r\n    {\r\n        let code =  await this.loadAsync(this.getShaderPS(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n\r\n    \r\n    // 加载资源, 异步\r\n    static async loadAsync(path: string, type: string): Promise<any>\r\n    {\r\n        return new Promise<any>((resolve)=>\r\n        {\r\n            Laya.loader.load(path, \r\n                Laya.Handler.create(null, (res: any) =>\r\n                {\r\n                    resolve(res);\r\n                }), \r\n                null, type);\r\n         });\r\n    }\r\n\r\n    \r\n    static GPUSKINING_MATRIX_TEXTURE: number = Shader3D.propertyNameToID(\"u_GPUSkinning_TextureMatrix\");\r\n    \r\n\tstatic SHADERDEFINE_GPUSKINING_MATRIX_TEXTURE: ShaderDefine;\r\n\r\n    static __initDefine__(): void {\r\n\t\tthis.SHADERDEFINE_GPUSKINING_MATRIX_TEXTURE = Shader3D.getDefineByName(\"GPUSKINING_MATRIX_TEXTURE\");\r\n\t}\r\n    \r\n\t/**\r\n\t * 骨骼动画贴图。\r\n\t */\r\n    get GPUSkinning_TextureMatrix(): BaseTexture \r\n    {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningBaseMaterial.GPUSKINING_MATRIX_TEXTURE);\r\n\t}\r\n\r\n    set GPUSkinning_TextureMatrix(value: BaseTexture) \r\n    {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningBaseMaterial.SHADERDEFINE_GPUSKINING_MATRIX_TEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningBaseMaterial.SHADERDEFINE_GPUSKINING_MATRIX_TEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningBaseMaterial.GPUSKINING_MATRIX_TEXTURE, value);\r\n    }\r\n    \r\n    __mname:string;\r\n\r\n\r\n}","\r\nimport Shader3D = Laya.Shader3D;\r\nimport SubShader = Laya.SubShader;\r\nimport SkinnedMeshSprite3D = Laya.SkinnedMeshSprite3D;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\nimport RenderState = Laya.RenderState;\r\nimport Scene3DShaderDeclaration = Laya.Scene3DShaderDeclaration;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport Material = Laya.Material;\r\nimport { GPUSkinningBaseMaterial } from \"./GPUSkinningBaseMaterial\";\r\nimport GPUSkiningVertexMesh from \"../Mesh/GPUSkiningVertexMesh\";\r\n\r\n\r\n\r\nexport class GPUSkinningUnlitMaterial extends GPUSkinningBaseMaterial\r\n{\r\n    \r\n    /** Shader名称 */\r\n    public static shaderName = \"GPUSkinningUnlit\";\r\n\r\n\tprivate static _isInstalled: boolean = false;\r\n    public static async install()\r\n    {\r\n\t\tif(this._isInstalled)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isInstalled = true;\r\n        GPUSkinningUnlitMaterial.__initDefine__();\r\n        await GPUSkinningUnlitMaterial.initShader();\r\n\r\n        GPUSkinningUnlitMaterial.defaultMaterial = new GPUSkinningUnlitMaterial();\r\n        GPUSkinningUnlitMaterial.defaultMaterial.lock = true;\r\n    }\r\n\r\n    private static async initShader()\r\n    {\r\n        var vs: string = await GPUSkinningUnlitMaterial.loadShaderVSAsync(GPUSkinningUnlitMaterial.shaderName);\r\n        var ps: string = await GPUSkinningUnlitMaterial.loadShaderPSAsync(GPUSkinningUnlitMaterial.shaderName);\r\n        \r\n        \r\n        var attributeMap: object;\r\n        var uniformMap: object;\r\n        var stateMap: object;\r\n        var shader:Shader3D;\r\n        var subShader:SubShader;\r\n\r\n        attributeMap = \r\n        {\r\n\t\t\t'a_Position': VertexMesh.MESH_POSITION0,\r\n\t\t\t'a_Color': VertexMesh.MESH_COLOR0,\r\n\t\t\t'a_Texcoord0': VertexMesh.MESH_TEXTURECOORDINATE0,\r\n\t\t\t'a_Texcoord1': VertexMesh.MESH_TEXTURECOORDINATE1,\r\n\t\t\t'a_Texcoord2': GPUSkiningVertexMesh.MESH_TEXTURECOORDINATE2,\r\n\t\t\t'a_MvpMatrix': VertexMesh.MESH_MVPMATRIX_ROW0\r\n\t\t};\r\n\r\n        uniformMap = \r\n        {\r\n\t\t\t'u_GPUSkinning_TextureMatrix': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_TextureSize_NumPixelsPerFrame': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t'u_GPUSkinning_RootMotion': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_RootMotion_CrossFade': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation': Shader3D.PERIOD_SPRITE,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade': Shader3D.PERIOD_SPRITE,\r\n\t\t\t\r\n\t\t\t'u_AlbedoTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlbedoColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_TilingOffset': Shader3D.PERIOD_MATERIAL,\r\n            'u_AlphaTestValue': Shader3D.PERIOD_MATERIAL,\r\n            \r\n            'u_MvpMatrix': Shader3D.PERIOD_SPRITE,\r\n            \r\n\t\t\t'u_FogStart': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogRange': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogColor': Shader3D.PERIOD_SCENE\r\n\t\t};\r\n\r\n        stateMap = \r\n        {\r\n\t\t\t's_Cull': Shader3D.RENDER_STATE_CULL,\r\n\t\t\t's_Blend': Shader3D.RENDER_STATE_BLEND,\r\n\t\t\t's_BlendSrc': Shader3D.RENDER_STATE_BLEND_SRC,\r\n\t\t\t's_BlendDst': Shader3D.RENDER_STATE_BLEND_DST,\r\n\t\t\t's_DepthTest': Shader3D.RENDER_STATE_DEPTH_TEST,\r\n\t\t\t's_DepthWrite': Shader3D.RENDER_STATE_DEPTH_WRITE\r\n\t\t};\r\n\r\n        \r\n        shader = Shader3D.add(GPUSkinningUnlitMaterial.shaderName, null, null, true);\r\n        subShader =  new SubShader(attributeMap, uniformMap);\r\n        shader.addSubShader(subShader);\r\n        \r\n\r\n        var mainPass =  subShader.addShaderPass(vs, ps, stateMap);\r\n        // mainPass.renderState.cull = Laya.RenderState.CULL_BACK;\r\n        \r\n        \r\n    }\r\n\r\n\t\r\n\t/**渲染状态_不透明。*/\r\n\tstatic RENDERMODE_OPAQUE: number = 0;\r\n\t/**渲染状态_阿尔法测试。*/\r\n\tstatic RENDERMODE_CUTOUT: number = 1;\r\n\t/**渲染状态__透明混合。*/\r\n\tstatic RENDERMODE_TRANSPARENT: number = 2;\r\n\t/**渲染状态__加色法混合。*/\r\n\tstatic RENDERMODE_ADDTIVE: number = 3;\r\n\r\n\tstatic SHADERDEFINE_ALBEDOTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_TILINGOFFSET: ShaderDefine;\r\n\tstatic SHADERDEFINE_ENABLEVERTEXCOLOR: ShaderDefine;\r\n\r\n\tstatic ALBEDOTEXTURE: number = Shader3D.propertyNameToID(\"u_AlbedoTexture\");\r\n\tstatic ALBEDOCOLOR: number = Shader3D.propertyNameToID(\"u_AlbedoColor\");\r\n\tstatic TILINGOFFSET: number = Shader3D.propertyNameToID(\"u_TilingOffset\");\r\n\tstatic CULL: number = Shader3D.propertyNameToID(\"s_Cull\");\r\n\tstatic BLEND: number = Shader3D.propertyNameToID(\"s_Blend\");\r\n\tstatic BLEND_SRC: number = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n\tstatic BLEND_DST: number = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n\tstatic DEPTH_TEST: number = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n\tstatic DEPTH_WRITE: number = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n\r\n\t/** 默认材质，禁止修改*/\r\n\tstatic defaultMaterial: GPUSkinningUnlitMaterial;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __initDefine__(): void {\r\n\t\tGPUSkinningUnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE = Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\r\n\t\tGPUSkinningUnlitMaterial.SHADERDEFINE_TILINGOFFSET = Shader3D.getDefineByName(\"TILINGOFFSET\");\r\n\t\tGPUSkinningUnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\r\n\t}\r\n\r\n\tprivate _albedoColor: Vector4 = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\tprivate _albedoIntensity: number = 1.0;\r\n\tprivate _enableVertexColor: boolean = false;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorR(): number {\r\n\t\treturn this._albedoColor.x;\r\n\t}\r\n\r\n\tset _ColorR(value: number) {\r\n\t\tthis._albedoColor.x = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorG(): number {\r\n\t\treturn this._albedoColor.y;\r\n\t}\r\n\r\n\tset _ColorG(value: number) {\r\n\t\tthis._albedoColor.y = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorB(): number {\r\n\t\treturn this._albedoColor.z;\r\n\t}\r\n\r\n\tset _ColorB(value: number) {\r\n\t\tthis._albedoColor.z = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal \r\n\t */\r\n\tget _ColorA(): number {\r\n\t\treturn this._albedoColor.w;\r\n\t}\r\n\r\n\tset _ColorA(value: number) {\r\n\t\tthis._albedoColor.w = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _AlbedoIntensity(): number {\r\n\t\treturn this._albedoIntensity;\r\n\t}\r\n\r\n\tset _AlbedoIntensity(value: number) {\r\n\t\tif (this._albedoIntensity !== value) {\r\n\t\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningUnlitMaterial.ALBEDOCOLOR));\r\n\t\t\tVector4.scale(this._albedoColor, value, finalAlbedo);\r\n\t\t\tthis._albedoIntensity = value;\r\n\t\t\tthis._shaderValues.setVector(GPUSkinningUnlitMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STX(): number {\r\n\t\treturn this._shaderValues.getVector(GPUSkinningUnlitMaterial.TILINGOFFSET).x;\r\n\t}\r\n\r\n\tset _MainTex_STX(x: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningUnlitMaterial.TILINGOFFSET));\r\n\t\ttilOff.x = x;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STY(): number {\r\n\t\treturn this._shaderValues.getVector(GPUSkinningUnlitMaterial.TILINGOFFSET).y;\r\n\t}\r\n\r\n\tset _MainTex_STY(y: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningUnlitMaterial.TILINGOFFSET));\r\n\t\ttilOff.y = y;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STZ(): number {\r\n\t\treturn this._shaderValues.getVector(GPUSkinningUnlitMaterial.TILINGOFFSET).z;\r\n\t}\r\n\r\n\tset _MainTex_STZ(z: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningUnlitMaterial.TILINGOFFSET));\r\n\t\ttilOff.z = z;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STW(): number {\r\n\t\treturn this._shaderValues.getVector(GPUSkinningUnlitMaterial.TILINGOFFSET).w;\r\n\t}\r\n\r\n\tset _MainTex_STW(w: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningUnlitMaterial.TILINGOFFSET));\r\n\t\ttilOff.w = w;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _Cutoff(): number {\r\n\t\treturn this.alphaTestValue;\r\n\t}\r\n\r\n\tset _Cutoff(value: number) {\r\n\t\tthis.alphaTestValue = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色R分量。\r\n\t */\r\n\tget albedoColorR(): number {\r\n\t\treturn this._ColorR;\r\n\t}\r\n\r\n\tset albedoColorR(value: number) {\r\n\t\tthis._ColorR = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色G分量。\r\n\t */\r\n\tget albedoColorG(): number {\r\n\t\treturn this._ColorG;\r\n\t}\r\n\r\n\tset albedoColorG(value: number) {\r\n\t\tthis._ColorG = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色B分量。\r\n\t */\r\n\tget albedoColorB(): number {\r\n\t\treturn this._ColorB;\r\n\t}\r\n\r\n\tset albedoColorB(value: number) {\r\n\t\tthis._ColorB = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色Z分量。\r\n\t */\r\n\tget albedoColorA(): number {\r\n\t\treturn this._ColorA;\r\n\t}\r\n\r\n\tset albedoColorA(value: number) {\r\n\t\tthis._ColorA = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色。\r\n\t */\r\n\tget albedoColor(): Vector4 {\r\n\t\treturn this._albedoColor;\r\n\t}\r\n\r\n\tset albedoColor(value: Vector4) {\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningUnlitMaterial.ALBEDOCOLOR));\r\n\t\tVector4.scale(value, this._albedoIntensity, finalAlbedo);\r\n\t\tthis._albedoColor = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningUnlitMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率强度。\r\n\t */\r\n\tget albedoIntensity(): number {\r\n\t\treturn this._albedoIntensity;\r\n\t}\r\n\r\n\tset albedoIntensity(value: number) {\r\n\t\tthis._AlbedoIntensity = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率贴图。\r\n\t */\r\n\tget albedoTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningUnlitMaterial.ALBEDOTEXTURE);\r\n\t}\r\n\r\n\tset albedoTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningUnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningUnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningUnlitMaterial.ALBEDOTEXTURE, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移X分量。\r\n\t */\r\n\tget tilingOffsetX(): number {\r\n\t\treturn this._MainTex_STX;\r\n\t}\r\n\r\n\tset tilingOffsetX(x: number) {\r\n\t\tthis._MainTex_STX = x;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移Y分量。\r\n\t */\r\n\tget tilingOffsetY(): number {\r\n\t\treturn this._MainTex_STY;\r\n\t}\r\n\r\n\tset tilingOffsetY(y: number) {\r\n\t\tthis._MainTex_STY = y;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移Z分量。\r\n\t */\r\n\tget tilingOffsetZ(): number {\r\n\t\treturn this._MainTex_STZ;\r\n\t}\r\n\r\n\tset tilingOffsetZ(z: number) {\r\n\t\tthis._MainTex_STZ = z;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移W分量。\r\n\t */\r\n\tget tilingOffsetW(): number {\r\n\t\treturn this._MainTex_STW;\r\n\t}\r\n\r\n\tset tilingOffsetW(w: number) {\r\n\t\tthis._MainTex_STW = w;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移。\r\n\t */\r\n\tget tilingOffset(): Vector4 {\r\n\t\treturn (<Vector4>this._shaderValues.getVector(GPUSkinningUnlitMaterial.TILINGOFFSET));\r\n\t}\r\n\r\n\tset tilingOffset(value: Vector4) {\r\n\t\tif (value) {\r\n\t\t\tif (value.x != 1 || value.y != 1 || value.z != 0 || value.w != 0)\r\n\t\t\t\tthis._shaderValues.addDefine(GPUSkinningUnlitMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t\telse\r\n\t\t\t\tthis._shaderValues.removeDefine(GPUSkinningUnlitMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t} else {\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningUnlitMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t}\r\n\t\tthis._shaderValues.setVector(GPUSkinningUnlitMaterial.TILINGOFFSET, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 是否支持顶点色。\r\n\t */\r\n\tget enableVertexColor(): boolean {\r\n\t\treturn this._enableVertexColor;\r\n\t}\r\n\r\n\tset enableVertexColor(value: boolean) {\r\n\t\tthis._enableVertexColor = value;\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningUnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningUnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\r\n\t}\r\n\r\n\t/**\r\n\t * 渲染模式。\r\n\t */\r\n\tset renderMode(value: number) {\r\n\t\tswitch (value) {\r\n\t\t\tcase GPUSkinningUnlitMaterial.RENDERMODE_OPAQUE:\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningUnlitMaterial.RENDERMODE_CUTOUT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n\t\t\t\tthis.alphaTest = true;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningUnlitMaterial.RENDERMODE_TRANSPARENT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.depthWrite = false;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_ENABLE_ALL;\r\n\t\t\t\tthis.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n\t\t\t\tthis.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"GPUSkinningUnlitMaterial : renderMode value error.\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 是否写入深度。\r\n\t */\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._shaderValues.getBool(GPUSkinningUnlitMaterial.DEPTH_WRITE);\r\n\t}\r\n\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._shaderValues.setBool(GPUSkinningUnlitMaterial.DEPTH_WRITE, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 剔除方式。\r\n\t */\r\n\tget cull(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningUnlitMaterial.CULL);\r\n\t}\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningUnlitMaterial.CULL, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合方式。\r\n\t */\r\n\tget blend(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningUnlitMaterial.BLEND);\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningUnlitMaterial.BLEND, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合源。\r\n\t */\r\n\tget blendSrc(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningUnlitMaterial.BLEND_SRC);\r\n\t}\r\n\r\n\tset blendSrc(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningUnlitMaterial.BLEND_SRC, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 混合目标。\r\n\t */\r\n\tget blendDst(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningUnlitMaterial.BLEND_DST);\r\n\t}\r\n\r\n\tset blendDst(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningUnlitMaterial.BLEND_DST, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 深度测试方式。\r\n\t */\r\n\tget depthTest(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningUnlitMaterial.DEPTH_TEST);\r\n\t}\r\n\r\n\tset depthTest(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningUnlitMaterial.DEPTH_TEST, value);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.setShaderName(GPUSkinningUnlitMaterial.shaderName);\r\n\t\tthis._shaderValues.setVector(GPUSkinningUnlitMaterial.ALBEDOCOLOR, new Vector4(1.0, 1.0, 1.0, 1.0));\r\n\t\tthis.renderMode = GPUSkinningUnlitMaterial.RENDERMODE_OPAQUE;\r\n\r\n\t\t// this._shaderValues.addDefine(Shader3D.getDefineByName(\"SKIN_4\"));\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: GPUSkinningUnlitMaterial = new GPUSkinningUnlitMaterial();\r\n\t\tthis.cloneTo(dest);\r\n\t\tdest._albedoIntensity = this._albedoIntensity;\r\n\t\tthis._albedoColor.cloneTo(dest._albedoColor);\r\n\t\tthis.lock;\r\n\t\treturn dest;\r\n\t}\r\n\r\n}","export default class LayaUtil\r\n{\r\n    static GetComponentsInChildren<T>(go:Laya.Node, componentType: typeof Laya.Component, outComponents?:T[]): T[]\r\n    {\r\n        if(!outComponents)\r\n        {\r\n            outComponents = [];\r\n        }\r\n\r\n        for(let i = 0, len = go.numChildren; i < len; i ++)\r\n        {\r\n            let child = go.getChildAt(i);\r\n            let component = child.getComponent(componentType);\r\n            if(component)\r\n            {\r\n                outComponents.push(component);\r\n            }\r\n\r\n            this.GetComponentsInChildren(child, componentType, outComponents);\r\n        }\r\n\r\n        return outComponents;\r\n    }\r\n}","import LayaUtil from \"./LayaUtil\";\r\n\r\nexport default class LayaExtends_Node\r\n{\r\n    private static isInited = false;\r\n    static Init()\r\n    {\r\n        if(this.isInited)\r\n            return;\r\n\r\n        this.isInited = true;\r\n        new LayaExtends_Node();\r\n    }\r\n\r\n\r\n    constructor()\r\n    {\r\n        Laya.Node.prototype.getComponentsInChildren = this.getComponentsInChildren;\r\n    }\r\n\r\n    \r\n    getComponentsInChildren<T>(componentType: typeof Laya.Component, outComponents?:T[]): T[]\r\n    {\r\n        if(outComponents)\r\n        {\r\n            outComponents.length = 0;\r\n        }\r\n        else\r\n        {\r\n            outComponents = [];\r\n        }\r\n        LayaUtil.GetComponentsInChildren(<any>this, componentType, outComponents);\r\n        return outComponents;\r\n    }\r\n\r\n\r\n}\r\n","\r\nimport Shader3D = Laya.Shader3D;\r\nimport SubShader = Laya.SubShader;\r\nimport SkinnedMeshSprite3D = Laya.SkinnedMeshSprite3D;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\nimport RenderState = Laya.RenderState;\r\nimport Scene3DShaderDeclaration = Laya.Scene3DShaderDeclaration;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport Material = Laya.Material;\r\nimport { GPUSkinningBaseMaterial } from \"./GPUSkinningBaseMaterial\";\r\nimport GPUSkiningVertexMesh from \"../Mesh/GPUSkiningVertexMesh\";\r\n\r\n\r\n\r\nexport class GPUSkinningCartoon2TextureMaterial extends GPUSkinningBaseMaterial\r\n{\r\n    \r\n    /** Shader名称 */\r\n    public static shaderName = \"GPUSkinningCartoon2Texture\";\r\n    public static outlinePass = \"GPUSkinningCartoon2TextureOutline\";\r\n\r\n\tprivate static _isInstalled: boolean = false;\r\n    public static async install()\r\n    {\r\n\t\tif(this._isInstalled)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isInstalled = true;\r\n        GPUSkinningCartoon2TextureMaterial.__initDefine__();\r\n        await GPUSkinningCartoon2TextureMaterial.initShader();\r\n\r\n        GPUSkinningCartoon2TextureMaterial.defaultMaterial = new GPUSkinningCartoon2TextureMaterial();\r\n        GPUSkinningCartoon2TextureMaterial.defaultMaterial.lock = true;\r\n    }\r\n\r\n    private static async initShader()\r\n    {\r\n\t\t\r\n        var outlineVS: string = await this.loadShaderVSAsync(GPUSkinningCartoon2TextureMaterial.outlinePass);\r\n\t\tvar outlinePS: string = await this.loadShaderPSAsync(GPUSkinningCartoon2TextureMaterial.outlinePass);\r\n\t\t\r\n        var vs: string = await GPUSkinningCartoon2TextureMaterial.loadShaderVSAsync(GPUSkinningCartoon2TextureMaterial.shaderName);\r\n        var ps: string = await GPUSkinningCartoon2TextureMaterial.loadShaderPSAsync(GPUSkinningCartoon2TextureMaterial.shaderName);\r\n        \r\n        \r\n        var attributeMap: object;\r\n        var uniformMap: object;\r\n        var stateMap: object;\r\n        var shader:Shader3D;\r\n        var subShader:SubShader;\r\n\r\n        attributeMap = \r\n        {\r\n\t\t\t'a_Position': VertexMesh.MESH_POSITION0,\r\n\t\t\t'a_Color': VertexMesh.MESH_COLOR0,\r\n\t\t\t'a_Normal': VertexMesh.MESH_NORMAL0,\r\n\t\t\t'a_Texcoord0': VertexMesh.MESH_TEXTURECOORDINATE0,\r\n\t\t\t'a_Texcoord1': VertexMesh.MESH_TEXTURECOORDINATE1,\r\n\t\t\t'a_Texcoord2': GPUSkiningVertexMesh.MESH_TEXTURECOORDINATE2,\r\n\t\t\t'a_MvpMatrix': VertexMesh.MESH_MVPMATRIX_ROW0,\r\n\t\t\t'a_WorldMat': VertexMesh.MESH_WORLDMATRIX_ROW0\r\n\t\t};\r\n\r\n        uniformMap = \r\n        {\r\n\t\t\t'u_GPUSkinning_TextureMatrix': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_TextureSize_NumPixelsPerFrame': Shader3D.PERIOD_MATERIAL,\r\n\r\n\t\t\t'u_GPUSkinning_RootMotion': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_RootMotion_CrossFade': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation': Shader3D.PERIOD_SPRITE,\r\n\t\t\t'u_GPUSkinning_FrameIndex_PixelSegmentation_Blend_CrossFade': Shader3D.PERIOD_SPRITE,\r\n\r\n\t\t\t\r\n            // 卡通材质 -- 阴影颜色\r\n\t\t\t'u_CartoonShadowColor': Shader3D.PERIOD_MATERIAL,\r\n            // 卡通材质 -- 颜色范围\r\n            'u_CartoonColorRange': Shader3D.PERIOD_MATERIAL,\r\n            // 卡通材质 -- 颜色强度\r\n            'u_CartoonColorDeep': Shader3D.PERIOD_MATERIAL,\r\n            // 卡通材质 -- 描边粗细\r\n            'u_CartoonOutlineWidth': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t// 卡通材质 -- 阴影贴图\r\n\t\t\t'u_ShadowTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t// 卡通材质 -- 场景光照贴图\r\n\t\t\t'u_SceneLightingTexture': Shader3D.PERIOD_SCENE,\r\n\t\t\t// 卡通材质 -- 场景光照贴图映射世界坐标大小\r\n\t\t\t'u_SceneLightingSize': Shader3D.PERIOD_SCENE,\r\n\t\t\t\r\n\t\t\t'u_AlbedoTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlbedoColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_TilingOffset': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlphaTestValue': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t\r\n            \r\n\t\t\t'u_WorldMat': Shader3D.PERIOD_SPRITE,\r\n            'u_MvpMatrix': Shader3D.PERIOD_SPRITE,\r\n            \r\n\t\t\t'u_FogStart': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogRange': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogColor': Shader3D.PERIOD_SCENE,\r\n\r\n\t\t\t\r\n\t\t\t'u_DirationLightCount': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_LightBuffer': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_LightClusterBuffer': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_AmbientColor': Shader3D.PERIOD_SCENE,\r\n\t\t\t\r\n\t\t\t//legacy lighting\r\n\t\t\t'u_DirectionLight.color': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_DirectionLight.direction': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.position': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.range': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_PointLight.color': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.position': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.direction': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.range': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.spot': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_SpotLight.color': Shader3D.PERIOD_SCENE,\r\n\r\n\t\t\t'u_CameraPos': Shader3D.PERIOD_CAMERA\r\n\t\t};\r\n\r\n        stateMap = \r\n        {\r\n\t\t\t's_Cull': Shader3D.RENDER_STATE_CULL,\r\n\t\t\t's_Blend': Shader3D.RENDER_STATE_BLEND,\r\n\t\t\t's_BlendSrc': Shader3D.RENDER_STATE_BLEND_SRC,\r\n\t\t\t's_BlendDst': Shader3D.RENDER_STATE_BLEND_DST,\r\n\t\t\t's_DepthTest': Shader3D.RENDER_STATE_DEPTH_TEST,\r\n\t\t\t's_DepthWrite': Shader3D.RENDER_STATE_DEPTH_WRITE\r\n\t\t};\r\n\r\n        \r\n        shader = Shader3D.add(GPUSkinningCartoon2TextureMaterial.shaderName, null, null, true);\r\n        subShader =  new SubShader(attributeMap, uniformMap);\r\n\t\tshader.addSubShader(subShader);\r\n\t\t\r\n\t\t\r\n        var outlinePass = subShader.addShaderPass(outlineVS, outlinePS);\r\n\t\toutlinePass.renderState.cull = Laya.RenderState.CULL_FRONT;\r\n\t\t// outlinePass.renderState.depthWrite = false;\r\n\r\n        \r\n\r\n        var mainPass =  subShader.addShaderPass(vs, ps, stateMap);\r\n        // mainPass.renderState.cull = Laya.RenderState.CULL_BACK;\r\n        \r\n        \r\n    }\r\n\r\n\t\r\n\t/**渲染状态_不透明。*/\r\n\tstatic RENDERMODE_OPAQUE: number = 0;\r\n\t/**渲染状态_阿尔法测试。*/\r\n\tstatic RENDERMODE_CUTOUT: number = 1;\r\n\t/**渲染状态__透明混合。*/\r\n\tstatic RENDERMODE_TRANSPARENT: number = 2;\r\n\t/**渲染状态__加色法混合。*/\r\n\tstatic RENDERMODE_ADDTIVE: number = 3;\r\n\r\n\tstatic SHADERDEFINE_ALBEDOTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_SHADOWTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_SCENELIGHTINGTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_TILINGOFFSET: ShaderDefine;\r\n\tstatic SHADERDEFINE_ENABLEVERTEXCOLOR: ShaderDefine;\r\n\r\n\t\r\n    // 卡通材质 -- 阴影颜色\r\n    static CARTOON_SHADOWCOLOR: number = Shader3D.propertyNameToID(\"u_CartoonShadowColor\");\r\n    // 卡通材质 -- 颜色范围\r\n    static CARTOON_CORLORRANGE: number = Shader3D.propertyNameToID(\"u_CartoonColorRange\");\r\n    // 卡通材质 -- 颜色强度\r\n    static CARTOON_CORLORDEEP: number = Shader3D.propertyNameToID(\"u_CartoonColorDeep\");\r\n\t// 卡通材质 -- 描边粗细\r\n    static CARTOON_OUTLINEWIDTH: number = Shader3D.propertyNameToID(\"u_CartoonOutlineWidth\");\r\n\r\n\tstatic SCENELIGHTINGTEXTURE: number = Shader3D.propertyNameToID(\"u_SceneLightingTexture\");\r\n\tstatic SHADOWTEXTURE: number = Shader3D.propertyNameToID(\"u_ShadowTexture\");\r\n\tstatic ALBEDOTEXTURE: number = Shader3D.propertyNameToID(\"u_AlbedoTexture\");\r\n\tstatic ALBEDOCOLOR: number = Shader3D.propertyNameToID(\"u_AlbedoColor\");\r\n\tstatic TILINGOFFSET: number = Shader3D.propertyNameToID(\"u_TilingOffset\");\r\n\tstatic CULL: number = Shader3D.propertyNameToID(\"s_Cull\");\r\n\tstatic BLEND: number = Shader3D.propertyNameToID(\"s_Blend\");\r\n\tstatic BLEND_SRC: number = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n\tstatic BLEND_DST: number = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n\tstatic DEPTH_TEST: number = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n\tstatic DEPTH_WRITE: number = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n\r\n\t/** 默认材质，禁止修改*/\r\n\tstatic defaultMaterial: GPUSkinningCartoon2TextureMaterial;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __initDefine__(): void {\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ALBEDOTEXTURE = Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SHADOWTEXTURE = Shader3D.getDefineByName(\"SHADOWTEXTURE\");\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SCENELIGHTINGTEXTURE = Shader3D.getDefineByName(\"SCENELIGHTING\");\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_TILINGOFFSET = Shader3D.getDefineByName(\"TILINGOFFSET\");\r\n\t\tGPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\r\n\t}\r\n\r\n\tprivate _albedoColor: Vector4 = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\tprivate _albedoIntensity: number = 1.0;\r\n\tprivate _enableVertexColor: boolean = false;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorR(): number {\r\n\t\treturn this._albedoColor.x;\r\n\t}\r\n\r\n\tset _ColorR(value: number) {\r\n\t\tthis._albedoColor.x = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorG(): number {\r\n\t\treturn this._albedoColor.y;\r\n\t}\r\n\r\n\tset _ColorG(value: number) {\r\n\t\tthis._albedoColor.y = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorB(): number {\r\n\t\treturn this._albedoColor.z;\r\n\t}\r\n\r\n\tset _ColorB(value: number) {\r\n\t\tthis._albedoColor.z = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal \r\n\t */\r\n\tget _ColorA(): number {\r\n\t\treturn this._albedoColor.w;\r\n\t}\r\n\r\n\tset _ColorA(value: number) {\r\n\t\tthis._albedoColor.w = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _AlbedoIntensity(): number {\r\n\t\treturn this._albedoIntensity;\r\n\t}\r\n\r\n\tset _AlbedoIntensity(value: number) {\r\n\t\tif (this._albedoIntensity !== value) {\r\n\t\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.ALBEDOCOLOR));\r\n\t\t\tVector4.scale(this._albedoColor, value, finalAlbedo);\r\n\t\t\tthis._albedoIntensity = value;\r\n\t\t\tthis._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STX(): number {\r\n\t\treturn this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET).x;\r\n\t}\r\n\r\n\tset _MainTex_STX(x: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET));\r\n\t\ttilOff.x = x;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STY(): number {\r\n\t\treturn this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET).y;\r\n\t}\r\n\r\n\tset _MainTex_STY(y: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET));\r\n\t\ttilOff.y = y;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STZ(): number {\r\n\t\treturn this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET).z;\r\n\t}\r\n\r\n\tset _MainTex_STZ(z: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET));\r\n\t\ttilOff.z = z;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STW(): number {\r\n\t\treturn this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET).w;\r\n\t}\r\n\r\n\tset _MainTex_STW(w: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET));\r\n\t\ttilOff.w = w;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _Cutoff(): number {\r\n\t\treturn this.alphaTestValue;\r\n\t}\r\n\r\n\tset _Cutoff(value: number) {\r\n\t\tthis.alphaTestValue = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色R分量。\r\n\t */\r\n\tget albedoColorR(): number {\r\n\t\treturn this._ColorR;\r\n\t}\r\n\r\n\tset albedoColorR(value: number) {\r\n\t\tthis._ColorR = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色G分量。\r\n\t */\r\n\tget albedoColorG(): number {\r\n\t\treturn this._ColorG;\r\n\t}\r\n\r\n\tset albedoColorG(value: number) {\r\n\t\tthis._ColorG = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色B分量。\r\n\t */\r\n\tget albedoColorB(): number {\r\n\t\treturn this._ColorB;\r\n\t}\r\n\r\n\tset albedoColorB(value: number) {\r\n\t\tthis._ColorB = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色Z分量。\r\n\t */\r\n\tget albedoColorA(): number {\r\n\t\treturn this._ColorA;\r\n\t}\r\n\r\n\tset albedoColorA(value: number) {\r\n\t\tthis._ColorA = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色。\r\n\t */\r\n\tget albedoColor(): Vector4 {\r\n\t\treturn this._albedoColor;\r\n\t}\r\n\r\n\tset albedoColor(value: Vector4) {\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.ALBEDOCOLOR));\r\n\t\tVector4.scale(value, this._albedoIntensity, finalAlbedo);\r\n\t\tthis._albedoColor = value;\r\n\t\tthis._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率强度。\r\n\t */\r\n\tget albedoIntensity(): number {\r\n\t\treturn this._albedoIntensity;\r\n\t}\r\n\r\n\tset albedoIntensity(value: number) {\r\n\t\tthis._AlbedoIntensity = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率贴图。\r\n\t */\r\n\tget albedoTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningCartoon2TextureMaterial.ALBEDOTEXTURE);\r\n\t}\r\n\r\n\tset albedoTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningCartoon2TextureMaterial.ALBEDOTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * 阴影贴图\r\n\t */\r\n\tget shadowTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningCartoon2TextureMaterial.SHADOWTEXTURE);\r\n\t}\r\n\r\n\tset shadowTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SHADOWTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SHADOWTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningCartoon2TextureMaterial.SHADOWTEXTURE, value);\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * 场景光照\r\n\t */\r\n\tget sceneLightingTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(GPUSkinningCartoon2TextureMaterial.SCENELIGHTINGTEXTURE);\r\n\t}\r\n\r\n\tset sceneLightingTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_SCENELIGHTINGTEXTURE);\r\n\t\tthis._shaderValues.setTexture(GPUSkinningCartoon2TextureMaterial.SCENELIGHTINGTEXTURE, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移X分量。\r\n\t */\r\n\tget tilingOffsetX(): number {\r\n\t\treturn this._MainTex_STX;\r\n\t}\r\n\r\n\tset tilingOffsetX(x: number) {\r\n\t\tthis._MainTex_STX = x;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移Y分量。\r\n\t */\r\n\tget tilingOffsetY(): number {\r\n\t\treturn this._MainTex_STY;\r\n\t}\r\n\r\n\tset tilingOffsetY(y: number) {\r\n\t\tthis._MainTex_STY = y;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移Z分量。\r\n\t */\r\n\tget tilingOffsetZ(): number {\r\n\t\treturn this._MainTex_STZ;\r\n\t}\r\n\r\n\tset tilingOffsetZ(z: number) {\r\n\t\tthis._MainTex_STZ = z;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移W分量。\r\n\t */\r\n\tget tilingOffsetW(): number {\r\n\t\treturn this._MainTex_STW;\r\n\t}\r\n\r\n\tset tilingOffsetW(w: number) {\r\n\t\tthis._MainTex_STW = w;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移。\r\n\t */\r\n\tget tilingOffset(): Vector4 {\r\n\t\treturn (<Vector4>this._shaderValues.getVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET));\r\n\t}\r\n\r\n\tset tilingOffset(value: Vector4) {\r\n\t\tif (value) {\r\n\t\t\tif (value.x != 1 || value.y != 1 || value.z != 0 || value.w != 0)\r\n\t\t\t\tthis._shaderValues.addDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t\telse\r\n\t\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t} else {\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t}\r\n\t\tthis._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 是否支持顶点色。\r\n\t */\r\n\tget enableVertexColor(): boolean {\r\n\t\treturn this._enableVertexColor;\r\n\t}\r\n\r\n\tset enableVertexColor(value: boolean) {\r\n\t\tthis._enableVertexColor = value;\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(GPUSkinningCartoon2TextureMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\r\n\t}\r\n\r\n\t/**\r\n\t * 渲染模式。\r\n\t */\r\n\tset renderMode(value: number) {\r\n\t\tswitch (value) {\r\n\t\t\tcase GPUSkinningCartoon2TextureMaterial.RENDERMODE_OPAQUE:\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningCartoon2TextureMaterial.RENDERMODE_CUTOUT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n\t\t\t\tthis.alphaTest = true;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase GPUSkinningCartoon2TextureMaterial.RENDERMODE_TRANSPARENT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.depthWrite = false;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_ENABLE_ALL;\r\n\t\t\t\tthis.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n\t\t\t\tthis.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"GPUSkinningCartoon2TextureMaterial : renderMode value error.\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 是否写入深度。\r\n\t */\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._shaderValues.getBool(GPUSkinningCartoon2TextureMaterial.DEPTH_WRITE);\r\n\t}\r\n\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._shaderValues.setBool(GPUSkinningCartoon2TextureMaterial.DEPTH_WRITE, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 剔除方式。\r\n\t */\r\n\tget cull(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.CULL);\r\n\t}\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.CULL, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合方式。\r\n\t */\r\n\tget blend(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.BLEND);\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.BLEND, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合源。\r\n\t */\r\n\tget blendSrc(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.BLEND_SRC);\r\n\t}\r\n\r\n\tset blendSrc(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.BLEND_SRC, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 混合目标。\r\n\t */\r\n\tget blendDst(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.BLEND_DST);\r\n\t}\r\n\r\n\tset blendDst(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.BLEND_DST, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 深度测试方式。\r\n\t */\r\n\tget depthTest(): number {\r\n\t\treturn this._shaderValues.getInt(GPUSkinningCartoon2TextureMaterial.DEPTH_TEST);\r\n\t}\r\n\r\n\tset depthTest(value: number) {\r\n\t\tthis._shaderValues.setInt(GPUSkinningCartoon2TextureMaterial.DEPTH_TEST, value);\r\n\t}\r\n\r\n\t\r\n\tprivate _enableLighting: boolean;\r\n\t/**\r\n\t * 是否启用光照。\r\n\t */\r\n\tget enableLighting(): boolean {\r\n\t\treturn this._enableLighting;\r\n\t}\r\n\r\n\tset enableLighting(value: boolean) {\r\n\t\tif (this._enableLighting !== value) {\r\n\t\t\tif (value) \r\n\t\t\t{\r\n\t\t\t\tthis._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tthis._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);\r\n\t\t\t}\r\n\t\t\tthis._enableLighting = value;\r\n\t\t}\r\n\t}\r\n\r\n    // 卡通材质 -- 阴影颜色\r\n\tprivate _cartoonShadowColor: Vector4;\r\n\t\r\n    // 卡通材质 -- 阴影颜色\r\n    get CartoonShadowColor() {\r\n        return this._cartoonShadowColor;\r\n    }\r\n    set CartoonShadowColor(value:Vector4) {\r\n        this._cartoonShadowColor = value;\r\n        this._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.CARTOON_SHADOWCOLOR, value);\r\n\t}\r\n\t\r\n\t\r\n    /** 卡通材质 -- 颜色范围 */\r\n    get CartoonColorRange() {\r\n        return this._shaderValues.getNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_CORLORRANGE);\r\n    }\r\n    set CartoonColorRange(value) {\r\n        value = Math.max(0.0, Math.min(2, value));\r\n        this._shaderValues.setNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_CORLORRANGE, value);\r\n\t}\r\n\t\r\n\t\r\n    /** 卡通材质 -- 颜色强度 */\r\n\tget CartoonColorDeep() \r\n\t{\r\n        return this._shaderValues.getNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_CORLORDEEP);\r\n\t}\r\n\t\r\n\tset CartoonColorDeep(value) \r\n\t{\r\n        value = Math.max(-1.0, Math.min(100.0, value));\r\n        this._shaderValues.setNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_CORLORDEEP, value);\r\n\t}\r\n\t\r\n\t\r\n    /** 卡通材质 -- 描边粗细 */\r\n    get CartoonOutlineWidth() {\r\n        return this._shaderValues.getNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_OUTLINEWIDTH);\r\n    }\r\n    set CartoonOutlineWidth(value) {\r\n        this._shaderValues.setNumber(GPUSkinningCartoon2TextureMaterial.CARTOON_OUTLINEWIDTH, value);\r\n    }\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.setShaderName(GPUSkinningCartoon2TextureMaterial.shaderName);\r\n\t\tthis._albedoIntensity = 1.0;\r\n\t\tthis._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.ALBEDOCOLOR, new Vector4(1.0, 1.0, 1.0, 1.0));\r\n\t\tthis._shaderValues.setVector(GPUSkinningCartoon2TextureMaterial.TILINGOFFSET, new Vector4(1.0, 1.0, 0.0, 0.0));\r\n\t\t// 卡通材质 -- 阴影颜色\r\n\t\tthis.CartoonShadowColor = new Vector4(0.1764706, 0.1764706, 0.1764706, 1.0);\r\n\t\t// 卡通材质 -- 颜色范围\r\n\t\tthis.CartoonColorRange = 0.08;\r\n\t\t// 卡通材质 -- 颜色强度\r\n\t\tthis.CartoonColorDeep = 88.4;\r\n\t\t// 卡通材质 -- 描边粗细\r\n\t\tthis.CartoonOutlineWidth = 0.004;\r\n\r\n\r\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, 0.5);\r\n\r\n\t\tthis._enableLighting = true;\r\n\t\tthis.renderMode = GPUSkinningCartoon2TextureMaterial.RENDERMODE_OPAQUE;\r\n\r\n\t\t// this._shaderValues.addDefine(Shader3D.getDefineByName(\"SKIN_4\"));\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: GPUSkinningCartoon2TextureMaterial = new GPUSkinningCartoon2TextureMaterial();\r\n\t\tthis.cloneTo(dest);\r\n        this._albedoColor.cloneTo(dest._albedoColor);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\t\r\n\tcloneTo(destObject: any): void {\r\n\t\tsuper.cloneTo(destObject);\r\n\t\tvar destMaterial: GPUSkinningCartoon2TextureMaterial = (<GPUSkinningCartoon2TextureMaterial>destObject);\r\n\t\tdestMaterial._enableLighting = this._enableLighting;\r\n\t\tdestMaterial._albedoIntensity = this._albedoIntensity;\r\n\t\tdestMaterial._enableVertexColor = this._enableVertexColor;\r\n\t\tthis._albedoColor.cloneTo(destMaterial._albedoColor);\r\n\t\tthis._cartoonShadowColor.cloneTo(destMaterial._cartoonShadowColor);\r\n\t\t\r\n\t}\r\n\r\n}","import GPUSkiningMesh from \"./Mesh/GPUSkiningMesh\";\r\n\r\nimport LoaderManager = Laya.LoaderManager;\r\nimport Loader = Laya.Loader;\r\nimport Event = Laya.Event;\r\nimport Shader3D = Laya.Shader3D;\r\nimport HalfFloatUtils = Laya.HalfFloatUtils;\r\nimport GPUSkinningAnimation from \"./Datas/GPUSkinningAnimation\";\r\nimport GPUSkinningPlayerMono from \"./GPUSkinningPlayerMono\";\r\nimport { GPUSkinningBaseMaterial } from \"./Material/GPUSkinningBaseMaterial\";\r\nimport { GPUSkinningUnlitMaterial } from \"./Material/GPUSkinningUnlitMaterial\";\r\nimport GPUSkinningPlayerMonoManager from \"./GPUSkinningPlayerMonoManager\";\r\nimport GPUSkinningPlayer from \"./GPUSkinningPlayer\";\r\nimport GPUSkinningPlayerResources from \"./GPUSkinningPlayerResources\";\r\nimport GPUSkinningPlayerJoint from \"./GPUSkinningPlayerJoint\";\r\nimport { GPUSkiningLoadModelV05 } from \"./Mesh/GPUSkiningLoadModelV05\";\r\nimport GPUSkiningVertexMesh from \"./Mesh/GPUSkiningVertexMesh\";\r\nimport GPUSkinningClip from \"./Datas/GPUSkinningClip\";\r\nimport { GPUSkinningCartoonMaterial } from \"./Material/GPUSkinningCartoonMaterial\";\r\nimport LayaExtends_Node from \"../LayaExtends/LayaExtends_Node\";\r\nimport { GPUSkinningCartoon2TextureMaterial } from \"./Material/GPUSkinningCartoon2TextureMaterial\";\r\nimport SceneMaterial from \"./Material/SceneMaterial\";\r\n// import LayaExtends_Laya3D from \"../LayaExtends/LayaExtends_Laya3D\";\r\n// import LayaExtends_Texture2D from \"../LayaExtends/LayaExtends_Texture2D\";\r\nexport default class GPUSkining\r\n{\r\n    static IsPauseAll: boolean = false;\r\n    static EXT_SKING_MESH = \"skinlm\";\r\n\r\n    static async InitAsync()\r\n    {\r\n      \r\n      window['GPUSkining'] = GPUSkining;\r\n      window['GPUSkinningPlayerMonoManager'] = GPUSkinningPlayerMonoManager;\r\n      window['GPUSkinningPlayerMono'] = GPUSkinningPlayerMono;\r\n      window['GPUSkinningPlayerResources'] = GPUSkinningPlayerResources;\r\n      window['GPUSkinningPlayer'] = GPUSkinningPlayer;\r\n      window['GPUSkinningPlayerJoint'] = GPUSkinningPlayerJoint;\r\n      window['GPUSkiningMesh'] = GPUSkiningMesh;\r\n      window['GPUSkiningLoadModelV05'] = GPUSkiningLoadModelV05;\r\n      window['GPUSkiningVertexMesh'] = GPUSkiningVertexMesh;\r\n      window['GPUSkinningBaseMaterial'] = GPUSkinningBaseMaterial;\r\n      window['GPUSkinningUnlitMaterial'] = GPUSkinningUnlitMaterial;\r\n      window['GPUSkinningAnimation'] = GPUSkinningAnimation;\r\n      window['GPUSkinningClip'] = GPUSkinningClip;\r\n      window['SceneMaterial'] = SceneMaterial;\r\n      \r\n      \r\n      var GPUSkinningIncludegGLSL: string = await GPUSkinningBaseMaterial.loadShaderGlslAsync(\"GPUSkinningInclude\");\r\n      Shader3D.addInclude(\"GPUSkinningInclude.glsl\", GPUSkinningIncludegGLSL);\r\n\r\n      // var GPUSkinningIncludegGLSL: string = await GPUSkinningBaseMaterial.loadShaderGlslAsync(\"GPUSkinningInclude4\");\r\n      // Shader3D.addInclude(\"GPUSkinningInclude4.glsl\", GPUSkinningIncludegGLSL);\r\n\r\n      GPUSkinningBaseMaterial.__initDefine__();\r\n      // await GPUSkinningUnlitMaterial.install();\r\n      // await GPUSkinningCartoonMaterial.install();\r\n      await GPUSkinningCartoon2TextureMaterial.install();\r\n\r\n\r\n      LayaExtends_Node.Init();\r\n      // LayaExtends_Texture2D.Init();\r\n      // LayaExtends_Laya3D.Init();\r\n\r\n      Laya3D.SKING_MESH = \"SKING_MESH\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n      var createMap: any = LoaderManager.createMap;\r\n      createMap[\"skinlm\"] = [Laya3D.SKING_MESH, GPUSkiningMesh._parse];\r\n\r\n      \r\n      var parserMap: any = Loader.parserMap;\r\n      parserMap[Laya3D.SKING_MESH] = this._loadMesh;\r\n        \r\n    }\r\n\r\n    private static _loadMesh(loader: Loader): void \r\n    {\r\n      loader.on(Event.LOADED, null, this._onMeshLmLoaded, [loader]);\r\n      loader.load(loader.url, Loader.BUFFER, false, null, true);\r\n    }\r\n\r\n    static _onMeshLmLoaded(loader: Loader, lmData: ArrayBuffer): void \r\n    {\r\n      loader._cache = loader._createCache;\r\n      var mesh: GPUSkiningMesh = GPUSkiningMesh._parse(lmData, loader._propertyParams, loader._constructParams);\r\n      Laya3D._endLoad(loader, mesh);\r\n    }\r\n    \r\n\r\n\r\n    static resRoot = \"res3d/Conventional/\";\r\n    static GetAnimName(name: string): string\r\n    {\r\n      return `GPUSKinning_${name}_Anim.bin`;\r\n    }\r\n\r\n    static GetMeshName(name: string): string\r\n    {\r\n      return `GPUSKinning_${name}_Mesh.bin`;\r\n    }\r\n    \r\n    static GetMatrixTextureName(name: string): string\r\n    {\r\n      return `GPUSKinning_${name}_MatrixTexture.bin`;\r\n    }\r\n    \r\n    static GetMainTextureName(name: string): string\r\n    {\r\n      return `GPUSKinning_${name}_MainTexture.png`;\r\n    }\r\n    \r\n    static GetShadowTextureName(name: string): string\r\n    {\r\n      return `GPUSKinning_${name}_ShadowTexture.png`;\r\n    }\r\n\r\n    static GetPath(name: string)\r\n    {\r\n      return this.resRoot + name;\r\n    }\r\n\r\n    static LoadAnimTexture(path: string, width: int, height:int, callback:(  (anim: Laya.Texture2D) => any))\r\n    {\r\n          Laya.loader.load(path, Laya.Handler.create(this, (arrayBuffer:ArrayBuffer | Laya.Texture2D)=>\r\n          {\r\n            var texture: Laya.Texture2D;\r\n            if(arrayBuffer instanceof ArrayBuffer)\r\n            {\r\n              var f32 = new Float32Array(arrayBuffer);\r\n              texture = new Laya.Texture2D(width, height, Laya.TextureFormat.R32G32B32A32, false, true);\r\n              texture.wrapModeU = Laya.BaseTexture.WARPMODE_CLAMP;\r\n              texture.wrapModeV = Laya.BaseTexture.WARPMODE_CLAMP;\r\n              texture.filterMode = Laya.BaseTexture.FILTERMODE_POINT;\r\n              texture.anisoLevel = 0;\r\n              texture.lock = true;\r\n              texture.setSubPixels(0, 0, width, height, f32, 0);\r\n              texture._url =  Laya.URL.formatURL(path);\r\n\r\n\r\n              Laya.Loader.clearRes(path);\r\n              Laya.Loader.cacheRes(path, texture);\r\n            }\r\n            else\r\n            {\r\n              texture = arrayBuffer;\r\n            }\r\n            \r\n            callback(texture);\r\n\r\n          }), null, Laya.Loader.BUFFER);\r\n\r\n    }\r\n\r\n    \r\n\tstatic LoadAnimTextureAsync(path: string, width: int, height:int): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n        this.LoadAnimTexture(path, width, height, (res: Laya.Texture2D)=>{\r\n          resolve(res);\r\n        });\r\n\t\t});\r\n  }\r\n  \r\n\tstatic LoadAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.load(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n        resolve(data);\r\n\r\n\t\t\t}), null, type);\r\n\t\t});\r\n\t}\r\n    \r\n\tstatic Load3DAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.create(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n        Laya.timer.frameOnce(1, this, ()=>{\r\n\r\n          resolve(data);\r\n\r\n        })\r\n\t\t\t}), null, type);\r\n\t\t});\r\n\t}\r\n\r\n\r\n    static GetLoadItemList(list: {url:string, type:string}[],name: string, hasShadowTexture?: boolean,  mainTexturePath?: string): {url:string, type:string}[]\r\n    {\r\n      var animPath: string = this.GetPath(this.GetAnimName(name));\r\n      var meshPath: string = this.GetPath(this.GetMeshName(name));\r\n      var matrixTexturePath: string = this.GetPath(this.GetMatrixTextureName(name));\r\n      if(mainTexturePath == null || mainTexturePath == \"\")\r\n      { \r\n        mainTexturePath = this.GetPath(this.GetMainTextureName(name));\r\n      }\r\n\r\n\r\n      if(!list)\r\n      {\r\n        list = [];\r\n      }\r\n\r\n\r\n      list.push(\r\n                {url: animPath, type: Laya.Loader.BUFFER},\r\n                {url: meshPath, type: Laya.Loader.BUFFER},\r\n                {url: matrixTexturePath, type: Laya.Loader.BUFFER},\r\n                {url: mainTexturePath, type: Laya.Loader.TEXTURE2D},\r\n             );\r\n      if(hasShadowTexture)\r\n      {\r\n          var shadowTexturePath = this.GetPath(this.GetShadowTextureName(name));\r\n          list.push({url: shadowTexturePath, type: Laya.Loader.TEXTURE2D});\r\n      }\r\n      return list;\r\n    }\r\n\r\n    static async CreateByNameAsync(name: string, hasShadowTexture?: boolean, materialCls?: any): Promise<GPUSkinningPlayerMono>\r\n    {\r\n      return new Promise<GPUSkinningPlayerMono>((resolve)=>\r\n      {\r\n            this.CreateByName(name, Laya.Handler.create(this, (mono: GPUSkinningPlayerMono)=>{\r\n              resolve(mono);\r\n            }), hasShadowTexture, materialCls);\r\n      })\r\n    }\r\n\r\n    static CreateByName(name: string, callback:Laya.Handler, hasShadowTexture?: boolean, materialCls?: any)\r\n    {\r\n      if(!materialCls)\r\n      {\r\n        materialCls = GPUSkinningCartoon2TextureMaterial;\r\n      }\r\n      var animPath: string = this.GetPath(this.GetAnimName(name));\r\n      var meshPath: string = this.GetPath(this.GetMeshName(name));\r\n      var matrixTexturePath: string = this.GetPath(this.GetMatrixTextureName(name));\r\n      var mainTexturePath = this.GetPath(this.GetMainTextureName(name));\r\n\r\n      var shadowTexturePath = this.GetPath(this.GetShadowTextureName(name));\r\n      GPUSkinningAnimation.Load(animPath, (anim: GPUSkinningAnimation)=>\r\n      {\r\n            if(anim == null)\r\n            {\r\n              console.error(\"GPUSkinning.CreateByName资源加载失败\", animPath);\r\n              callback.runWith(null);\r\n              return;\r\n            }\r\n            \r\n            GPUSkiningMesh.Load(meshPath, (mesh: GPUSkiningMesh)=>\r\n            {\r\n                  if(mesh == null)\r\n                  {\r\n                    console.error(\"GPUSkinning.CreateByName资源加载失败\", meshPath);\r\n                    callback.runWith(null);\r\n                    return;\r\n                  }\r\n\r\n                  this.LoadAnimTexture(matrixTexturePath, anim.textureWidth, anim.textureHeight, (animTexture: Laya.Texture2D)=>\r\n                  {\r\n                      if(animTexture == null)\r\n                      {\r\n                        console.error(\"GPUSkinning.CreateByName资源加载失败\", matrixTexturePath);\r\n                        callback.runWith(null);\r\n                      }\r\n                      \r\n                      Laya.loader.create(mainTexturePath, Laya.Handler.create(this, (mainTexture:Laya.Texture2D)=>\r\n                      {\r\n                          if(mainTexture == null)\r\n                          {\r\n                            console.error(\"GPUSkinning.CreateByName资源加载失败\", mainTexturePath);\r\n                          }\r\n\r\n                          var createFun = (shadowTexture?:Laya.Texture2D)=>\r\n                          {\r\n                            var material:GPUSkinningCartoon2TextureMaterial = new materialCls();\r\n                            material.albedoTexture = mainTexture;\r\n                            material.GPUSkinning_TextureMatrix = animTexture;\r\n                            material.__mname = name + \" prefab\";\r\n                            if(shadowTexture)\r\n                            {\r\n                              material.shadowTexture = shadowTexture;\r\n                            }\r\n  \r\n                            var sprite = new Laya.MeshSprite3D();\r\n                            var mono: GPUSkinningPlayerMono = sprite.addComponent(GPUSkinningPlayerMono);\r\n                            mono.SetData(anim, mesh, material, animTexture);\r\n                            callback.runWith(mono);\r\n                          }\r\n\r\n                          \r\n                          if(hasShadowTexture)\r\n                          {  \r\n                              Laya.loader.create(shadowTexturePath, Laya.Handler.create(this, (shadowTexture:Laya.Texture2D)=>\r\n                              {\r\n                                createFun(shadowTexture);\r\n                                  \r\n                              }), null, Laya.Loader.TEXTURE2D);\r\n                          }\r\n                          else\r\n                          {\r\n                              createFun();\r\n                          }\r\n                         \r\n                          \r\n                        \r\n\r\n                      }), null, Laya.Loader.TEXTURE2D);\r\n\r\n                  });\r\n\r\n\r\n\r\n              \r\n            })\r\n\r\n\r\n      })\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\nwindow['GPUSkining'] = GPUSkining;\r\nwindow['SceneMaterial'] = SceneMaterial;","import { TestScene } from \"./TestSene\";\r\nimport GPUSkinningPlayerMono from \"../GPUSkinning/GPUSkinningPlayerMono\";\r\nimport GPUSkinningAnimation from \"../GPUSkinning/Datas/GPUSkinningAnimation\";\r\n\r\nimport Mesh = Laya.Mesh;\r\nimport Material = Laya.Material;\r\nimport Texture2D = Laya.Texture2D;\r\nimport GPUSkining from \"../GPUSkinning/GPUSkining\";\r\nimport { GPUSkinningUnlitMaterial } from \"../GPUSkinning/Material/GPUSkinningUnlitMaterial\";\r\nimport { GPUSkinningWrapMode } from \"../GPUSkinning/Datas/GPUSkinningWrapMode\";\r\n\r\n\r\nexport default class TestShader\r\n{\r\n    scene: TestScene;\r\n    constructor()\r\n    {\r\n        this.scene = TestScene.create();\r\n        Laya.stage.addChild(this.scene);\r\n        this.InitAsync();\r\n    }\r\n\r\n    async InitAsync()\r\n    {\r\n        GPUSkining.resRoot = \"res3d/GPUSKinning-30/\";\r\n        await GPUSkining.InitAsync();\r\n        \r\n\r\n\r\n        var nameList = [\r\n            \"Hero_1004_Dongzhuo_Skin1\",\r\n        ];\r\n\r\n        for(var j = 0; j < nameList.length; j ++)\r\n        {\r\n            var resId = nameList[j];\r\n            var mono = await GPUSkining.CreateByNameAsync(nameList[j], true);\r\n            window['mono'] = mono;\r\n            mono.Player.Play(\"Idle\");\r\n            // for(var i = 0; i < mono.anim.clips.length; i ++)\r\n            // {\r\n            //     mono.anim.clips[i].wrapMode = GPUSkinningWrapMode.Loop;\r\n            //     mono.anim.clips[i].individualDifferenceEnabled =true;\r\n            // }\r\n\r\n            this.scene.addChild(mono.owner);\r\n            break;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n}","/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\r\n\r\n/*\r\n* 游戏初始化配置;\r\n*/\r\nexport default class GameConfig{\r\n    static width:number=1334;\r\n    static height:number=750;\r\n    static scaleMode:string= Laya.Stage.SCALE_SHOWALL;\r\n    static screenMode:string=\"none\";\r\n    static alignV:string=\"top\";\r\n    static alignH:string=\"left\";\r\n    static startScene:any=\"test/TestScene.scene\";\r\n    static sceneRoot:string=\"\";\r\n    static debug:boolean=false;\r\n    static stat:boolean=true;\r\n    static physicsDebug:boolean=false;\r\n    static exportSceneToJson:boolean=true;\r\n    constructor(){}\r\n    static init(){\r\n        // var reg: Function = Laya.ClassUtils.regClass;\r\n        // reg(\"script/GameUI.ts\",GameUI);\r\n    }\r\n}\r\nGameConfig.init();","import TestShader from \"./TestShader\";\r\nimport GameConfig from \"../GameConfig\";\r\nimport GPUSkining from \"../GPUSkinning/GPUSkining\";\r\n\r\n class TestMain \r\n{\r\n    constructor() \r\n    {\r\n\t\tthis.InitLaya();\r\n\r\n\r\n\t\tif(Laya.Browser.onWeiXin)\r\n\t\t{\r\n\t\t\tLaya.URL.basePath = \"http://10.10.10.188:8900/bin/\";\r\n\t\t}\r\n\t\t\r\n\t\t// 启动游戏\r\n\t\tnew TestShader();\r\n\t\t\r\n\t\t\r\n\r\n\t}\r\n\r\n\t\r\n\r\n\tInitLaya()\r\n\t{\r\n\t\t//根据IDE设置初始化引擎\t\t\r\n\t\tif (window[\"Laya3D\"]) Laya3D.init(GameConfig.width, GameConfig.height);\r\n\t\telse Laya.init(GameConfig.width, GameConfig.height, Laya[\"WebGL\"]);\r\n\t\tLaya[\"Physics\"] && Laya[\"Physics\"].enable();\r\n\t\tLaya[\"DebugPanel\"] && Laya[\"DebugPanel\"].enable();\r\n\t\tLaya.stage.scaleMode = GameConfig.scaleMode;\r\n\t\tLaya.stage.screenMode = GameConfig.screenMode;\r\n\t\tLaya.stage.alignV = GameConfig.alignV;\r\n\t\tLaya.stage.alignH = GameConfig.alignH;\r\n\t\t//兼容微信不支持加载scene后缀场景\r\n\t\tLaya.URL.exportSceneToJson = GameConfig.exportSceneToJson;\r\n\r\n\t\tLaya.Shader3D.debugMode = true;\r\n\r\n\t\t//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）\r\n\t\t// if (GameConfig.debug || Laya.Utils.getQueryString(\"debug\") == \"true\") Laya.enableDebugPanel();\r\n\t\tif (GameConfig.physicsDebug && Laya[\"PhysicsDebugDraw\"]) Laya[\"PhysicsDebugDraw\"].enable();\r\n\t\tif (GameConfig.stat) Laya.Stat.show();\r\n\t\tLaya.alertGlobalError = true;\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n//激活启动类\r\nnew TestMain();"],"names":["Vector3","Matrix4x4","Byte","Vector4","Shader3D","VertexMesh","SubShader","RenderState","Material"],"mappings":"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"}